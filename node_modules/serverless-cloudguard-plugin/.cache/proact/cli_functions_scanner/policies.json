{
  "acm": {
    "AddTagsToCertificate": "acm:AddTagsToCertificate", 
    "DeleteCertificate": "acm:DeleteCertificate", 
    "DescribeCertificate": "acm:DescribeCertificate", 
    "ExportCertificate": "acm:ExportCertificate", 
    "GetCertificate": "acm:GetCertificate", 
    "ImportCertificate": "acm:ImportCertificate", 
    "ListCertificates": "acm:ListCertificates", 
    "ListTagsForCertificate": "acm:ListTagsForCertificate", 
    "RemoveTagsFromCertificate": "acm:RemoveTagsFromCertificate", 
    "RenewCertificate": "acm:RenewCertificate", 
    "RequestCertificate": "acm:RequestCertificate", 
    "ResendValidationEmail": "acm:ResendValidationEmail", 
    "UpdateCertificateOptions": "acm:UpdateCertificateOptions"
  }, 
  "acm-pca": {
    "CreateCertificateAuthority": "acm-pca:CreateCertificateAuthority", 
    "CreateCertificateAuthorityAuditReport": "acm-pca:CreateCertificateAuthorityAuditReport", 
    "CreatePermission": "acm-pca:CreatePermission", 
    "DeleteCertificateAuthority": "acm-pca:DeleteCertificateAuthority", 
    "DeletePermission": "acm-pca:DescribeCertificateAuthority", 
    "DescribeCertificateAuthority": "acm-pca:DescribeCertificateAuthorityAuditReport", 
    "DescribeCertificateAuthorityAuditReport": "acm-pca:DeletePermission", 
    "GetCertificate": "acm-pca:GetCertificate", 
    "GetCertificateAuthorityCertificate": "acm-pca:GetCertificateAuthorityCertificate", 
    "GetCertificateAuthorityCsr": "acm-pca:GetCertificateAuthorityCsr", 
    "ImportCertificateAuthorityCertificate": "acm-pca:ImportCertificateAuthorityCertificate", 
    "IssueCertificate": "acm-pca:IssueCertificate", 
    "ListCertificateAuthorities": "acm-pca:ListCertificateAuthorities", 
    "ListPermission": "acm-pca:ListPermission", 
    "ListPermissions": "acm-pca:ListPermissions", 
    "ListTags": "acm-pca:ListTags", 
    "RestoreCertificateAuthority": "acm-pca:RestoreCertificateAuthority", 
    "RevokeCertificate": "acm-pca:RevokeCertificate", 
    "TagCertificateAuthority": "acm-pca:TagCertificateAuthority", 
    "UntagCertificateAuthority": "acm-pca:UntagCertificateAuthority", 
    "UpdateCertificateAuthority": "acm-pca:UpdateCertificateAuthority"
  }, 
  "alexaforbusiness": {
    "ApproveSkill": "a4b:ApproveSkill", 
    "AssociateContactWithAddressBook": "a4b:AssociateContactWithAddressBook", 
    "AssociateDeviceWithRoom": "a4b:AssociateDeviceWithRoom", 
    "AssociateSkillGroupWithRoom": "a4b:AssociateSkillGroupWithRoom", 
    "AssociateSkillWithSkillGroup": "a4b:AssociateSkillWithSkillGroup", 
    "AssociateSkillWithUsers": "a4b:AssociateSkillWithUsers", 
    "CreateAddressBook": "a4b:CreateAddressBook", 
    "CreateBusinessReportSchedule": "a4b:CreateBusinessReportSchedule", 
    "CreateConferenceProvider": "a4b:CreateConferenceProvider", 
    "CreateContact": "a4b:CreateContact", 
    "CreateProfile": "a4b:CreateProfile", 
    "CreateRoom": "a4b:CreateRoom", 
    "CreateSkillGroup": "a4b:CreateSkillGroup", 
    "CreateUser": "a4b:CreateUser", 
    "DeleteAddressBook": "a4b:DeleteAddressBook", 
    "DeleteBusinessReportSchedule": "a4b:DeleteBusinessReportSchedule", 
    "DeleteConferenceProvider": "a4b:DeleteConferenceProvider", 
    "DeleteContact": "a4b:DeleteContact", 
    "DeleteDevice": "a4b:DeleteDevice", 
    "DeleteProfile": "a4b:DeleteProfile", 
    "DeleteRoom": "a4b:DeleteRoom", 
    "DeleteRoomSkillParameter": "a4b:DeleteRoomSkillParameter", 
    "DeleteSkillAuthorization": "a4b:DeleteSkillAuthorization", 
    "DeleteSkillGroup": "a4b:DeleteSkillGroup", 
    "DeleteUser": "a4b:DeleteUser", 
    "DisassociateContactFromAddressBook": "a4b:DisassociateContactFromAddressBook", 
    "DisassociateDeviceFromRoom": "a4b:DisassociateDeviceFromRoom", 
    "DisassociateSkillFromSkillGroup": "a4b:DisassociateSkillFromSkillGroup", 
    "DisassociateSkillFromUsers": "a4b:DisassociateSkillFromUsers", 
    "DisassociateSkillGroupFromRoom": "a4b:DisassociateSkillGroupFromRoom", 
    "ForgetSmartHomeAppliances": "a4b:ForgetSmartHomeAppliances", 
    "GetAddressBook": "a4b:GetAddressBook", 
    "GetConferencePreference": "a4b:GetConferencePreference", 
    "GetConferenceProvider": "a4b:GetConferenceProvider", 
    "GetContact": "a4b:GetContact", 
    "GetDevice": "a4b:GetDevice", 
    "GetProfile": "a4b:GetProfile", 
    "GetRoom": "a4b:GetRoom", 
    "GetRoomSkillParameter": "a4b:GetRoomSkillParameter", 
    "GetSkillGroup": "a4b:GetSkillGroup", 
    "ListBusinessReportSchedules": "a4b:ListBusinessReportSchedules", 
    "ListConferenceProviders": "a4b:ListConferenceProviders", 
    "ListDeviceEvents": "a4b:ListDeviceEvents", 
    "ListSkills": "a4b:ListSkills", 
    "ListSkillsStoreCategories": "a4b:ListSkillsStoreCategories", 
    "ListSkillsStoreSkillsByCategory": "a4b:ListSkillsStoreSkillsByCategory", 
    "ListSmartHomeAppliances": "a4b:ListSmartHomeAppliances", 
    "ListTags": "a4b:ListTags", 
    "PutConferencePreference": "a4b:PutConferencePreference", 
    "PutRoomSkillParameter": "a4b:PutRoomSkillParameter", 
    "PutSkillAuthorization": "a4b:PutSkillAuthorization", 
    "RegisterAVSDevice": "a4b:RegisterAVSDevice", 
    "RejectSkill": "a4b:RejectSkill", 
    "ResolveRoom": "a4b:ResolveRoom", 
    "RevokeInvitation": "a4b:RevokeInvitation", 
    "SearchAddressBooks": "a4b:SearchAddressBooks", 
    "SearchContacts": "a4b:SearchContacts", 
    "SearchDevices": "a4b:SearchDevices", 
    "SearchProfiles": "a4b:SearchProfiles", 
    "SearchRooms": "a4b:SearchRooms", 
    "SearchSkillGroups": "a4b:SearchSkillGroups", 
    "SearchUsers": "a4b:SearchUsers", 
    "SendInvitation": "a4b:SendInvitation", 
    "StartDeviceSync": "a4b:StartDeviceSync", 
    "StartSmartHomeApplianceDiscovery": "a4b:StartSmartHomeApplianceDiscovery", 
    "TagResource": "a4b:TagResource", 
    "UntagResource": "a4b:UntagResource", 
    "UpdateAddressBook": "a4b:UpdateAddressBook", 
    "UpdateBusinessReportSchedule": "a4b:UpdateBusinessReportSchedule", 
    "UpdateConferenceProvider": "a4b:UpdateConferenceProvider", 
    "UpdateContact": "a4b:UpdateContact", 
    "UpdateDevice": "a4b:UpdateDevice", 
    "UpdateProfile": "a4b:UpdateProfile", 
    "UpdateRoom": "a4b:UpdateRoom", 
    "UpdateSkillGroup": "a4b:UpdateSkillGroup"
  }, 
  "apigateway": {
    "CreateApiKey": [
      "apigateway:POST", 
      "apigateway:PUT"
    ], 
    "CreateAuthorizer": "apigateway:POST", 
    "CreateBasePathMapping": "apigateway:POST", 
    "CreateDeployment": "apigateway:POST", 
    "CreateDocumentationPart": "apigateway:POST", 
    "CreateDocumentationVersion": "apigateway:POST", 
    "CreateDomainName": "apigateway:POST", 
    "CreateModel": "apigateway:POST", 
    "CreateRequestValidator": "apigateway:POST", 
    "CreateResource": "apigateway:POST", 
    "CreateRestApi": [
      "apigateway:POST", 
      "apigateway:PUT"
    ], 
    "CreateStage": [
      "apigateway:POST", 
      "apigateway:PUT"
    ], 
    "CreateUsagePlan": [
      "apigateway:POST", 
      "apigateway:PUT"
    ], 
    "CreateUsagePlanKey": "apigateway:POST", 
    "CreateVpcLink": [
      "apigateway:POST", 
      "apigateway:PUT"
    ], 
    "DeleteApiKey": "apigateway:DELETE", 
    "DeleteAuthorizer": "apigateway:DELETE", 
    "DeleteBasePathMapping": "apigateway:DELETE", 
    "DeleteClientCertificate": "apigateway:DELETE", 
    "DeleteDeployment": "apigateway:DELETE", 
    "DeleteDocumentationPart": "apigateway:DELETE", 
    "DeleteDocumentationVersion": "apigateway:DELETE", 
    "DeleteDomainName": "apigateway:DELETE", 
    "DeleteGatewayResponse": "apigateway:DELETE", 
    "DeleteIntegration": "apigateway:DELETE", 
    "DeleteIntegrationResponse": "apigateway:DELETE", 
    "DeleteMethod": "apigateway:DELETE", 
    "DeleteMethodResponse": "apigateway:DELETE", 
    "DeleteModel": "apigateway:DELETE", 
    "DeleteRequestValidator": "apigateway:DELETE", 
    "DeleteResource": "apigateway:DELETE", 
    "DeleteRestApi": "apigateway:DELETE", 
    "DeleteStage": "apigateway:DELETE", 
    "DeleteUsagePlan": "apigateway:DELETE", 
    "DeleteUsagePlanKey": "apigateway:DELETE", 
    "DeleteVpcLink": "apigateway:DELETE", 
    "FlushStageAuthorizersCache": "apigateway:DELETE", 
    "FlushStageCache": "apigateway:DELETE", 
    "GenerateClientCertificate": [
      "apigateway:POST", 
      "apigateway:PUT"
    ], 
    "GetAccount": "apigateway:GET", 
    "GetApiKey": "apigateway:GET", 
    "GetApiKeys": "apigateway:GET", 
    "GetAuthorizer": "apigateway:GET", 
    "GetAuthorizers": "apigateway:GET", 
    "GetBasePathMapping": "apigateway:GET", 
    "GetBasePathMappings": "apigateway:GET", 
    "GetClientCertificate": "apigateway:GET", 
    "GetClientCertificates": "apigateway:GET", 
    "GetDeployment": "apigateway:GET", 
    "GetDeployments": "apigateway:GET", 
    "GetDocumentationPart": "apigateway:GET", 
    "GetDocumentationParts": "apigateway:GET", 
    "GetDocumentationVersion": "apigateway:GET", 
    "GetDocumentationVersions": "apigateway:GET", 
    "GetDomainName": "apigateway:GET", 
    "GetDomainNames": "apigateway:GET", 
    "GetExport": "apigateway:GET", 
    "GetGatewayResponse": "apigateway:GET", 
    "GetGatewayResponses": "apigateway:GET", 
    "GetIntegration": "apigateway:GET", 
    "GetIntegrationResponse": "apigateway:GET", 
    "GetMethod": "apigateway:GET", 
    "GetMethodResponse": "apigateway:GET", 
    "GetModel": "apigateway:GET", 
    "GetModelTemplate": "apigateway:GET", 
    "GetModels": "apigateway:GET", 
    "GetRequestValidator": "apigateway:GET", 
    "GetRequestValidators": "apigateway:GET", 
    "GetResource": "apigateway:GET", 
    "GetResources": "apigateway:GET", 
    "GetRestApi": "apigateway:GET", 
    "GetRestApis": "apigateway:GET", 
    "GetSdk": "apigateway:GET", 
    "GetSdkType": "apigateway:GET", 
    "GetSdkTypes": "apigateway:GET", 
    "GetStage": "apigateway:GET", 
    "GetStages": "apigateway:GET", 
    "GetTags": "apigateway:GET", 
    "GetUsage": "apigateway:GET", 
    "GetUsagePlan": "apigateway:GET", 
    "GetUsagePlanKey": "apigateway:GET", 
    "GetUsagePlanKeys": "apigateway:GET", 
    "GetUsagePlans": "apigateway:GET", 
    "GetVpcLink": "apigateway:GET", 
    "GetVpcLinks": "apigateway:GET", 
    "ImportApiKeys": "apigateway:POST", 
    "ImportDocumentationParts": "apigateway:PUT", 
    "ImportRestApi": "apigateway:PUT", 
    "PutGatewayResponse": "apigateway:PUT", 
    "PutIntegration": "apigateway:PUT", 
    "PutIntegrationResponse": "apigateway:PUT", 
    "PutMethod": "apigateway:PUT", 
    "PutMethodResponse": "apigateway:PUT", 
    "PutRestApi": "apigateway:PUT", 
    "TagResource": "apigateway:PUT", 
    "TestInvokeAuthorizer": "apigateway:POST", 
    "TestInvokeMethod": "apigateway:POST", 
    "UntagResource": "apigateway:DELETE", 
    "UpdateAccount": "apigateway:PATCH", 
    "UpdateApiKey": "apigateway:PATCH", 
    "UpdateAuthorizer": "apigateway:PATCH", 
    "UpdateBasePathMapping": "apigateway:PATCH", 
    "UpdateClientCertificate": "apigateway:PATCH", 
    "UpdateDeployment": "apigateway:PATCH", 
    "UpdateDocumentationPart": "apigateway:PATCH", 
    "UpdateDocumentationVersion": "apigateway:PATCH", 
    "UpdateDomainName": "apigateway:PATCH", 
    "UpdateGatewayResponse": "apigateway:PATCH", 
    "UpdateIntegration": "apigateway:PATCH", 
    "UpdateIntegrationResponse": "apigateway:PATCH", 
    "UpdateMethod": "apigateway:PATCH", 
    "UpdateMethodResponse": "apigateway:PATCH", 
    "UpdateModel": "apigateway:PATCH", 
    "UpdateRequestValidator": "apigateway:PATCH", 
    "UpdateResource": "apigateway:PATCH", 
    "UpdateRestApi": "apigateway:PATCH", 
    "UpdateStage": "apigateway:PATCH", 
    "UpdateUsage": "apigateway:PATCH", 
    "UpdateUsagePlan": "apigateway:PATCH", 
    "UpdateVpcLink": "apigateway:PATCH"
  }, 
  "application-autoscaling": {
    "DeleteScalingPolicy": "application-autoscaling:DeleteScalingPolicy", 
    "DeleteScheduledAction": "application-autoscaling:DeleteScheduledAction", 
    "DeregisterScalableTarget": "application-autoscaling:DeregisterScalableTarget", 
    "DescribeScalableTargets": "application-autoscaling:DescribeScalableTargets", 
    "DescribeScalingActivities": "application-autoscaling:DescribeScalingActivities", 
    "DescribeScalingPolicies": "application-autoscaling:DescribeScalingPolicies", 
    "DescribeScheduledActions": "application-autoscaling:DescribeScheduledActions", 
    "PutScalingPolicy": "application-autoscaling:PutScalingPolicy", 
    "PutScheduledAction": "application-autoscaling:PutScheduledAction", 
    "RegisterScalableTarget": "application-autoscaling:RegisterScalableTarget"
  }, 
  "appstream": {
    "AssociateFleet": "appstream:AssociateFleet", 
    "BatchAssociateUserStack": "appstream:BatchAssociateUserStack", 
    "BatchDisassociateUserStack": "appstream:BatchDisassociateUserStack", 
    "CopyImage": "appstream:*", 
    "CreateDirectoryConfig": "appstream:CreateDirectoryConfig", 
    "CreateFleet": "appstream:CreateFleet", 
    "CreateImageBuilder": "appstream:CreateImageBuilder", 
    "CreateImageBuilderStreamingURL": "appstream:CreateImageBuilderStreamingURL", 
    "CreateStack": "appstream:CreateStack", 
    "CreateStreamingURL": "appstream:CreateStreamingURL", 
    "CreateUsageReportSubscription": "appstream:CreateUsageReportSubscription", 
    "CreateUser": "appstream:CreateUser", 
    "DeleteDirectoryConfig": "appstream:DeleteDirectoryConfig", 
    "DeleteFleet": "appstream:DeleteFleet", 
    "DeleteImage": "appstream:DeleteImage", 
    "DeleteImageBuilder": "appstream:DeleteImageBuilder", 
    "DeleteImagePermissions": "appstream:*", 
    "DeleteStack": "appstream:DeleteStack", 
    "DeleteUsageReportSubscription": "appstream:DeleteUsageReportSubscription", 
    "DeleteUser": "appstream:DeleteUser", 
    "DescribeDirectoryConfigs": "appstream:DescribeDirectoryConfigs", 
    "DescribeFleets": "appstream:DescribeFleets", 
    "DescribeImageBuilders": "appstream:DescribeImageBuilders", 
    "DescribeImagePermissions": "appstream:*", 
    "DescribeImages": "appstream:DescribeImages", 
    "DescribeSessions": "appstream:DescribeSessions", 
    "DescribeStacks": "appstream:DescribeStacks", 
    "DescribeUsageReportSubscriptions": "appstream:DescribeUsageReportSubscriptions", 
    "DescribeUserStackAssociations": "appstream:DescribeUserStackAssociations", 
    "DescribeUsers": "appstream:DescribeUsers", 
    "DisableUser": "appstream:DisableUser", 
    "DisassociateFleet": "appstream:DisassociateFleet", 
    "EnableUser": "appstream:EnableUser", 
    "ExpireSession": "appstream:ExpireSession", 
    "ListAssociatedFleets": "appstream:ListAssociatedFleets", 
    "ListAssociatedStacks": "appstream:ListAssociatedStacks", 
    "ListTagsForResource": "appstream:ListTagsForResource", 
    "StartFleet": "appstream:StartFleet", 
    "StartImageBuilder": "appstream:StartImageBuilder", 
    "StopFleet": "appstream:StopFleet", 
    "StopImageBuilder": "appstream:StopImageBuilder", 
    "Stream": "appstream:Stream", 
    "TagResource": "appstream:TagResource", 
    "UntagResource": "appstream:UntagResource", 
    "UpdateDirectoryConfig": "appstream:UpdateDirectoryConfig", 
    "UpdateFleet": "appstream:UpdateFleet", 
    "UpdateImagePermissions": "appstream:*", 
    "UpdateStack": "appstream:UpdateStack"
  }, 
  "appsync": {
    "CreateApiKey": "appsync:CreateApiKey", 
    "CreateDataSource": "appsync:CreateDataSource", 
    "CreateFunction": "appsync:CreateFunction", 
    "CreateGraphqlApi": "appsync:CreateGraphqlApi", 
    "CreateResolver": "appsync:CreateResolver", 
    "CreateType": "appsync:CreateType", 
    "DeleteApiKey": "appsync:DeleteApiKey", 
    "DeleteDataSource": "appsync:DeleteDataSource", 
    "DeleteFunction": "appsync:DeleteFunction", 
    "DeleteGraphqlApi": "appsync:DeleteGraphqlApi", 
    "DeleteResolver": "appsync:DeleteResolver", 
    "DeleteType": "appsync:DeleteType", 
    "GetDataSource": "appsync:GetDataSource", 
    "GetFunction": "appsync:GetFunction", 
    "GetGraphqlApi": "appsync:GetGraphqlApi", 
    "GetIntrospectionSchema": "appsync:GetIntrospectionSchema", 
    "GetResolver": "appsync:GetResolver", 
    "GetSchemaCreationStatus": "appsync:GetSchemaCreationStatus", 
    "GetType": "appsync:GetType", 
    "GraphQL": "appsync:GraphQL", 
    "ListApiKeys": "appsync:ListApiKeys", 
    "ListDataSources": "appsync:ListDataSources", 
    "ListFunctions": "appsync:ListFunctions", 
    "ListGraphqlApis": "appsync:ListGraphqlApis", 
    "ListResolvers": "appsync:ListResolvers", 
    "ListTypes": "appsync:ListTypes", 
    "StartSchemaCreation": "appsync:StartSchemaCreation", 
    "UpdateApiKey": "appsync:UpdateApiKey", 
    "UpdateDataSource": "appsync:UpdateDataSource", 
    "UpdateFunction": "appsync:UpdateFunction", 
    "UpdateGraphqlApi": "appsync:UpdateGraphqlApi", 
    "UpdateResolver": "appsync:UpdateResolver", 
    "UpdateType": "appsync:UpdateType"
  }, 
  "athena": {
    "BatchGetNamedQuery": "athena:BatchGetNamedQuery", 
    "BatchGetQueryExecution": "athena:BatchGetQueryExecution", 
    "CancelQueryExecution": "athena:CancelQueryExecution", 
    "CreateNamedQuery": "athena:CreateNamedQuery", 
    "CreateWorkGroup": "athena:CreateWorkGroup", 
    "DeleteNamedQuery": "athena:DeleteNamedQuery", 
    "DeleteWorkGroup": "athena:DeleteWorkGroup", 
    "GetCatalogs": "athena:GetCatalogs", 
    "GetExecutionEngine": "athena:GetExecutionEngine", 
    "GetExecutionEngines": "athena:GetExecutionEngines", 
    "GetNamedQuery": "athena:GetNamedQuery", 
    "GetNamespace": "athena:GetNamespace", 
    "GetNamespaces": "athena:GetNamespaces", 
    "GetQueryExecution": "athena:GetQueryExecution", 
    "GetQueryExecutions": "athena:GetQueryExecutions", 
    "GetQueryResults": "athena:GetQueryResults", 
    "GetQueryResultsStream": "athena:GetQueryResultsStream", 
    "GetTable": "athena:GetTable", 
    "GetTables": "athena:GetTables", 
    "GetWorkGroup": "athena:GetWorkGroup", 
    "ListNamedQueries": "athena:ListNamedQueries", 
    "ListQueryExecutions": "athena:ListQueryExecutions", 
    "ListTagsForResource": "athena:ListTagsForResource", 
    "ListWorkGroups": "athena:ListWorkGroups", 
    "RunQuery": "athena:RunQuery", 
    "StartQueryExecution": "athena:StartQueryExecution", 
    "StopQueryExecution": "athena:StopQueryExecution", 
    "TagResource": "athena:TagResource", 
    "UntagResource": "athena:UntagResource", 
    "UpdateWorkGroup": "athena:UpdateWorkGroup"
  }, 
  "autoscaling": {
    "AttachInstances": "autoscaling:AttachInstances", 
    "AttachLoadBalancerTargetGroups": "autoscaling:AttachLoadBalancerTargetGroups", 
    "AttachLoadBalancers": "autoscaling:AttachLoadBalancers", 
    "BatchDeleteScheduledAction": "autoscaling:*", 
    "BatchPutScheduledUpdateGroupAction": "autoscaling:*", 
    "CompleteLifecycleAction": "autoscaling:CompleteLifecycleAction", 
    "CreateAutoScalingGroup": "autoscaling:CreateAutoScalingGroup", 
    "CreateLaunchConfiguration": "autoscaling:CreateLaunchConfiguration", 
    "CreateOrUpdateTags": "autoscaling:CreateOrUpdateTags", 
    "DeleteAutoScalingGroup": "autoscaling:DeleteAutoScalingGroup", 
    "DeleteLaunchConfiguration": "autoscaling:DeleteLaunchConfiguration", 
    "DeleteLifecycleHook": "autoscaling:DeleteLifecycleHook", 
    "DeleteNotificationConfiguration": "autoscaling:DeleteNotificationConfiguration", 
    "DeletePolicy": "autoscaling:DeletePolicy", 
    "DeleteScheduledAction": "autoscaling:DeleteScheduledAction", 
    "DeleteTags": "autoscaling:DeleteTags", 
    "DescribeAccountLimits": "autoscaling:DescribeAccountLimits", 
    "DescribeAdjustmentTypes": "autoscaling:DescribeAdjustmentTypes", 
    "DescribeAutoScalingGroups": "autoscaling:DescribeAutoScalingGroups", 
    "DescribeAutoScalingInstances": "autoscaling:DescribeAutoScalingInstances", 
    "DescribeAutoScalingNotificationTypes": "autoscaling:DescribeAutoScalingNotificationTypes", 
    "DescribeLaunchConfigurations": "autoscaling:DescribeLaunchConfigurations", 
    "DescribeLifecycleHookTypes": "autoscaling:DescribeLifecycleHookTypes", 
    "DescribeLifecycleHooks": "autoscaling:DescribeLifecycleHooks", 
    "DescribeLoadBalancerTargetGroups": "autoscaling:DescribeLoadBalancerTargetGroups", 
    "DescribeLoadBalancers": "autoscaling:DescribeLoadBalancers", 
    "DescribeMetricCollectionTypes": "autoscaling:DescribeMetricCollectionTypes", 
    "DescribeNotificationConfigurations": "autoscaling:DescribeNotificationConfigurations", 
    "DescribePolicies": "autoscaling:DescribePolicies", 
    "DescribeScalingActivities": "autoscaling:DescribeScalingActivities", 
    "DescribeScalingProcessTypes": "autoscaling:DescribeScalingProcessTypes", 
    "DescribeScheduledActions": "autoscaling:DescribeScheduledActions", 
    "DescribeTags": "autoscaling:DescribeTags", 
    "DescribeTerminationPolicyTypes": "autoscaling:DescribeTerminationPolicyTypes", 
    "DetachInstances": "autoscaling:DetachInstances", 
    "DetachLoadBalancerTargetGroups": "autoscaling:DetachLoadBalancerTargetGroups", 
    "DetachLoadBalancers": "autoscaling:DetachLoadBalancers", 
    "DisableMetricsCollection": "autoscaling:DisableMetricsCollection", 
    "EnableMetricsCollection": "autoscaling:EnableMetricsCollection", 
    "EnterStandby": "autoscaling:EnterStandby", 
    "ExecutePolicy": "autoscaling:ExecutePolicy", 
    "ExitStandby": "autoscaling:ExitStandby", 
    "PutLifecycleHook": "autoscaling:PutLifecycleHook", 
    "PutNotificationConfiguration": "autoscaling:PutNotificationConfiguration", 
    "PutScalingPolicy": "autoscaling:PutScalingPolicy", 
    "PutScheduledUpdateGroupAction": "autoscaling:PutScheduledUpdateGroupAction", 
    "RecordLifecycleActionHeartbeat": "autoscaling:RecordLifecycleActionHeartbeat", 
    "ResumeProcesses": "autoscaling:ResumeProcesses", 
    "SetDesiredCapacity": "autoscaling:SetDesiredCapacity", 
    "SetInstanceHealth": "autoscaling:SetInstanceHealth", 
    "SetInstanceProtection": "autoscaling:SetInstanceProtection", 
    "SuspendProcesses": "autoscaling:SuspendProcesses", 
    "TerminateInstanceInAutoScalingGroup": "autoscaling:TerminateInstanceInAutoScalingGroup", 
    "UpdateAutoScalingGroup": "autoscaling:UpdateAutoScalingGroup"
  }, 
  "autoscaling-plans": {
    "CreateScalingPlan": "autoscaling-plans:CreateScalingPlan", 
    "DeleteScalingPlan": "autoscaling-plans:DeleteScalingPlan", 
    "DescribeScalingPlanResources": "autoscaling-plans:DescribeScalingPlanResources", 
    "DescribeScalingPlans": "autoscaling-plans:DescribeScalingPlans", 
    "GetScalingPlanResourceForecastData": "autoscaling-plans:GetScalingPlanResourceForecastData", 
    "UpdateScalingPlan": "autoscaling-plans:UpdateScalingPlan"
  }, 
  "batch": {
    "CancelJob": "batch:CancelJob", 
    "CreateComputeEnvironment": "batch:CreateComputeEnvironment", 
    "CreateJobQueue": "batch:CreateJobQueue", 
    "DeleteComputeEnvironment": "batch:DeleteComputeEnvironment", 
    "DeleteJobQueue": "batch:DeleteJobQueue", 
    "DeregisterJobDefinition": "batch:DeregisterJobDefinition", 
    "DescribeComputeEnvironments": "batch:DescribeComputeEnvironments", 
    "DescribeJobDefinitions": "batch:DescribeJobDefinitions", 
    "DescribeJobQueues": "batch:DescribeJobQueues", 
    "DescribeJobs": "batch:DescribeJobs", 
    "ListJobs": "batch:ListJobs", 
    "RegisterJobDefinition": "batch:RegisterJobDefinition", 
    "SubmitJob": "batch:SubmitJob", 
    "TerminateJob": "batch:TerminateJob", 
    "UpdateComputeEnvironment": "batch:UpdateComputeEnvironment", 
    "UpdateJobQueue": "batch:UpdateJobQueue"
  }, 
  "budgets": {
    "CreateBudget": "budgets:*", 
    "CreateNotification": "budgets:*", 
    "CreateSubscriber": "budgets:*", 
    "DeleteBudget": "budgets:*", 
    "DeleteNotification": "budgets:*", 
    "DeleteSubscriber": "budgets:*", 
    "DescribeBudget": "budgets:*", 
    "DescribeBudgets": "budgets:*", 
    "DescribeNotificationsForBudget": "budgets:*", 
    "DescribeSubscribersForNotification": "budgets:*", 
    "UpdateBudget": "budgets:*", 
    "UpdateNotification": "budgets:*", 
    "UpdateSubscriber": "budgets:*"
  }, 
  "ce": {
    "GetCostAndUsage": "ce:GetCostAndUsage", 
    "GetCostForecast": "ce:GetCostForecast", 
    "GetDimensionValues": "ce:GetDimensionValues", 
    "GetReservationCoverage": "ce:GetReservationCoverage", 
    "GetReservationPurchaseRecommendation": "ce:GetReservationPurchaseRecommendation", 
    "GetReservationUtilization": "ce:GetReservationUtilization", 
    "GetTags": "ce:GetTags"
  }, 
  "cloud9": {
    "CreateEnvironmentEC2": "cloud9:CreateEnvironmentEC2", 
    "CreateEnvironmentMembership": "cloud9:CreateEnvironmentMembership", 
    "CreateEnvironmentSSH": "cloud9:CreateEnvironmentSSH", 
    "DeleteEnvironment": "cloud9:DeleteEnvironment", 
    "DeleteEnvironmentMembership": "cloud9:DeleteEnvironmentMembership", 
    "DescribeEnvironmentMemberships": "cloud9:DescribeEnvironmentMemberships", 
    "DescribeEnvironmentStatus": "cloud9:DescribeEnvironmentStatus", 
    "DescribeEnvironments": "cloud9:DescribeEnvironments", 
    "GetUserPublicKey": "cloud9:GetUserPublicKey", 
    "ListEnvironments": "cloud9:ListEnvironments", 
    "UpdateEnvironment": "cloud9:UpdateEnvironment", 
    "UpdateEnvironmentMembership": "cloud9:UpdateEnvironmentMembership", 
    "ValidateEnvironmentName": "cloud9:ValidateEnvironmentName        "
  }, 
  "clouddirectory": {
    "AddFacetToObject": "clouddirectory:AddFacetToObject", 
    "ApplySchema": "clouddirectory:ApplySchema", 
    "AttachObject": "clouddirectory:AttachObject", 
    "AttachPolicy": "clouddirectory:AttachPolicy", 
    "AttachToIndex": "clouddirectory:AttachToIndex", 
    "AttachTypedLink": "clouddirectory:AttachTypedLink", 
    "BatchRead": "clouddirectory:BatchRead", 
    "BatchWrite": "clouddirectory:BatchWrite", 
    "CreateDirectory": "clouddirectory:CreateDirectory", 
    "CreateFacet": "clouddirectory:CreateFacet", 
    "CreateIndex": "clouddirectory:CreateIndex", 
    "CreateObject": "clouddirectory:CreateObject", 
    "CreateSchema": "clouddirectory:CreateSchema", 
    "CreateTypedLinkFacet": "clouddirectory:CreateTypedLinkFacet", 
    "DeleteDirectory": "clouddirectory:DeleteDirectory", 
    "DeleteFacet": "clouddirectory:DeleteFacet", 
    "DeleteObject": "clouddirectory:DeleteObject", 
    "DeleteSchema": "clouddirectory:DeleteSchema", 
    "DeleteTypedLinkFacet": "clouddirectory:DeleteTypedLinkFacet", 
    "DetachFromIndex": "clouddirectory:DetachFromIndex", 
    "DetachObject": "clouddirectory:DetachObject", 
    "DetachPolicy": "clouddirectory:DetachPolicy", 
    "DetachTypedLink": "clouddirectory:DetachTypedLink", 
    "DisableDirectory": "clouddirectory:DisableDirectory", 
    "EnableDirectory": "clouddirectory:EnableDirectory", 
    "GetAppliedSchemaVersion": "clouddirectory:*", 
    "GetDirectory": "clouddirectory:GetDirectory", 
    "GetFacet": "clouddirectory:GetFacet", 
    "GetLinkAttributes": "clouddirectory:*", 
    "GetObjectAttributes": "clouddirectory:GetObjectAttributes", 
    "GetObjectInformation": "clouddirectory:GetObjectInformation", 
    "GetSchemaAsJson": "clouddirectory:GetSchemaAsJson", 
    "GetTypedLinkFacetInformation": "clouddirectory:GetTypedLinkFacetInformation", 
    "ListAppliedSchemaArns": "clouddirectory:ListAppliedSchemaArns", 
    "ListAttachedIndices": "clouddirectory:ListAttachedIndices", 
    "ListDevelopmentSchemaArns": "clouddirectory:ListDevelopmentSchemaArns", 
    "ListDirectories": "clouddirectory:ListDirectories", 
    "ListFacetAttributes": "clouddirectory:ListFacetAttributes", 
    "ListFacetNames": "clouddirectory:ListFacetNames", 
    "ListIncomingTypedLinks": "clouddirectory:ListIncomingTypedLinks", 
    "ListIndex": "clouddirectory:ListIndex", 
    "ListManagedSchemaArns": "clouddirectory:*", 
    "ListObjectAttributes": "clouddirectory:ListObjectAttributes", 
    "ListObjectChildren": "clouddirectory:ListObjectChildren", 
    "ListObjectParentPaths": "clouddirectory:ListObjectParentPaths", 
    "ListObjectParents": "clouddirectory:ListObjectParents", 
    "ListObjectPolicies": "clouddirectory:ListObjectPolicies", 
    "ListOutgoingTypedLinks": "clouddirectory:ListOutgoingTypedLinks", 
    "ListPolicyAttachments": "clouddirectory:ListPolicyAttachments", 
    "ListPublishedSchemaArns": "clouddirectory:ListPublishedSchemaArns", 
    "ListTagsForResource": "clouddirectory:ListTagsForResource", 
    "ListTypedLinkFacetAttributes": "clouddirectory:ListTypedLinkFacetAttributes", 
    "ListTypedLinkFacetNames": "clouddirectory:ListTypedLinkFacetNames", 
    "LookupPolicy": "clouddirectory:LookupPolicy", 
    "PublishSchema": "clouddirectory:PublishSchema", 
    "PutSchemaFromJson": "clouddirectory:PutSchemaFromJson", 
    "RemoveFacetFromObject": "clouddirectory:RemoveFacetFromObject", 
    "TagResource": "clouddirectory:TagResource", 
    "UntagResource": "clouddirectory:UntagResource", 
    "UpdateFacet": "clouddirectory:UpdateFacet", 
    "UpdateLinkAttributes": "clouddirectory:*", 
    "UpdateObjectAttributes": "clouddirectory:UpdateObjectAttributes", 
    "UpdateSchema": "clouddirectory:UpdateSchema", 
    "UpdateTypedLinkFacet": "clouddirectory:UpdateTypedLinkFacet", 
    "UpgradeAppliedSchema": "clouddirectory:*", 
    "UpgradePublishedSchema": "clouddirectory:*"
  }, 
  "cloudformation": {
    "CancelUpdateStack": "cloudformation:CancelUpdateStack", 
    "ContinueUpdateRollback": "cloudformation:ContinueUpdateRollback", 
    "CreateChangeSet": "cloudformation:CreateChangeSet", 
    "CreateStack": "cloudformation:CreateStack", 
    "CreateStackInstances": "cloudformation:*", 
    "CreateStackSet": "cloudformation:*", 
    "CreateUploadBucket": "cloudformation:CreateUploadBucket", 
    "DeleteChangeSet": "cloudformation:DeleteChangeSet", 
    "DeleteStack": "cloudformation:DeleteStack", 
    "DeleteStackInstances": "cloudformation:*", 
    "DeleteStackSet": "cloudformation:*", 
    "DescribeAccountLimits": "cloudformation:DescribeAccountLimits", 
    "DescribeChangeSet": "cloudformation:DescribeChangeSet", 
    "DescribeStackDriftDetectionStatus": "cloudformation:DescribeStackDriftDetectionStatus", 
    "DescribeStackEvents": "cloudformation:DescribeStackEvents", 
    "DescribeStackInstance": "cloudformation:*", 
    "DescribeStackResource": "cloudformation:DescribeStackResource", 
    "DescribeStackResourceDrifts": "cloudformation:DescribeStackResourceDrifts", 
    "DescribeStackResources": "cloudformation:DescribeStackResources", 
    "DescribeStackSet": "cloudformation:*", 
    "DescribeStackSetOperation": "cloudformation:*", 
    "DescribeStacks": "cloudformation:DescribeStacks", 
    "DetectStackDrift": "cloudformation:DetectStackDrift", 
    "DetectStackResourceDrift": "cloudformation:DetectStackResourceDrift", 
    "EstimateTemplateCost": "cloudformation:EstimateTemplateCost", 
    "ExecuteChangeSet": "cloudformation:ExecuteChangeSet", 
    "GetStackPolicy": "cloudformation:GetStackPolicy", 
    "GetTemplate": "cloudformation:GetTemplate", 
    "GetTemplateSummary": "cloudformation:GetTemplateSummary", 
    "ListChangeSets": "cloudformation:ListChangeSets", 
    "ListExports": "cloudformation:ListExports", 
    "ListImports": "cloudformation:ListImports", 
    "ListStackInstances": "cloudformation:*", 
    "ListStackResources": "cloudformation:ListStackResources", 
    "ListStackSetOperationResults": "cloudformation:*", 
    "ListStackSetOperations": "cloudformation:*", 
    "ListStackSets": "cloudformation:*", 
    "ListStacks": "cloudformation:ListStacks", 
    "SetStackPolicy": "cloudformation:SetStackPolicy", 
    "SignalResource": "cloudformation:SignalResource", 
    "StopStackSetOperation": "cloudformation:*", 
    "UpdateStack": "cloudformation:UpdateStack", 
    "UpdateStackInstances": "cloudformation:*", 
    "UpdateStackSet": "cloudformation:*", 
    "UpdateTerminationProtection": "cloudformation:UpdateTerminationProtection", 
    "ValidateTemplate": "cloudformation:ValidateTemplate"
  }, 
  "cloudfront": {
    "CreateCloudFrontOriginAccessIdentity": "cloudfront:CreateCloudFrontOriginAccessIdentity", 
    "CreateDistribution": "cloudfront:CreateDistribution", 
    "CreateDistributionWithTags": "cloudfront:CreateDistributionWithTags", 
    "CreateFieldLevelEncryptionConfig": "cloudfront:*", 
    "CreateFieldLevelEncryptionProfile": "cloudfront:*", 
    "CreateInvalidation": "cloudfront:CreateInvalidation", 
    "CreatePublicKey": "cloudfront:*", 
    "CreateStreamingDistribution": "cloudfront:CreateStreamingDistribution", 
    "CreateStreamingDistributionWithTags": "cloudfront:CreateStreamingDistributionWithTags", 
    "DeleteCloudFrontOriginAccessIdentity": "cloudfront:DeleteCloudFrontOriginAccessIdentity", 
    "DeleteDistribution": "cloudfront:DeleteDistribution", 
    "DeleteFieldLevelEncryptionConfig": "cloudfront:*", 
    "DeleteFieldLevelEncryptionProfile": "cloudfront:*", 
    "DeletePublicKey": "cloudfront:*", 
    "DeleteServiceLinkedRole": "cloudfront:*", 
    "DeleteStreamingDistribution": "cloudfront:DeleteStreamingDistribution", 
    "GetCloudFrontOriginAccessIdentity": "cloudfront:GetCloudFrontOriginAccessIdentity", 
    "GetCloudFrontOriginAccessIdentityConfig": "cloudfront:GetCloudFrontOriginAccessIdentityConfig", 
    "GetDistribution": "cloudfront:GetDistribution", 
    "GetDistributionConfig": "cloudfront:GetDistributionConfig", 
    "GetFieldLevelEncryption": "cloudfront:*", 
    "GetFieldLevelEncryptionConfig": "cloudfront:*", 
    "GetFieldLevelEncryptionProfile": "cloudfront:*", 
    "GetFieldLevelEncryptionProfileConfig": "cloudfront:*", 
    "GetInvalidation": "cloudfront:GetInvalidation", 
    "GetPublicKey": "cloudfront:*", 
    "GetPublicKeyConfig": "cloudfront:*", 
    "GetStreamingDistribution": "cloudfront:GetStreamingDistribution", 
    "GetStreamingDistributionConfig": "cloudfront:GetStreamingDistributionConfig", 
    "ListCloudFrontOriginAccessIdentities": "cloudfront:ListCloudFrontOriginAccessIdentities", 
    "ListDistributions": "cloudfront:ListDistributions", 
    "ListDistributionsByWebACLId": "cloudfront:ListDistributionsByWebACLId", 
    "ListFieldLevelEncryptionConfigs": "cloudfront:*", 
    "ListFieldLevelEncryptionProfiles": "cloudfront:*", 
    "ListInvalidations": "cloudfront:ListInvalidations", 
    "ListPublicKeys": "cloudfront:*", 
    "ListStreamingDistributions": "cloudfront:ListStreamingDistributions", 
    "ListTagsForResource": "cloudfront:ListTagsForResource", 
    "TagResource": "cloudfront:TagResource", 
    "UntagResource": "cloudfront:UntagResource", 
    "UpdateCloudFrontOriginAccessIdentity": "cloudfront:UpdateCloudFrontOriginAccessIdentity", 
    "UpdateDistribution": "cloudfront:UpdateDistribution", 
    "UpdateFieldLevelEncryptionConfig": "cloudfront:*", 
    "UpdateFieldLevelEncryptionProfile": "cloudfront:*", 
    "UpdatePublicKey": "cloudfront:*", 
    "UpdateStreamingDistribution": "cloudfront:UpdateStreamingDistribution"
  }, 
  "cloudhsm": {
    "AddTagsToResource": "cloudhsm:AddTagsToResource", 
    "CreateHapg": "cloudhsm:CreateHapg", 
    "CreateHsm": "cloudhsm:CreateHsm", 
    "CreateLunaClient": "cloudhsm:CreateLunaClient", 
    "DeleteHapg": "cloudhsm:DeleteHapg", 
    "DeleteHsm": "cloudhsm:DeleteHsm", 
    "DeleteLunaClient": "cloudhsm:DeleteLunaClient", 
    "DescribeHapg": "cloudhsm:DescribeHapg", 
    "DescribeHsm": "cloudhsm:DescribeHsm", 
    "DescribeLunaClient": "cloudhsm:DescribeLunaClient", 
    "GetConfig": "cloudhsm:GetConfig", 
    "ListAvailableZones": "cloudhsm:ListAvailableZones", 
    "ListHapgs": "cloudhsm:ListHapgs", 
    "ListHsms": "cloudhsm:ListHsms", 
    "ListLunaClients": "cloudhsm:ListLunaClients", 
    "ListTagsForResource": "cloudhsm:ListTagsForResource", 
    "ModifyHapg": "cloudhsm:ModifyHapg", 
    "ModifyHsm": "cloudhsm:ModifyHsm", 
    "ModifyLunaClient": "cloudhsm:ModifyLunaClient", 
    "RemoveTagsFromResource": "cloudhsm:RemoveTagsFromResource"
  }, 
  "cloudhsmv2": {
    "CopyBackupToRegion": "cloudhsmv2:*", 
    "CreateCluster": "cloudhsm:*", 
    "CreateHsm": "cloudhsm:CreateHsm", 
    "DeleteCluster": "cloudhsm:*", 
    "DeleteHsm": "cloudhsm:DeleteHsm", 
    "DescribeBackups": "cloudhsm:*", 
    "DescribeClusters": "cloudhsm:*", 
    "InitializeCluster": "cloudhsm:*", 
    "ListTags": "cloudhsm:*", 
    "TagResource": "cloudhsm:*", 
    "UntagResource": "cloudhsm:*"
  }, 
  "cloudsearch": {
    "AddTags": "cloudsearch:AddTags", 
    "BuildSuggesters": "cloudsearch:BuildSuggesters", 
    "CreateDomain": "cloudsearch:CreateDomain", 
    "DefineAnalysisScheme": "cloudsearch:DefineAnalysisScheme", 
    "DefineExpression": "cloudsearch:DefineExpression", 
    "DefineIndexField": "cloudsearch:DefineIndexField", 
    "DefineSuggester": "cloudsearch:DefineSuggester", 
    "DeleteAnalysisScheme": "cloudsearch:DeleteAnalysisScheme", 
    "DeleteDomain": "cloudsearch:DeleteDomain", 
    "DeleteExpression": "cloudsearch:DeleteExpression", 
    "DeleteIndexField": "cloudsearch:DeleteIndexField", 
    "DeleteSuggester": "cloudsearch:DeleteSuggester", 
    "DescribeAnalysisSchemes": "cloudsearch:DescribeAnalysisSchemes", 
    "DescribeAvailabilityOptions": "cloudsearch:DescribeAvailabilityOptions", 
    "DescribeDomains": "cloudsearch:DescribeDomains", 
    "DescribeExpressions": "cloudsearch:DescribeExpressions", 
    "DescribeIndexFields": "cloudsearch:DescribeIndexFields", 
    "DescribeScalingParameters": "cloudsearch:DescribeScalingParameters", 
    "DescribeServiceAccessPolicies": "cloudsearch:DescribeServiceAccessPolicies", 
    "DescribeSuggesters": "cloudsearch:DescribeSuggesters", 
    "IndexDocuments": "cloudsearch:IndexDocuments", 
    "ListDomainNames": "cloudsearch:ListDomainNames", 
    "ListTags": "cloudsearch:ListTags", 
    "RemoveTags": "cloudsearch:RemoveTags", 
    "UpdateAvailabilityOptions": "cloudsearch:UpdateAvailabilityOptions", 
    "UpdateScalingParameters": "cloudsearch:UpdateScalingParameters", 
    "UpdateServiceAccessPolicies": "cloudsearch:UpdateServiceAccessPolicies"
  }, 
  "cloudsearchdomain": {
    "Search": "cloudsearch:*", 
    "Suggest": "cloudsearch:*", 
    "UploadDocuments": "cloudsearch:*"
  }, 
  "cloudtrail": {
    "AddTags": "cloudtrail:AddTags", 
    "CreateTrail": "cloudtrail:CreateTrail", 
    "DeleteTrail": "cloudtrail:DeleteTrail", 
    "DescribeTrails": "cloudtrail:DescribeTrails", 
    "GetEventSelectors": "cloudtrail:GetEventSelectors", 
    "GetTrailStatus": "cloudtrail:GetTrailStatus", 
    "ListPublicKeys": "cloudtrail:ListPublicKeys", 
    "ListTags": "cloudtrail:ListTags", 
    "LookupEvents": "cloudtrail:LookupEvents", 
    "PutEventSelectors": "cloudtrail:PutEventSelectors", 
    "RemoveTags": "cloudtrail:RemoveTags", 
    "StartLogging": "cloudtrail:StartLogging", 
    "StopLogging": "cloudtrail:StopLogging", 
    "UpdateTrail": "cloudtrail:UpdateTrail"
  }, 
  "cloudwatch": {
    "DeleteAlarms": "cloudwatch:DeleteAlarms", 
    "DeleteDashboards": "cloudwatch:DeleteDashboards", 
    "DescribeAlarmHistory": "cloudwatch:DescribeAlarmHistory", 
    "DescribeAlarms": "cloudwatch:DescribeAlarms", 
    "DescribeAlarmsForMetric": "cloudwatch:DescribeAlarmsForMetric", 
    "DisableAlarmActions": "cloudwatch:DisableAlarmActions", 
    "EnableAlarmActions": "cloudwatch:EnableAlarmActions", 
    "GetDashboard": "cloudwatch:GetDashboard", 
    "GetMetricData": "cloudwatch:GetMetricData", 
    "GetMetricStatistics": "cloudwatch:GetMetricStatistics", 
    "GetMetricWidgetImage": "cloudwatch:GetMetricWidgetImage", 
    "ListDashboards": "cloudwatch:ListDashboards", 
    "ListMetrics": "cloudwatch:ListMetrics", 
    "ListTagsForResource": "cloudwatch:ListTagsForResource", 
    "PutDashboard": "cloudwatch:PutDashboard", 
    "PutMetricAlarm": "cloudwatch:PutMetricAlarm", 
    "PutMetricData": "cloudwatch:PutMetricData", 
    "SetAlarmState": "cloudwatch:SetAlarmState", 
    "TagResource": "cloudwatch:TagResource", 
    "UntagResource": "cloudwatch:UntagResource"
  }, 
  "codebuild": {
    "BatchDeleteBuilds": "codebuild:BatchDeleteBuilds", 
    "BatchGetBuilds": "codebuild:BatchGetBuilds", 
    "BatchGetProjects": "codebuild:BatchGetProjects", 
    "CreateProject": "codebuild:CreateProject", 
    "CreateWebhook": "codebuild:*", 
    "DeleteOAuthToken": "codebuild:DeleteOAuthToken", 
    "DeleteProject": "codebuild:DeleteProject", 
    "DeleteSourceCredentials": "codebuild:DeleteSourceCredentials", 
    "DeleteWebhook": "codebuild:*", 
    "ImportSourceCredentials": "codebuild:ImportSourceCredentials", 
    "InvalidateProjectCache": "codebuild:*", 
    "ListBuilds": "codebuild:ListBuilds", 
    "ListBuildsForProject": "codebuild:ListBuildsForProject", 
    "ListConnectedOAuthAccounts": "codebuild:ListConnectedOAuthAccounts", 
    "ListCuratedEnvironmentImages": "codebuild:ListCuratedEnvironmentImages", 
    "ListProjects": "codebuild:ListProjects", 
    "ListRepositories": "codebuild:ListRepositories", 
    "ListSourceCredentials": "codebuild:ListSourceCredentials", 
    "PersistOAuthToken": "codebuild:PersistOAuthToken", 
    "StartBuild": "codebuild:StartBuild", 
    "StopBuild": "codebuild:StopBuild", 
    "UpdateProject": "codebuild:UpdateProject", 
    "UpdateWebhook": "codebuild:*"
  }, 
  "codecommit": {
    "BatchGetPullRequests": "codecommit:BatchGetPullRequests", 
    "BatchGetRepositories": "codecommit:BatchGetRepositories", 
    "CancelUploadArchive": "codecommit:CancelUploadArchive", 
    "CreateBranch": "codecommit:CreateBranch", 
    "CreateCommit": "codecommit:CreateCommit", 
    "CreatePullRequest": "codecommit:CreatePullRequest", 
    "CreateRepository": "codecommit:CreateRepository", 
    "DeleteBranch": "codecommit:DeleteBranch", 
    "DeleteCommentContent": "codecommit:DeleteCommentContent", 
    "DeleteFile": "codecommit:DeleteFile", 
    "DeleteRepository": "codecommit:DeleteRepository", 
    "DescribePullRequestEvents": "codecommit:DescribePullRequestEvents", 
    "GetBlob": "codecommit:GetBlob", 
    "GetBranch": "codecommit:GetBranch", 
    "GetComment": "codecommit:GetComment", 
    "GetCommentsForComparedCommit": "codecommit:GetCommentsForComparedCommit", 
    "GetCommentsForPullRequest": "codecommit:GetCommentsForPullRequest", 
    "GetCommit": "codecommit:GetCommit", 
    "GetCommitHistory": "codecommit:GetCommitHistory", 
    "GetCommitsFromMergeBase": "codecommit:GetCommitsFromMergeBase", 
    "GetDifferences": "codecommit:GetDifferences", 
    "GetFile": "codecommit:GetFile", 
    "GetFolder": "codecommit:GetFolder", 
    "GetMergeConflicts": "codecommit:GetMergeConflicts", 
    "GetObjectIdentifier": "codecommit:GetObjectIdentifier", 
    "GetPullRequest": "codecommit:GetPullRequest", 
    "GetReferences": "codecommit:GetReferences", 
    "GetRepository": "codecommit:GetRepository", 
    "GetRepositoryTriggers": "codecommit:GetRepositoryTriggers", 
    "GetTree": "codecommit:GetTree", 
    "GetUploadArchiveStatus": "codecommit:GetUploadArchiveStatus", 
    "GitPull": "codecommit:GitPull", 
    "GitPush": "codecommit:GitPush", 
    "ListBranches": "codecommit:ListBranches", 
    "ListPullRequests": "codecommit:ListPullRequests", 
    "ListRepositories": "codecommit:ListRepositories", 
    "MergePullRequestByFastForward": "codecommit:MergePullRequestByFastForward", 
    "PostCommentForComparedCommit": "codecommit:PostCommentForComparedCommit", 
    "PostCommentForPullRequest": "codecommit:PostCommentForPullRequest", 
    "PostCommentReply": "codecommit:PostCommentReply", 
    "PutFile": "codecommit:PutFile", 
    "PutRepositoryTriggers": "codecommit:PutRepositoryTriggers", 
    "TestRepositoryTriggers": "codecommit:TestRepositoryTriggers", 
    "UpdateComment": "codecommit:UpdateComment", 
    "UpdateDefaultBranch": "codecommit:UpdateDefaultBranch", 
    "UpdatePullRequestDescription": "codecommit:UpdatePullRequestDescription", 
    "UpdatePullRequestStatus": "codecommit:UpdatePullRequestStatus", 
    "UpdatePullRequestTitle": "codecommit:UpdatePullRequestTitle", 
    "UpdateRepositoryDescription": "codecommit:UpdateRepositoryDescription", 
    "UpdateRepositoryName": "codecommit:UpdateRepositoryName", 
    "UploadArchive": "codecommit:UploadArchive"
  }, 
  "codedeploy": {
    "AddTagsToOnPremisesInstances": "codedeploy:AddTagsToOnPremisesInstances", 
    "BatchGetApplicationRevisions": "codedeploy:BatchGetApplicationRevisions", 
    "BatchGetApplications": "codedeploy:BatchGetApplications", 
    "BatchGetDeploymentGroups": "codedeploy:BatchGetDeploymentGroups", 
    "BatchGetDeploymentInstances": "codedeploy:BatchGetDeploymentInstances", 
    "BatchGetDeploymentTargets": "codedeploy:BatchGetDeploymentTargets", 
    "BatchGetDeployments": "codedeploy:BatchGetDeployments", 
    "BatchGetOnPremisesInstances": "codedeploy:BatchGetOnPremisesInstances", 
    "ContinueDeployment": "codedeploy:ContinueDeployment", 
    "CreateApplication": "codedeploy:CreateApplication", 
    "CreateDeployment": "codedeploy:CreateDeployment", 
    "CreateDeploymentConfig": "codedeploy:CreateDeploymentConfig", 
    "CreateDeploymentGroup": "codedeploy:CreateDeploymentGroup", 
    "DeleteApplication": "codedeploy:DeleteApplication", 
    "DeleteDeploymentConfig": "codedeploy:DeleteDeploymentConfig", 
    "DeleteDeploymentGroup": "codedeploy:DeleteDeploymentGroup", 
    "DeleteGitHubAccountToken": "codedeploy:*", 
    "DeregisterOnPremisesInstance": "codedeploy:DeregisterOnPremisesInstance", 
    "GetApplication": "codedeploy:GetApplication", 
    "GetApplicationRevision": "codedeploy:GetApplicationRevision", 
    "GetDeployment": "codedeploy:GetDeployment", 
    "GetDeploymentConfig": "codedeploy:GetDeploymentConfig", 
    "GetDeploymentGroup": "codedeploy:GetDeploymentGroup", 
    "GetDeploymentInstance": "codedeploy:GetDeploymentInstance", 
    "GetDeploymentTarget": "codedeploy:GetDeploymentTarget", 
    "GetOnPremisesInstance": "codedeploy:GetOnPremisesInstance", 
    "ListApplicationRevisions": "codedeploy:ListApplicationRevisions", 
    "ListApplications": "codedeploy:ListApplications", 
    "ListDeploymentConfigs": "codedeploy:ListDeploymentConfigs", 
    "ListDeploymentGroups": "codedeploy:ListDeploymentGroups", 
    "ListDeploymentInstances": "codedeploy:ListDeploymentInstances", 
    "ListDeploymentTargets": "codedeploy:ListDeploymentTargets", 
    "ListDeployments": "codedeploy:ListDeployments", 
    "ListGitHubAccountTokenNames": "codedeploy:*", 
    "ListOnPremisesInstances": "codedeploy:ListOnPremisesInstances", 
    "ListTagsForResource": "codedeploy:ListTagsForResource", 
    "PutLifecycleEventHookExecutionStatus": "codedeploy:*", 
    "RegisterApplicationRevision": "codedeploy:RegisterApplicationRevision", 
    "RegisterOnPremisesInstance": "codedeploy:RegisterOnPremisesInstance", 
    "RemoveTagsFromOnPremisesInstances": "codedeploy:RemoveTagsFromOnPremisesInstances", 
    "SkipWaitTimeForInstanceTermination": "codedeploy:*", 
    "StopDeployment": "codedeploy:StopDeployment", 
    "TagResource": "codedeploy:TagResource", 
    "UntagResource": "codedeploy:UntagResource", 
    "UpdateApplication": "codedeploy:UpdateApplication", 
    "UpdateDeploymentGroup": "codedeploy:UpdateDeploymentGroup"
  }, 
  "codepipeline": {
    "AcknowledgeJob": "codepipeline:AcknowledgeJob", 
    "AcknowledgeThirdPartyJob": "codepipeline:AcknowledgeThirdPartyJob", 
    "CreateCustomActionType": "codepipeline:CreateCustomActionType", 
    "CreatePipeline": "codepipeline:CreatePipeline", 
    "DeleteCustomActionType": "codepipeline:DeleteCustomActionType", 
    "DeletePipeline": "codepipeline:DeletePipeline", 
    "DeleteWebhook": "codepipeline:*", 
    "DeregisterWebhookWithThirdParty": "codepipeline:*", 
    "DisableStageTransition": "codepipeline:DisableStageTransition", 
    "EnableStageTransition": "codepipeline:EnableStageTransition", 
    "GetJobDetails": "codepipeline:GetJobDetails", 
    "GetPipeline": "codepipeline:GetPipeline", 
    "GetPipelineExecution": "codepipeline:GetPipelineExecution", 
    "GetPipelineState": "codepipeline:GetPipelineState", 
    "GetThirdPartyJobDetails": "codepipeline:GetThirdPartyJobDetails", 
    "ListActionExecutions": "codepipeline:ListActionExecutions", 
    "ListActionTypes": "codepipeline:ListActionTypes", 
    "ListPipelineExecutions": "codepipeline:ListPipelineExecutions", 
    "ListPipelines": "codepipeline:ListPipelines", 
    "ListTagsForResource": "codepipeline:ListTagsForResource", 
    "ListWebhooks": "codepipeline:*", 
    "PollForJobs": "codepipeline:PollForJobs", 
    "PollForThirdPartyJobs": "codepipeline:PollForThirdPartyJobs", 
    "PutActionRevision": "codepipeline:PutActionRevision", 
    "PutApprovalResult": "codepipeline:PutApprovalResult", 
    "PutJobFailureResult": "codepipeline:PutJobFailureResult", 
    "PutJobSuccessResult": "codepipeline:PutJobSuccessResult", 
    "PutThirdPartyJobFailureResult": "codepipeline:PutThirdPartyJobFailureResult", 
    "PutThirdPartyJobSuccessResult": "codepipeline:PutThirdPartyJobSuccessResult", 
    "PutWebhook": "codepipeline:*", 
    "RegisterWebhookWithThirdParty": "codepipeline:*", 
    "RetryStageExecution": "codepipeline:RetryStageExecution", 
    "StartPipelineExecution": "codepipeline:StartPipelineExecution", 
    "TagResource": "codepipeline:TagResource", 
    "UntagResource": "codepipeline:UntagResource", 
    "UpdatePipeline": "codepipeline:UpdatePipeline"
  }, 
  "codestar": {
    "AssociateTeamMember": "codestar:AssociateTeamMember", 
    "CreateProject": "codestar:CreateProject", 
    "CreateUserProfile": "codestar:CreateUserProfile", 
    "DeleteExtendedAccess": "codestar:DeleteExtendedAccess", 
    "DeleteProject": "codestar:DeleteProject", 
    "DeleteUserProfile": "codestar:DeleteUserProfile", 
    "DescribeProject": "codestar:DescribeProject", 
    "DescribeUserProfile": "codestar:DescribeUserProfile", 
    "DisassociateTeamMember": "codestar:DisassociateTeamMember", 
    "GetExtendedAccess": "codestar:GetExtendedAccess", 
    "ListProjects": "codestar:ListProjects", 
    "ListResources": "codestar:ListResources", 
    "ListTagsForProject": "codestar:*", 
    "ListTeamMembers": "codestar:ListTeamMembers", 
    "ListUserProfiles": "codestar:ListUserProfiles", 
    "PutExtendedAccess": "codestar:PutExtendedAccess", 
    "TagProject": "codestar:*", 
    "UntagProject": "codestar:*", 
    "UpdateProject": "codestar:UpdateProject", 
    "UpdateTeamMember": "codestar:UpdateTeamMember", 
    "UpdateUserProfile": "codestar:UpdateUserProfile", 
    "VerifyServiceRole": "codestar:VerifyServiceRole"
  }, 
  "cognito-identity": {
    "CreateIdentityPool": "cognito-identity:CreateIdentityPool", 
    "DeleteIdentities": "cognito-identity:DeleteIdentities", 
    "DeleteIdentityPool": "cognito-identity:DeleteIdentityPool", 
    "DescribeIdentity": "cognito-identity:DescribeIdentity", 
    "DescribeIdentityPool": "cognito-identity:DescribeIdentityPool", 
    "GetCredentialsForIdentity": "cognito-identity:GetCredentialsForIdentity", 
    "GetId": "cognito-identity:GetId", 
    "GetIdentityPoolRoles": "cognito-identity:GetIdentityPoolRoles", 
    "GetOpenIdToken": "cognito-identity:GetOpenIdToken", 
    "GetOpenIdTokenForDeveloperIdentity": "cognito-identity:GetOpenIdTokenForDeveloperIdentity", 
    "ListIdentities": "cognito-identity:ListIdentities", 
    "ListIdentityPools": "cognito-identity:ListIdentityPools", 
    "ListTagsForResource": "cognito-identity:ListTagsForResource", 
    "LookupDeveloperIdentity": "cognito-identity:LookupDeveloperIdentity", 
    "MergeDeveloperIdentities": "cognito-identity:MergeDeveloperIdentities", 
    "SetIdentityPoolRoles": "cognito-identity:SetIdentityPoolRoles", 
    "TagResource": "cognito-identity:TagResource", 
    "UnlinkDeveloperIdentity": "cognito-identity:UnlinkDeveloperIdentity", 
    "UnlinkIdentity": "cognito-identity:UnlinkIdentity", 
    "UntagResource": "cognito-identity:UntagResource", 
    "UpdateIdentityPool": "cognito-identity:UpdateIdentityPool"
  }, 
  "cognito-idp": {
    "AddCustomAttributes": "cognito-idp:AddCustomAttributes", 
    "AdminAddUserToGroup": "cognito-idp:AdminAddUserToGroup", 
    "AdminConfirmSignUp": "cognito-idp:AdminConfirmSignUp", 
    "AdminCreateUser": "cognito-idp:AdminCreateUser", 
    "AdminDeleteUser": "cognito-idp:AdminDeleteUser", 
    "AdminDeleteUserAttributes": "cognito-idp:AdminDeleteUserAttributes", 
    "AdminDisableProviderForUser": "cognito-idp:AdminDisableProviderForUser", 
    "AdminDisableUser": "cognito-idp:AdminDisableUser", 
    "AdminEnableUser": "cognito-idp:AdminEnableUser", 
    "AdminForgetDevice": "cognito-idp:AdminForgetDevice", 
    "AdminGetDevice": "cognito-idp:AdminGetDevice", 
    "AdminGetUser": "cognito-idp:AdminGetUser", 
    "AdminInitiateAuth": "cognito-idp:AdminInitiateAuth", 
    "AdminLinkProviderForUser": "cognito-idp:AdminLinkProviderForUser", 
    "AdminListDevices": "cognito-idp:AdminListDevices", 
    "AdminListGroupsForUser": "cognito-idp:AdminListGroupsForUser", 
    "AdminListUserAuthEvents": "cognito-idp:AdminListUserAuthEvents", 
    "AdminRemoveUserFromGroup": "cognito-idp:AdminRemoveUserFromGroup", 
    "AdminResetUserPassword": "cognito-idp:AdminResetUserPassword", 
    "AdminRespondToAuthChallenge": "cognito-idp:AdminRespondToAuthChallenge", 
    "AdminSetUserMFAPreference": "cognito-idp:AdminSetUserMFAPreference", 
    "AdminSetUserPassword": "cognito-idp:AdminSetUserPassword", 
    "AdminSetUserSettings": "cognito-idp:AdminSetUserSettings", 
    "AdminUpdateAuthEventFeedback": "cognito-idp:AdminUpdateAuthEventFeedback", 
    "AdminUpdateDeviceStatus": "cognito-idp:AdminUpdateDeviceStatus", 
    "AdminUpdateUserAttributes": "cognito-idp:AdminUpdateUserAttributes", 
    "AdminUserGlobalSignOut": "cognito-idp:AdminUserGlobalSignOut", 
    "AssociateSoftwareToken": "cognito-idp:AssociateSoftwareToken", 
    "ChangePassword": "cognito-idp:ChangePassword", 
    "ConfirmDevice": "cognito-idp:ConfirmDevice", 
    "ConfirmForgotPassword": "cognito-idp:ConfirmForgotPassword", 
    "ConfirmSignUp": "cognito-idp:ConfirmSignUp", 
    "CreateGroup": "cognito-idp:CreateGroup", 
    "CreateIdentityProvider": "cognito-idp:CreateIdentityProvider", 
    "CreateResourceServer": "cognito-idp:CreateResourceServer", 
    "CreateUserImportJob": "cognito-idp:CreateUserImportJob", 
    "CreateUserPool": "cognito-idp:CreateUserPool", 
    "CreateUserPoolClient": "cognito-idp:CreateUserPoolClient", 
    "CreateUserPoolDomain": "cognito-idp:CreateUserPoolDomain", 
    "DeleteGroup": "cognito-idp:DeleteGroup", 
    "DeleteIdentityProvider": "cognito-idp:DeleteIdentityProvider", 
    "DeleteResourceServer": "cognito-idp:DeleteResourceServer", 
    "DeleteUser": "cognito-idp:DeleteUser", 
    "DeleteUserAttributes": "cognito-idp:DeleteUserAttributes", 
    "DeleteUserPool": "cognito-idp:DeleteUserPool", 
    "DeleteUserPoolClient": "cognito-idp:DeleteUserPoolClient", 
    "DeleteUserPoolDomain": "cognito-idp:DeleteUserPoolDomain", 
    "DescribeIdentityProvider": "cognito-idp:DescribeIdentityProvider", 
    "DescribeResourceServer": "cognito-idp:DescribeResourceServer", 
    "DescribeRiskConfiguration": "cognito-idp:DescribeRiskConfiguration", 
    "DescribeUserImportJob": "cognito-idp:DescribeUserImportJob", 
    "DescribeUserPool": "cognito-idp:DescribeUserPool", 
    "DescribeUserPoolClient": "cognito-idp:DescribeUserPoolClient", 
    "DescribeUserPoolDomain": "cognito-idp:DescribeUserPoolDomain", 
    "ForgetDevice": "cognito-idp:ForgetDevice", 
    "ForgotPassword": "cognito-idp:ForgotPassword", 
    "GetCSVHeader": "cognito-idp:GetCSVHeader", 
    "GetDevice": "cognito-idp:GetDevice", 
    "GetGroup": "cognito-idp:GetGroup", 
    "GetIdentityProviderByIdentifier": "cognito-idp:GetIdentityProviderByIdentifier", 
    "GetSigningCertificate": "cognito-idp:GetSigningCertificate", 
    "GetUICustomization": "cognito-idp:GetUICustomization", 
    "GetUser": "cognito-idp:GetUser", 
    "GetUserAttributeVerificationCode": "cognito-idp:GetUserAttributeVerificationCode", 
    "GetUserPoolMfaConfig": "cognito-idp:GetUserPoolMfaConfig", 
    "GlobalSignOut": "cognito-idp:GlobalSignOut", 
    "InitiateAuth": "cognito-idp:InitiateAuth", 
    "ListDevices": "cognito-idp:ListDevices", 
    "ListGroups": "cognito-idp:ListGroups", 
    "ListIdentityProviders": "cognito-idp:ListIdentityProviders", 
    "ListResourceServers": "cognito-idp:ListResourceServers", 
    "ListTagsForResource": "cognito-idp:ListTagsForResource", 
    "ListUserImportJobs": "cognito-idp:ListUserImportJobs", 
    "ListUserPoolClients": "cognito-idp:ListUserPoolClients", 
    "ListUserPools": "cognito-idp:ListUserPools", 
    "ListUsers": "cognito-idp:ListUsers", 
    "ListUsersInGroup": "cognito-idp:ListUsersInGroup", 
    "ResendConfirmationCode": "cognito-idp:ResendConfirmationCode", 
    "RespondToAuthChallenge": "cognito-idp:RespondToAuthChallenge", 
    "SetRiskConfiguration": "cognito-idp:SetRiskConfiguration", 
    "SetUICustomization": "cognito-idp:SetUICustomization", 
    "SetUserMFAPreference": "cognito-idp:SetUserMFAPreference", 
    "SetUserPoolMfaConfig": "cognito-idp:SetUserPoolMfaConfig", 
    "SetUserSettings": "cognito-idp:SetUserSettings", 
    "SignUp": "cognito-idp:SignUp", 
    "StartUserImportJob": "cognito-idp:StartUserImportJob", 
    "StopUserImportJob": "cognito-idp:StopUserImportJob", 
    "TagResource": "cognito-idp:TagResource", 
    "UntagResource": "cognito-idp:UntagResource", 
    "UpdateAuthEventFeedback": "cognito-idp:UpdateAuthEventFeedback", 
    "UpdateDeviceStatus": "cognito-idp:UpdateDeviceStatus", 
    "UpdateGroup": "cognito-idp:UpdateGroup", 
    "UpdateIdentityProvider": "cognito-idp:UpdateIdentityProvider", 
    "UpdateResourceServer": "cognito-idp:UpdateResourceServer", 
    "UpdateUserAttributes": "cognito-idp:UpdateUserAttributes", 
    "UpdateUserPool": "cognito-idp:UpdateUserPool", 
    "UpdateUserPoolClient": "cognito-idp:UpdateUserPoolClient", 
    "UpdateUserPoolDomain": "cognito-idp:UpdateUserPoolDomain", 
    "VerifySoftwareToken": "cognito-idp:VerifySoftwareToken", 
    "VerifyUserAttribute": "cognito-idp:VerifyUserAttribute"
  }, 
  "cognito-sync": {
    "BulkPublish": "cognito-sync:BulkPublish", 
    "DeleteDataset": "cognito-sync:DeleteDataset", 
    "DescribeDataset": "cognito-sync:DescribeDataset", 
    "DescribeIdentityPoolUsage": "cognito-sync:DescribeIdentityPoolUsage", 
    "DescribeIdentityUsage": "cognito-sync:DescribeIdentityUsage", 
    "GetBulkPublishDetails": "cognito-sync:GetBulkPublishDetails", 
    "GetCognitoEvents": "cognito-sync:GetCognitoEvents", 
    "GetIdentityPoolConfiguration": "cognito-sync:GetIdentityPoolConfiguration", 
    "ListDatasets": "cognito-sync:ListDatasets", 
    "ListIdentityPoolUsage": "cognito-sync:ListIdentityPoolUsage", 
    "ListRecords": "cognito-sync:ListRecords", 
    "QueryRecords": "cognito-sync:QueryRecords", 
    "RegisterDevice": "cognito-sync:RegisterDevice", 
    "SetCognitoEvents": "cognito-sync:SetCognitoEvents", 
    "SetDatasetConfiguration": "cognito-sync:SetDatasetConfiguration", 
    "SetIdentityPoolConfiguration": "cognito-sync:SetIdentityPoolConfiguration", 
    "SubscribeToDataset": "cognito-sync:SubscribeToDataset", 
    "UnsubscribeFromDataset": "cognito-sync:UnsubscribeFromDataset", 
    "UpdateRecords": "cognito-sync:UpdateRecords"
  }, 
  "comprehend": {
    "BatchDetectDominantLanguage": "comprehend:BatchDetectDominantLanguage", 
    "BatchDetectEntities": "comprehend:BatchDetectEntities", 
    "BatchDetectKeyPhrases": "comprehend:BatchDetectKeyPhrases", 
    "BatchDetectSentiment": "comprehend:BatchDetectSentiment", 
    "BatchDetectSyntax": "comprehend:BatchDetectSyntax", 
    "CreateDocumentClassifier": "comprehend:CreateDocumentClassifier", 
    "CreateEntityRecognizer": "comprehend:CreateEntityRecognizer", 
    "DeleteDocumentClassifier": "comprehend:DeleteDocumentClassifier", 
    "DeleteEntityRecognizer": ":DeleteEntityRecognizer", 
    "DescribeDocumentClassificationJob": "comprehend:DescribeDocumentClassificationJob", 
    "DescribeDocumentClassifier": "comprehend:DescribeDocumentClassifier", 
    "DescribeDominantLanguageDetectionJob": "comprehend:DescribeDominantLanguageDetectionJob", 
    "DescribeEntitiesDetectionJob": "comprehend:DescribeEntitiesDetectionJob", 
    "DescribeEntityRecognizer": "comprehend:DescribeEntityRecognizer", 
    "DescribeKeyPhrasesDetectionJob": "comprehend:DescribeKeyPhrasesDetectionJob", 
    "DescribeSentimentDetectionJob": "comprehend:DescribeSentimentDetectionJob", 
    "DescribeTopicsDetectionJob": "comprehend:DescribeTopicsDetectionJob", 
    "DetectDominantLanguage": "comprehend:DetectDominantLanguage", 
    "DetectEntities": "comprehend:DetectEntities", 
    "DetectKeyPhrases": "comprehend:DetectKeyPhrases", 
    "DetectSentiment": "comprehend:DetectSentiment", 
    "DetectSyntax": "comprehend:DetectSyntax", 
    "ListDocumentClassificationJobs": "comprehend:ListDocumentClassificationJobs", 
    "ListDocumentClassifiers": "comprehend:ListDocumentClassifiers", 
    "ListDominantLanguageDetectionJobs": "comprehend:ListDominantLanguageDetectionJobs", 
    "ListEntitiesDetectionJobs": "comprehend:ListEntitiesDetectionJobs", 
    "ListEntityRecognizers": "comprehend:ListEntityRecognizers", 
    "ListKeyPhrasesDetectionJobs": "comprehend:ListKeyPhrasesDetectionJobs", 
    "ListSentimentDetectionJobs": "comprehend:ListSentimentDetectionJobs", 
    "ListTagsForResource": "comprehend:ListTagsForResource", 
    "ListTopicsDetectionJobs": "comprehend:ListTopicsDetectionJobs", 
    "StartDocumentClassificationJob": "comprehend:StartDocumentClassificationJob", 
    "StartDominantLanguageDetectionJob": "comprehend:StartDominantLanguageDetectionJob", 
    "StartEntitiesDetectionJob": "comprehend:StartEntitiesDetectionJob", 
    "StartKeyPhrasesDetectionJob": "comprehend:StartKeyPhrasesDetectionJob", 
    "StartSentimentDetectionJob": "comprehend:StartSentimentDetectionJob", 
    "StartTopicsDetectionJob": "comprehend:StartTopicsDetectionJob", 
    "StopDominantLanguageDetectionJob": "comprehend:StopDominantLanguageDetectionJob", 
    "StopEntitiesDetectionJob": "comprehend:StopEntitiesDetectionJob", 
    "StopKeyPhrasesDetectionJob": "comprehend:StopKeyPhrasesDetectionJob", 
    "StopSentimentDetectionJob": "comprehend:StopSentimentDetectionJob", 
    "StopTrainingDocumentClassifier": "comprehend:StopTrainingDocumentClassifier", 
    "StopTrainingEntityRecognizer": "comprehend:StopTrainingEntityRecognizer", 
    "TagResource": "comprehend:TagResource", 
    "UntagResource": "comprehend:UntagResource"
  }, 
  "config": {
    "BatchGetAggregateResourceConfig": "config:BatchGetAggregateResourceConfig", 
    "BatchGetResourceConfig": "config:*", 
    "DeleteAggregationAuthorization": "config:*", 
    "DeleteConfigRule": "config:DeleteConfigRule", 
    "DeleteConfigurationAggregator": "config:*", 
    "DeleteConfigurationRecorder": "config:DeleteConfigurationRecorder", 
    "DeleteDeliveryChannel": "config:DeleteDeliveryChannel", 
    "DeleteEvaluationResults": "config:DeleteEvaluationResults", 
    "DeletePendingAggregationRequest": "config:*", 
    "DeleteRemediationConfiguration": "config:DeleteRemediationConfiguration", 
    "DeleteRetentionConfiguration": "config:*", 
    "DeliverConfigSnapshot": "config:DeliverConfigSnapshot", 
    "DescribeAggregateComplianceByConfigRules": "config:DescribeAggregateComplianceByConfigRules", 
    "DescribeAggregationAuthorizations": "config:DescribeAggregationAuthorizations", 
    "DescribeComplianceByConfigRule": "config:DescribeComplianceByConfigRule", 
    "DescribeComplianceByResource": "config:DescribeComplianceByResource", 
    "DescribeConfigRuleEvaluationStatus": "config:DescribeConfigRuleEvaluationStatus", 
    "DescribeConfigRules": "config:DescribeConfigRules", 
    "DescribeConfigurationAggregatorSourcesStatus": "config:*", 
    "DescribeConfigurationAggregators": "config:*", 
    "DescribeConfigurationRecorderStatus": "config:DescribeConfigurationRecorderStatus", 
    "DescribeConfigurationRecorders": "config:DescribeConfigurationRecorders", 
    "DescribeDeliveryChannelStatus": "config:DescribeDeliveryChannelStatus", 
    "DescribeDeliveryChannels": "config:DescribeDeliveryChannels", 
    "DescribePendingAggregationRequests": "config:*", 
    "DescribeRemediationConfigurations": "config:DescribeRemediationConfigurations", 
    "DescribeRemediationExecutionStatus": "config:DescribeRemediationExecutionStatus", 
    "DescribeRetentionConfigurations": "config:*", 
    "GetAggregateComplianceDetailsByConfigRule": "config:*", 
    "GetAggregateConfigRuleComplianceSummary": "config:*", 
    "GetAggregateDiscoveredResourceCounts": "config:GetAggregateDiscoveredResourceCounts", 
    "GetAggregateResourceConfig": "config:GetAggregateResourceConfig", 
    "GetComplianceDetailsByConfigRule": "config:GetComplianceDetailsByConfigRule", 
    "GetComplianceDetailsByResource": "config:GetComplianceDetailsByResource", 
    "GetComplianceSummaryByConfigRule": "config:GetComplianceSummaryByConfigRule", 
    "GetComplianceSummaryByResourceType": "config:GetComplianceSummaryByResourceType", 
    "GetDiscoveredResourceCounts": "config:*", 
    "GetResourceConfigHistory": "config:GetResourceConfigHistory", 
    "ListAggregateDiscoveredResources": "config:ListAggregateDiscoveredResources", 
    "ListDiscoveredResources": "config:ListDiscoveredResources", 
    "ListTagsForResource": "config:ListTagsForResource", 
    "PutAggregationAuthorization": "config:*", 
    "PutConfigRule": "config:PutConfigRule", 
    "PutConfigurationAggregator": "config:*", 
    "PutConfigurationRecorder": "config:PutConfigurationRecorder", 
    "PutDeliveryChannel": "config:PutDeliveryChannel", 
    "PutEvaluations": "config:PutEvaluations", 
    "PutRemediationConfigurations": "config:PutRemediationConfigurations", 
    "PutRetentionConfiguration": "config:*", 
    "SelectResourceConfig": "config:SelectResourceConfig", 
    "StartConfigRulesEvaluation": "config:StartConfigRulesEvaluation", 
    "StartConfigurationRecorder": "config:StartConfigurationRecorder", 
    "StartRemediationExecution": "config:StartRemediationExecution", 
    "StopConfigurationRecorder": "config:StopConfigurationRecorder", 
    "TagResource": "config:TagResource", 
    "UntagResource": "config:UntagResource"
  }, 
  "connect": {
    "CreateInstance": "connect:CreateInstance", 
    "CreateUser": "connect:*", 
    "DeleteUser": "connect:*", 
    "DescribeInstance": "connect:DescribeInstance", 
    "DescribeUser": "connect:*", 
    "DescribeUserHierarchyGroup": "connect:*", 
    "DescribeUserHierarchyStructure": "connect:*", 
    "DestroyInstance": "connect:DestroyInstance", 
    "GetCurrentMetricData": "connect:GetCurrentMetricData", 
    "GetFederationToken": "connect:*", 
    "GetFederationTokens": "connect:GetFederationTokens", 
    "GetMetricData": "connect:GetMetricData", 
    "ListInstances": "connect:ListInstances", 
    "ListRoutingProfiles": "connect:*", 
    "ListSecurityProfiles": "connect:*", 
    "ListUserHierarchyGroups": "connect:*", 
    "ListUsers": "connect:*", 
    "ModifyInstance": "connect:ModifyInstance", 
    "StartOutboundVoiceContact": "connect:StartOutboundVoiceContact", 
    "StopContact": "connect:StopContact", 
    "UpdateUserHierarchy": "connect:*", 
    "UpdateUserIdentityInfo": "connect:*", 
    "UpdateUserPhoneConfig": "connect:*", 
    "UpdateUserRoutingProfile": "connect:*", 
    "UpdateUserSecurityProfiles": "connect:*"
  }, 
  "cur": {
    "DeleteReportDefinition": "cur:DeleteReportDefinition", 
    "DescribeReportDefinitions": "cur:DescribeReportDefinitions", 
    "PutReportDefinition": "cur:PutReportDefinition"
  }, 
  "datapipeline": {
    "ActivatePipeline": "datapipeline:ActivatePipeline", 
    "AddTags": "datapipeline:AddTags", 
    "CreatePipeline": "datapipeline:CreatePipeline", 
    "DeactivatePipeline": "datapipeline:DeactivatePipeline", 
    "DeletePipeline": "datapipeline:DeletePipeline", 
    "DescribeObjects": "datapipeline:DescribeObjects", 
    "DescribePipelines": "datapipeline:DescribePipelines", 
    "EvaluateExpression": "datapipeline:EvaluateExpression", 
    "GetPipelineDefinition": "datapipeline:GetPipelineDefinition", 
    "ListPipelines": "datapipeline:ListPipelines", 
    "PollForTask": "datapipeline:PollForTask", 
    "PutPipelineDefinition": "datapipeline:PutPipelineDefinition", 
    "QueryObjects": "datapipeline:QueryObjects", 
    "RemoveTags": "datapipeline:RemoveTags", 
    "ReportTaskProgress": "datapipeline:ReportTaskProgress", 
    "ReportTaskRunnerHeartbeat": "datapipeline:ReportTaskRunnerHeartbeat", 
    "SetStatus": "datapipeline:SetStatus", 
    "SetTaskStatus": "datapipeline:SetTaskStatus", 
    "ValidatePipelineDefinition": "datapipeline:ValidatePipelineDefinition"
  }, 
  "dax": {
    "BatchGetItem": "dax:BatchGetItem", 
    "BatchWriteItem": "dax:BatchWriteItem", 
    "ConditionCheckItem": "dax:ConditionCheckItem", 
    "CreateCluster": "dax:CreateCluster", 
    "CreateParameterGroup": "dax:CreateParameterGroup", 
    "CreateSubnetGroup": "dax:CreateSubnetGroup", 
    "DecreaseReplicationFactor": "dax:DecreaseReplicationFactor", 
    "DeleteCluster": "dax:DeleteCluster", 
    "DeleteItem": "dax:DeleteItem", 
    "DeleteParameterGroup": "dax:DeleteParameterGroup", 
    "DeleteSubnetGroup": "dax:DeleteSubnetGroup", 
    "DescribeClusters": "dax:DescribeClusters", 
    "DescribeDefaultParameters": "dax:DescribeDefaultParameters", 
    "DescribeEvents": "dax:DescribeEvents", 
    "DescribeParameterGroups": "dax:DescribeParameterGroups", 
    "DescribeParameters": "dax:DescribeParameters", 
    "DescribeSubnetGroups": "dax:DescribeSubnetGroups", 
    "GetItem": "dax:GetItem", 
    "IncreaseReplicationFactor": "dax:IncreaseReplicationFactor", 
    "ListTags": "dax:ListTags", 
    "PutItem": "dax:PutItem", 
    "Query": "dax:Query", 
    "RebootNode": "dax:RebootNode", 
    "Scan": "dax:Scan", 
    "TagResource": "dax:TagResource", 
    "UntagResource": "dax:UntagResource", 
    "UpdateCluster": "dax:UpdateCluster", 
    "UpdateItem": "dax:UpdateItem", 
    "UpdateParameterGroup": "dax:UpdateParameterGroup", 
    "UpdateSubnetGroup": "dax:UpdateSubnetGroup"
  }, 
  "devicefarm": {
    "CreateDevicePool": "devicefarm:CreateDevicePool", 
    "CreateInstanceProfile": "devicefarm:CreateInstanceProfile", 
    "CreateNetworkProfile": "devicefarm:CreateNetworkProfile", 
    "CreateProject": "devicefarm:CreateProject", 
    "CreateRemoteAccessSession": "devicefarm:CreateRemoteAccessSession", 
    "CreateUpload": "devicefarm:CreateUpload", 
    "CreateVPCEConfiguration": "devicefarm:CreateVPCEConfiguration", 
    "DeleteDevicePool": "devicefarm:DeleteDevicePool", 
    "DeleteInstanceProfile": "devicefarm:DeleteInstanceProfile", 
    "DeleteNetworkProfile": "devicefarm:DeleteNetworkProfile", 
    "DeleteProject": "devicefarm:DeleteProject", 
    "DeleteRemoteAccessSession": "devicefarm:DeleteRemoteAccessSession", 
    "DeleteRun": "devicefarm:DeleteRun", 
    "DeleteUpload": "devicefarm:DeleteUpload", 
    "GetAccountSettings": "devicefarm:GetAccountSettings", 
    "GetDevice": "devicefarm:GetDevice", 
    "GetDeviceInstance": "devicefarm:GetDeviceInstance", 
    "GetDevicePool": "devicefarm:GetDevicePool", 
    "GetDevicePoolCompatibility": "devicefarm:GetDevicePoolCompatibility", 
    "GetInstanceProfile": "devicefarm:GetInstanceProfile", 
    "GetJob": "devicefarm:GetJob", 
    "GetNetworkProfile": "devicefarm:GetNetworkProfile", 
    "GetOfferingStatus": "devicefarm:GetOfferingStatus", 
    "GetProject": "devicefarm:GetProject", 
    "GetRemoteAccessSession": "devicefarm:GetRemoteAccessSession", 
    "GetRun": "devicefarm:GetRun", 
    "GetSuite": "devicefarm:GetSuite", 
    "GetTest": "devicefarm:GetTest", 
    "GetUpload": "devicefarm:GetUpload", 
    "GetVPCEConfiguration": "devicefarm:GetVPCEConfiguration", 
    "InstallToRemoteAccessSession": "devicefarm:InstallToRemoteAccessSession", 
    "ListArtifacts": "devicefarm:ListArtifacts", 
    "ListDeviceInstances": "devicefarm:ListDeviceInstances", 
    "ListDevicePools": "devicefarm:ListDevicePools", 
    "ListDevices": "devicefarm:ListDevices", 
    "ListInstanceProfiles": "devicefarm:ListInstanceProfiles", 
    "ListJobs": "devicefarm:ListJobs", 
    "ListNetworkProfiles": "devicefarm:ListNetworkProfiles", 
    "ListOfferingPromotions": "devicefarm:ListOfferingPromotions", 
    "ListOfferingTransactions": "devicefarm:ListOfferingTransactions", 
    "ListOfferings": "devicefarm:ListOfferings", 
    "ListProjects": "devicefarm:ListProjects", 
    "ListRemoteAccessSessions": "devicefarm:ListRemoteAccessSessions", 
    "ListRuns": "devicefarm:ListRuns", 
    "ListSamples": "devicefarm:ListSamples", 
    "ListSuites": "devicefarm:ListSuites", 
    "ListTests": "devicefarm:ListTests", 
    "ListUniqueProblems": "devicefarm:ListUniqueProblems", 
    "ListUploads": "devicefarm:ListUploads", 
    "ListVPCEConfigurations": "devicefarm:ListVPCEConfigurations", 
    "PurchaseOffering": "devicefarm:PurchaseOffering", 
    "RenewOffering": "devicefarm:RenewOffering", 
    "ScheduleRun": "devicefarm:ScheduleRun", 
    "StopJob": "devicefarm:*", 
    "StopRemoteAccessSession": "devicefarm:StopRemoteAccessSession", 
    "StopRun": "devicefarm:StopRun", 
    "UpdateDeviceInstance": "devicefarm:UpdateDeviceInstance", 
    "UpdateDevicePool": "devicefarm:UpdateDevicePool", 
    "UpdateInstanceProfile": "devicefarm:UpdateInstanceProfile", 
    "UpdateNetworkProfile": "devicefarm:UpdateNetworkProfile", 
    "UpdateProject": "devicefarm:UpdateProject", 
    "UpdateUpload": "devicefarm:*", 
    "UpdateVPCEConfiguration": "devicefarm:UpdateVPCEConfiguration"
  }, 
  "directconnect": {
    "AllocateConnectionOnInterconnect": "directconnect:AllocateConnectionOnInterconnect", 
    "AllocateHostedConnection": "directconnect:*", 
    "AllocatePrivateVirtualInterface": "directconnect:AllocatePrivateVirtualInterface", 
    "AllocatePublicVirtualInterface": "directconnect:AllocatePublicVirtualInterface", 
    "AssociateConnectionWithLag": "directconnect:*", 
    "AssociateHostedConnection": "directconnect:*", 
    "AssociateVirtualInterface": "directconnect:*", 
    "ConfirmConnection": "directconnect:ConfirmConnection", 
    "ConfirmPrivateVirtualInterface": "directconnect:ConfirmPrivateVirtualInterface", 
    "ConfirmPublicVirtualInterface": "directconnect:ConfirmPublicVirtualInterface", 
    "CreateBGPPeer": "directconnect:*", 
    "CreateConnection": "directconnect:CreateConnection", 
    "CreateDirectConnectGateway": "directconnect:CreateDirectConnectGateway", 
    "CreateDirectConnectGatewayAssociation": "directconnect:CreateDirectConnectGatewayAssociation", 
    "CreateInterconnect": "directconnect:CreateInterconnect", 
    "CreateLag": "directconnect:*", 
    "CreatePrivateVirtualInterface": "directconnect:CreatePrivateVirtualInterface", 
    "CreatePublicVirtualInterface": "directconnect:CreatePublicVirtualInterface", 
    "DeleteBGPPeer": "directconnect:*", 
    "DeleteConnection": "directconnect:DeleteConnection", 
    "DeleteDirectConnectGateway": "directconnect:*", 
    "DeleteDirectConnectGatewayAssociation": "directconnect:*", 
    "DeleteInterconnect": "directconnect:DeleteInterconnect", 
    "DeleteLag": "directconnect:*", 
    "DeleteVirtualInterface": "directconnect:DeleteVirtualInterface", 
    "DescribeConnectionLoa": "directconnect:DescribeConnectionLoa", 
    "DescribeConnections": "directconnect:DescribeConnections", 
    "DescribeConnectionsOnInterconnect": "directconnect:DescribeConnectionsOnInterconnect", 
    "DescribeDirectConnectGatewayAssociations": "directconnect:*", 
    "DescribeDirectConnectGatewayAttachments": "directconnect:*", 
    "DescribeDirectConnectGateways": "directconnect:*", 
    "DescribeHostedConnections": "directconnect:*", 
    "DescribeInterconnectLoa": "directconnect:DescribeInterconnectLoa", 
    "DescribeInterconnects": "directconnect:DescribeInterconnects", 
    "DescribeLags": "directconnect:*", 
    "DescribeLoa": "directconnect:*", 
    "DescribeLocations": "directconnect:DescribeLocations", 
    "DescribeTags": "directconnect:*", 
    "DescribeVirtualGateways": "directconnect:DescribeVirtualGateways", 
    "DescribeVirtualInterfaces": "directconnect:DescribeVirtualInterfaces", 
    "DisassociateConnectionFromLag": "directconnect:*", 
    "TagResource": "directconnect:*", 
    "UntagResource": "directconnect:*", 
    "UpdateLag": "directconnect:*", 
    "UpdateVirtualInterfaceAttributes": "directconnect:UpdateVirtualInterfaceAttributes"
  }, 
  "discovery": {
    "AssociateConfigurationItemsToApplication": "discovery:AssociateConfigurationItemsToApplication", 
    "BatchDeleteImportData": "discovery:BatchDeleteImportData", 
    "CreateApplication": "discovery:CreateApplication", 
    "CreateTags": "discovery:CreateTags", 
    "DeleteApplications": "discovery:DeleteApplications", 
    "DeleteTags": "discovery:DeleteTags", 
    "DescribeAgents": "discovery:DescribeAgents", 
    "DescribeConfigurations": "discovery:DescribeConfigurations", 
    "DescribeContinuousExports": "discovery:*", 
    "DescribeExportConfigurations": "discovery:DescribeExportConfigurations", 
    "DescribeExportTasks": "discovery:*", 
    "DescribeImportTasks": "discovery:DescribeImportTasks", 
    "DescribeTags": "discovery:DescribeTags", 
    "DisassociateConfigurationItemsFromApplication": "discovery:DisassociateConfigurationItemsFromApplication", 
    "ExportConfigurations": "discovery:ExportConfigurations", 
    "GetDiscoverySummary": "discovery:GetDiscoverySummary", 
    "ListConfigurations": "discovery:ListConfigurations", 
    "ListServerNeighbors": "discovery:ListServerNeighbors", 
    "StartContinuousExport": "discovery:*", 
    "StartDataCollectionByAgentIds": "discovery:StartDataCollectionByAgentIds", 
    "StartExportTask": "discovery:StartExportTask", 
    "StartImportTask": "discovery:StartImportTask", 
    "StopContinuousExport": "discovery:*", 
    "StopDataCollectionByAgentIds": "discovery:StopDataCollectionByAgentIds", 
    "UpdateApplication": "discovery:UpdateApplication"
  }, 
  "dlm": {
    "CreateLifecyclePolicy": "dlm:*", 
    "DeleteLifecyclePolicy": "dlm:*", 
    "GetLifecyclePolicies": "dlm:*", 
    "GetLifecyclePolicy": "dlm:*", 
    "UpdateLifecyclePolicy": "dlm:*"
  }, 
  "dms": {
    "AddTagsToResource": "dms:AddTagsToResource", 
    "ApplyPendingMaintenanceAction": "dms:ApplyPendingMaintenanceAction", 
    "CreateEndpoint": "dms:CreateEndpoint", 
    "CreateEventSubscription": "dms:*", 
    "CreateReplicationInstance": "dms:CreateReplicationInstance", 
    "CreateReplicationSubnetGroup": "dms:CreateReplicationSubnetGroup", 
    "CreateReplicationTask": "dms:CreateReplicationTask", 
    "DeleteCertificate": "dms:*", 
    "DeleteEndpoint": "dms:DeleteEndpoint", 
    "DeleteEventSubscription": "dms:DeleteEventSubscription", 
    "DeleteReplicationInstance": "dms:DeleteReplicationInstance", 
    "DeleteReplicationSubnetGroup": "dms:DeleteReplicationSubnetGroup", 
    "DeleteReplicationTask": "dms:DeleteReplicationTask", 
    "DescribeAccountAttributes": "dms:DescribeAccountAttributes", 
    "DescribeCertificates": "dms:DescribeCertificates", 
    "DescribeConnections": "dms:DescribeConnections", 
    "DescribeEndpointTypes": "dms:DescribeEndpointTypes", 
    "DescribeEndpoints": "dms:DescribeEndpoints", 
    "DescribeEventCategories": "dms:DescribeEventCategories", 
    "DescribeEventSubscriptions": "dms:DescribeEventSubscriptions", 
    "DescribeEvents": "dms:DescribeEvents", 
    "DescribeOrderableReplicationInstances": "dms:DescribeOrderableReplicationInstances", 
    "DescribeRefreshSchemasStatus": "dms:DescribeRefreshSchemasStatus", 
    "DescribeReplicationInstanceTaskLogs": [
      "dms:*", 
      "dms:DescribeReplicationInstanceTaskLogs"
    ], 
    "DescribeReplicationInstances": "dms:DescribeReplicationInstances", 
    "DescribeReplicationSubnetGroups": "dms:DescribeReplicationSubnetGroups", 
    "DescribeReplicationTaskAssessmentResults": [
      "dms:*", 
      "dms:DescribeReplicationTaskAssessmentResults"
    ], 
    "DescribeReplicationTasks": "dms:DescribeReplicationTasks", 
    "DescribeSchemas": "dms:DescribeSchemas", 
    "DescribeTableStatistics": "dms:DescribeTableStatistics", 
    "ImportCertificate": "dms:*", 
    "ListTagsForResource": "dms:ListTagsForResource", 
    "ModifyEndpoint": "dms:ModifyEndpoint", 
    "ModifyEventSubscription": "dms:ModifyEventSubscription", 
    "ModifyReplicationInstance": "dms:ModifyReplicationInstance", 
    "ModifyReplicationSubnetGroup": "dms:ModifyReplicationSubnetGroup", 
    "ModifyReplicationTask": "dms:ModifyReplicationTask", 
    "RebootReplicationInstance": "dms:*", 
    "RefreshSchemas": "dms:RefreshSchemas", 
    "ReloadTables": "dms:*", 
    "RemoveTagsFromResource": "dms:RemoveTagsFromResource", 
    "StartReplicationTask": "dms:StartReplicationTask", 
    "StartReplicationTaskAssessment": "dms:*", 
    "StopReplicationTask": "dms:StopReplicationTask", 
    "TestConnection": "dms:TestConnection"
  }, 
  "ds": {
    "AcceptSharedDirectory": "ds:AcceptSharedDirectory", 
    "AddIpRoutes": "ds:AddIpRoutes", 
    "AddTagsToResource": "ds:AddTagsToResource", 
    "CancelSchemaExtension": "ds:CancelSchemaExtension", 
    "ConnectDirectory": "ds:ConnectDirectory", 
    "CreateAlias": "ds:CreateAlias", 
    "CreateComputer": "ds:CreateComputer", 
    "CreateConditionalForwarder": "ds:CreateConditionalForwarder", 
    "CreateDirectory": "ds:CreateDirectory", 
    "CreateIdentityPoolDirectory": "ds:CreateIdentityPoolDirectory", 
    "CreateLogSubscription": "ds:CreateLogSubscription", 
    "CreateMicrosoftAD": "ds:CreateMicrosoftAD", 
    "CreateSnapshot": "ds:CreateSnapshot", 
    "CreateTrust": "ds:CreateTrust", 
    "DeleteConditionalForwarder": "ds:DeleteConditionalForwarder", 
    "DeleteDirectory": "ds:DeleteDirectory", 
    "DeleteLogSubscription": "ds:DeleteLogSubscription", 
    "DeleteSnapshot": "ds:DeleteSnapshot", 
    "DeleteTrust": "ds:DeleteTrust", 
    "DeregisterEventTopic": "ds:DeregisterEventTopic", 
    "DescribeConditionalForwarders": "ds:DescribeConditionalForwarders", 
    "DescribeDirectories": "ds:DescribeDirectories", 
    "DescribeDomainControllers": [
      "ds:*", 
      "ds:DescribeDomainControllers"
    ], 
    "DescribeEventTopics": "ds:DescribeEventTopics", 
    "DescribeSharedDirectories": "ds:DescribeSharedDirectories", 
    "DescribeSnapshots": "ds:DescribeSnapshots", 
    "DescribeTrusts": "ds:DescribeTrusts", 
    "DisableRadius": "ds:DisableRadius", 
    "DisableSso": "ds:DisableSso", 
    "EnableRadius": "ds:EnableRadius", 
    "EnableSso": "ds:EnableSso", 
    "GetAuthorizedApplicationDetails ": "ds:GetAuthorizedApplicationDetails", 
    "GetDirectoryLimits": "ds:GetDirectoryLimits", 
    "GetSnapshotLimits": "ds:GetSnapshotLimits", 
    "ListIpRoutes": "ds:ListIpRoutes", 
    "ListLogSubscriptions": "ds:ListLogSubscriptions", 
    "ListSchemaExtensions": "ds:ListSchemaExtensions", 
    "ListTagsForResource": "ds:ListTagsForResource", 
    "RegisterEventTopic": "ds:RegisterEventTopic", 
    "RejectSharedDirectory": "ds:RejectSharedDirectory", 
    "RemoveIpRoutes": "ds:RemoveIpRoutes", 
    "RemoveTagsFromResource": "ds:RemoveTagsFromResource", 
    "ResetUserPassword": "ds:*", 
    "RestoreFromSnapshot": "ds:RestoreFromSnapshot", 
    "ShareDirectory": "ds:ShareDirectory", 
    "StartSchemaExtension": "ds:StartSchemaExtension", 
    "UnshareDirectory": "ds:UnshareDirectory", 
    "UpdateConditionalForwarder": "ds:UpdateConditionalForwarder", 
    "UpdateNumberOfDomainControllers": "ds:*", 
    "UpdateRadius": "ds:UpdateRadius", 
    "VerifyTrust": "ds:VerifyTrust"
  }, 
  "dynamodb": {
    "BatchGetItem": "dynamodb:BatchGetItem", 
    "BatchWriteItem": "dynamodb:BatchWriteItem", 
    "ConditionCheckItem": "dynamodb:*", 
    "CreateBackup": "dynamodb:CreateBackup", 
    "CreateGlobalTable": "dynamodb:CreateGlobalTable", 
    "CreateTable": "dynamodb:CreateTable", 
    "DeleteBackup": "dynamodb:DeleteBackup", 
    "DeleteItem": "dynamodb:DeleteItem", 
    "DeleteTable": "dynamodb:DeleteTable", 
    "DescribeBackup": "dynamodb:DescribeBackup", 
    "DescribeContinuousBackups": "dynamodb:DescribeContinuousBackups", 
    "DescribeGlobalTable": "dynamodb:DescribeGlobalTable", 
    "DescribeGlobalTableSettings": "dynamodb:DescribeGlobalTableSettings", 
    "DescribeLimits": "dynamodb:DescribeLimits", 
    "DescribeReservedCapacity": "dynamodb:DescribeReservedCapacity", 
    "DescribeReservedCapacityOfferings": "dynamodb:DescribeReservedCapacityOfferings", 
    "DescribeStream": "dynamodb:DescribeStream", 
    "DescribeTable": "dynamodb:DescribeTable", 
    "DescribeTimeToLive": "dynamodb:DescribeTimeToLive", 
    "GetItem": "dynamodb:GetItem", 
    "GetRecords": "dynamodb:GetRecords", 
    "GetShardIterator": "dynamodb:GetShardIterator", 
    "ListBackups": "dynamodb:ListBackups", 
    "ListGlobalTables": "dynamodb:ListGlobalTables", 
    "ListStreams": "dynamodb:ListStreams", 
    "ListTables": "dynamodb:ListTables", 
    "ListTagsOfResource": "dynamodb:ListTagsOfResource", 
    "PurchaseReservedCapacityOfferings": "dynamodb:PurchaseReservedCapacityOfferings", 
    "PutItem": "dynamodb:PutItem", 
    "Query": "dynamodb:Query", 
    "RestoreTableFromBackup": "dynamodb:RestoreTableFromBackup", 
    "RestoreTableToPointInTime": "dynamodb:RestoreTableToPointInTime", 
    "Scan": "dynamodb:Scan", 
    "TagResource": "dynamodb:TagResource", 
    "UntagResource": "dynamodb:UntagResource", 
    "UpdateContinuousBackups": "dynamodb:UpdateContinuousBackups", 
    "UpdateGlobalTable": "dynamodb:UpdateGlobalTable", 
    "UpdateGlobalTableSettings": "dynamodb:UpdateGlobalTableSettings", 
    "UpdateItem": "dynamodb:UpdateItem", 
    "UpdateTable": "dynamodb:UpdateTable", 
    "UpdateTimeToLive": "dynamodb:UpdateTimeToLive"
  }, 
  "dynamodb-datamodel": {
    "CreateBatchGet": "dynamodb:BatchGetItem", 
    "CreateBatchWrite": "dynamodb:BatchWriteItem", 
    "CreateMultiTableBatchGet": "dynamodb:BatchGetItem", 
    "CreateMultiTableBatchWrite": "dynamodb:BatchWriteItem", 
    "Delete": "dynamodb:DeleteItem", 
    "Load": "dynamodb:GetItem", 
    "Query": "dynamodb:Query", 
    "Save": [
      "dynamodb:UpdateItem", 
      "dynamodb:PutItem"
    ], 
    "Scan": "dynamodb:Scan"
  }, 
  "dynamodb-mapper": {
    "BatchDelete": "dynamodb:BatchWriteItem", 
    "BatchLoad": "dynamodb:BatchGetItem", 
    "BatchSave": "dynamodb:BatchWriteItem", 
    "BatchWrite": "dynamodb:BatchWriteItem", 
    "Count": "dynamodb:Scan", 
    "Delete": "dynamodb:DeleteItem", 
    "Load": "dynamodb:GetItem", 
    "ParallelScan": "dynamodb:Scan", 
    "Query": "dynamodb:Query", 
    "QueryPage": "dynamodb:Query", 
    "Save": [
      "dynamodb:UpdateItem", 
      "dynamodb:PutItem"
    ], 
    "Scan": "dynamodb:Scan", 
    "ScanPage": "dynamodb:Scan"
  }, 
  "dynamodb-table": {
    "CreateGSI": "dynamodb:UpdateTable", 
    "Delete": "dynamodb:DeleteTable", 
    "DeleteItem": "dynamodb:DeleteItem", 
    "Describe": "dynamodb:DescribeTable", 
    "GetDescription": "dynamodb:DescribeTable", 
    "GetItem": "dynamodb:GetItem", 
    "GetItemOutcome": "dynamodb:GetItem", 
    "PutItem": "dynamodb:PutItem", 
    "Query": "dynamodb:Query", 
    "Scan": "dynamodb:Scan", 
    "UpdateItem": "dynamodb:UpdateItem", 
    "UpdateTable": "dynamodb:UpdateTable"
  }, 
  "dynamodb.DocumentClient": {
    "BatchGet": "dynamodb:BatchGetItem", 
    "BatchWrite": "dynamodb:BatchWriteItem", 
    "Delete": "dynamodb:DeleteItem", 
    "Get": "dynamodb:GetItem", 
    "Put": "dynamodb:PutItem", 
    "Query": "dynamodb:Query", 
    "Scan": "dynamodb:Scan", 
    "Update": "dynamodb:UpdateItem",
    "Actions": {
      "BatchGet": "BatchGetItem",
      "BatchWrite": "BatchWriteItem",
      "Delete": "DeleteItem",
      "Get": "GetItem",
      "Put": "PutItem",
      "Query": "Query",
      "Scan": "Scan",
      "Update": "UpdateItem"
    }
  }, 
  "dynamodbstreams": {
    "DescribeStream": "dynamodb:DescribeStream", 
    "GetRecords": "dynamodb:GetRecords", 
    "GetShardIterator": "dynamodb:GetShardIterator", 
    "ListStreams": "dynamodb:ListStreams"
  }, 
  "ec2": {
    "AcceptReservedInstancesExchangeQuote": "ec2:AcceptReservedInstancesExchangeQuote", 
    "AcceptTransitGatewayVpcAttachment": "ec2:AcceptTransitGatewayVpcAttachment", 
    "AcceptVpcEndpointConnections": "ec2:AcceptVpcEndpointConnections", 
    "AcceptVpcPeeringConnection": "ec2:AcceptVpcPeeringConnection", 
    "AdvertiseByoipCidr": "ec2:AdvertiseByoipCidr", 
    "AllocateAddress": "ec2:AllocateAddress", 
    "AllocateHosts": "ec2:AllocateHosts", 
    "ApplySecurityGroupsToClientVpnTargetNetwork": "ec2:ApplySecurityGroupsToClientVpnTargetNetwork", 
    "AssignIpv6Addresses": "ec2:AssignIpv6Addresses", 
    "AssignPrivateIpAddresses": "ec2:AssignPrivateIpAddresses", 
    "AssociateAddress": "ec2:AssociateAddress", 
    "AssociateClientVpnTargetNetwork": "ec2:AssociateClientVpnTargetNetwork", 
    "AssociateDhcpOptions": "ec2:AssociateDhcpOptions", 
    "AssociateIamInstanceProfile": "ec2:AssociateIamInstanceProfile", 
    "AssociateRouteTable": "ec2:AssociateRouteTable", 
    "AssociateSubnetCidrBlock": "ec2:AssociateSubnetCidrBlock", 
    "AssociateTransitGatewayRouteTable": "ec2:AssociateTransitGatewayRouteTable", 
    "AssociateVpcCidrBlock": "ec2:AssociateVpcCidrBlock", 
    "AttachClassicLinkVpc": "ec2:AttachClassicLinkVpc", 
    "AttachInternetGateway": "ec2:AttachInternetGateway", 
    "AttachNetworkInterface": "ec2:AttachNetworkInterface", 
    "AttachVolume": "ec2:AttachVolume", 
    "AttachVpnGateway": "ec2:AttachVpnGateway", 
    "AuthorizeClientVpnIngress": "ec2:AuthorizeClientVpnIngress", 
    "AuthorizeSecurityGroupEgress": "ec2:AuthorizeSecurityGroupEgress", 
    "AuthorizeSecurityGroupIngress": "ec2:AuthorizeSecurityGroupIngress", 
    "BundleInstance": "ec2:BundleInstance", 
    "CancelBundleTask": "ec2:CancelBundleTask", 
    "CancelCapacityReservation": "ec2:CancelCapacityReservation", 
    "CancelConversionTask": "ec2:CancelConversionTask", 
    "CancelExportTask": "ec2:CancelExportTask", 
    "CancelImportTask": "ec2:CancelImportTask", 
    "CancelReservedInstancesListing": "ec2:CancelReservedInstancesListing", 
    "CancelSpotFleetRequests": "ec2:CancelSpotFleetRequests", 
    "CancelSpotInstanceRequests": "ec2:CancelSpotInstanceRequests", 
    "ConfirmProductInstance": "ec2:ConfirmProductInstance", 
    "CopyFpgaImage": "ec2:CopyFpgaImage", 
    "CopyImage": "ec2:CopyImage", 
    "CopySnapshot": "ec2:CopySnapshot", 
    "CreateCapacityReservation": "ec2:CreateCapacityReservation", 
    "CreateClientVpnEndpoint": "ec2:CreateClientVpnEndpoint", 
    "CreateClientVpnRoute": "ec2:CreateClientVpnRoute", 
    "CreateCustomerGateway": "ec2:CreateCustomerGateway", 
    "CreateDefaultSubnet": "ec2:CreateDefaultSubnet", 
    "CreateDefaultVpc": "ec2:CreateDefaultVpc", 
    "CreateDhcpOptions": "ec2:CreateDhcpOptions", 
    "CreateEgressOnlyInternetGateway": "ec2:CreateEgressOnlyInternetGateway", 
    "CreateFleet": "ec2:CreateFleet", 
    "CreateFlowLogs": "ec2:CreateFlowLogs", 
    "CreateFpgaImage": "ec2:CreateFpgaImage", 
    "CreateImage": "ec2:CreateImage", 
    "CreateInstanceExportTask": "ec2:CreateInstanceExportTask", 
    "CreateInternetGateway": "ec2:CreateInternetGateway", 
    "CreateKeyPair": "ec2:CreateKeyPair", 
    "CreateLaunchTemplate": "ec2:CreateLaunchTemplate", 
    "CreateLaunchTemplateVersion": "ec2:CreateLaunchTemplateVersion", 
    "CreateNatGateway": "ec2:CreateNatGateway", 
    "CreateNetworkAcl": "ec2:CreateNetworkAcl", 
    "CreateNetworkAclEntry": "ec2:CreateNetworkAclEntry", 
    "CreateNetworkInterface": "ec2:CreateNetworkInterface", 
    "CreateNetworkInterfacePermission": "ec2:CreateNetworkInterfacePermission", 
    "CreatePlacementGroup": "ec2:CreatePlacementGroup", 
    "CreateReservedInstancesListing": "ec2:CreateReservedInstancesListing", 
    "CreateRoute": "ec2:CreateRoute", 
    "CreateRouteTable": "ec2:CreateRouteTable", 
    "CreateSecurityGroup": "ec2:CreateSecurityGroup", 
    "CreateSnapshot": "ec2:CreateSnapshot", 
    "CreateSnapshots": "ec2:CreateSnapshots", 
    "CreateSpotDatafeedSubscription": "ec2:CreateSpotDatafeedSubscription", 
    "CreateSubnet": "ec2:CreateSubnet", 
    "CreateTags": "ec2:CreateTags", 
    "CreateTransitGateway": "ec2:CreateTransitGateway", 
    "CreateTransitGatewayRoute": "ec2:CreateTransitGatewayRoute", 
    "CreateTransitGatewayRouteTable": "ec2:CreateTransitGatewayRouteTable", 
    "CreateTransitGatewayVpcAttachment": "ec2:CreateTransitGatewayVpcAttachment", 
    "CreateVolume": "ec2:CreateVolume", 
    "CreateVpc": "ec2:CreateVpc", 
    "CreateVpcEndpoint": "ec2:CreateVpcEndpoint", 
    "CreateVpcEndpointConnectionNotification": "ec2:CreateVpcEndpointConnectionNotification", 
    "CreateVpcEndpointServiceConfiguration": "ec2:CreateVpcEndpointServiceConfiguration", 
    "CreateVpcPeeringConnection": "ec2:CreateVpcPeeringConnection", 
    "CreateVpnConnection": "ec2:CreateVpnConnection", 
    "CreateVpnConnectionRoute": "ec2:CreateVpnConnectionRoute", 
    "CreateVpnGateway": "ec2:CreateVpnGateway", 
    "DeleteClientVpnEndpoint": "ec2:DeleteClientVpnEndpoint", 
    "DeleteClientVpnRoute": "ec2:DeleteClientVpnRoute", 
    "DeleteCustomerGateway": "ec2:DeleteCustomerGateway", 
    "DeleteDhcpOptions": "ec2:DeleteDhcpOptions", 
    "DeleteEgressOnlyInternetGateway": "ec2:DeleteEgressOnlyInternetGateway", 
    "DeleteFleets": "ec2:DeleteFleets", 
    "DeleteFlowLogs": "ec2:DeleteFlowLogs", 
    "DeleteFpgaImage": "ec2:DeleteFpgaImage", 
    "DeleteInternetGateway": "ec2:DeleteInternetGateway", 
    "DeleteKeyPair": "ec2:DeleteKeyPair", 
    "DeleteLaunchTemplate": "ec2:DeleteLaunchTemplate", 
    "DeleteLaunchTemplateVersions": "ec2:DeleteLaunchTemplateVersions", 
    "DeleteNatGateway": "ec2:DeleteNatGateway", 
    "DeleteNetworkAcl": "ec2:DeleteNetworkAcl", 
    "DeleteNetworkAclEntry": "ec2:DeleteNetworkAclEntry", 
    "DeleteNetworkInterface": "ec2:DeleteNetworkInterface", 
    "DeleteNetworkInterfacePermission": "ec2:DeleteNetworkInterfacePermission", 
    "DeletePlacementGroup": "ec2:DeletePlacementGroup", 
    "DeleteRoute": "ec2:DeleteRoute", 
    "DeleteRouteTable": "ec2:DeleteRouteTable", 
    "DeleteSecurityGroup": "ec2:DeleteSecurityGroup", 
    "DeleteSnapshot": "ec2:DeleteSnapshot", 
    "DeleteSpotDatafeedSubscription": "ec2:DeleteSpotDatafeedSubscription", 
    "DeleteSubnet": "ec2:DeleteSubnet", 
    "DeleteTags": "ec2:DeleteTags", 
    "DeleteTransitGateway": "ec2:DeleteTransitGateway", 
    "DeleteTransitGatewayRoute": "ec2:DeleteTransitGatewayRoute", 
    "DeleteTransitGatewayRouteTable": "ec2:DeleteTransitGatewayRouteTable", 
    "DeleteTransitGatewayVpcAttachment": "ec2:DeleteTransitGatewayVpcAttachment", 
    "DeleteVolume": "ec2:DeleteVolume", 
    "DeleteVpc": "ec2:DeleteVpc", 
    "DeleteVpcEndpointConnectionNotifications": "ec2:DeleteVpcEndpointConnectionNotifications", 
    "DeleteVpcEndpointServiceConfigurations": "ec2:DeleteVpcEndpointServiceConfigurations", 
    "DeleteVpcEndpoints": "ec2:DeleteVpcEndpoints", 
    "DeleteVpcPeeringConnection": "ec2:DeleteVpcPeeringConnection", 
    "DeleteVpnConnection": "ec2:DeleteVpnConnection", 
    "DeleteVpnConnectionRoute": "ec2:DeleteVpnConnectionRoute", 
    "DeleteVpnGateway": "ec2:DeleteVpnGateway", 
    "DeprovisionByoipCidr": "ec2:DeprovisionByoipCidr", 
    "DeregisterImage": "ec2:DeregisterImage", 
    "DescribeAccountAttributes": "ec2:DescribeAccountAttributes", 
    "DescribeAddresses": "ec2:DescribeAddresses", 
    "DescribeAggregateIdFormat": "ec2:DescribeAggregateIdFormat", 
    "DescribeAvailabilityZones": "ec2:DescribeAvailabilityZones", 
    "DescribeBundleTasks": "ec2:DescribeBundleTasks", 
    "DescribeByoipCidrs": "ec2:DescribeByoipCidrs", 
    "DescribeCapacityReservations": "ec2:DescribeCapacityReservations", 
    "DescribeClassicLinkInstances": "ec2:DescribeClassicLinkInstances", 
    "DescribeClientVpnAuthorizationRules": "ec2:DescribeClientVpnAuthorizationRules", 
    "DescribeClientVpnConnections": "ec2:DescribeClientVpnConnections", 
    "DescribeClientVpnEndpoints": "ec2:DescribeClientVpnEndpoints", 
    "DescribeClientVpnRoutes": "ec2:DescribeClientVpnRoutes", 
    "DescribeClientVpnTargetNetworks": "ec2:DescribeClientVpnTargetNetworks", 
    "DescribeConversionTasks": "ec2:DescribeConversionTasks", 
    "DescribeCustomerGateways": "ec2:DescribeCustomerGateways", 
    "DescribeDhcpOptions": "ec2:DescribeDhcpOptions", 
    "DescribeEgressOnlyInternetGateways": "ec2:DescribeEgressOnlyInternetGateways", 
    "DescribeElasticGpus": "ec2:DescribeElasticGpus", 
    "DescribeExportTasks": "ec2:DescribeExportTasks", 
    "DescribeFleetHistory": "ec2:DescribeFleetHistory", 
    "DescribeFleetInstances": "ec2:DescribeFleetInstances", 
    "DescribeFleets": "ec2:DescribeFleets", 
    "DescribeFlowLogs": "ec2:DescribeFlowLogs", 
    "DescribeFpgaImageAttribute": "ec2:DescribeFpgaImageAttribute", 
    "DescribeFpgaImages": "ec2:DescribeFpgaImages", 
    "DescribeHostReservationOfferings": "ec2:DescribeHostReservationOfferings", 
    "DescribeHostReservations": "ec2:DescribeHostReservations", 
    "DescribeHosts": "ec2:DescribeHosts", 
    "DescribeIamInstanceProfileAssociations": "ec2:DescribeIamInstanceProfileAssociations", 
    "DescribeIdFormat": "ec2:DescribeIdFormat", 
    "DescribeIdentityIdFormat": "ec2:DescribeIdentityIdFormat", 
    "DescribeImageAttribute": "ec2:DescribeImageAttribute", 
    "DescribeImages": "ec2:DescribeImages", 
    "DescribeImportImageTasks": "ec2:DescribeImportImageTasks", 
    "DescribeImportSnapshotTasks": "ec2:DescribeImportSnapshotTasks", 
    "DescribeInstanceAttribute": "ec2:DescribeInstanceAttribute", 
    "DescribeInstanceCreditSpecifications": "ec2:DescribeInstanceCreditSpecifications", 
    "DescribeInstanceStatus": "ec2:DescribeInstanceStatus", 
    "DescribeInstances": "ec2:DescribeInstances", 
    "DescribeInternetGateways": "ec2:DescribeInternetGateways", 
    "DescribeKeyPairs": "ec2:DescribeKeyPairs", 
    "DescribeLaunchTemplateVersions": "ec2:DescribeLaunchTemplateVersions", 
    "DescribeLaunchTemplates": "ec2:DescribeLaunchTemplates", 
    "DescribeMovingAddresses": "ec2:DescribeMovingAddresses", 
    "DescribeNatGateways": "ec2:DescribeNatGateways", 
    "DescribeNetworkAcls": "ec2:DescribeNetworkAcls", 
    "DescribeNetworkInterfaceAttribute": "ec2:DescribeNetworkInterfaceAttribute", 
    "DescribeNetworkInterfacePermissions": "ec2:DescribeNetworkInterfacePermissions", 
    "DescribeNetworkInterfaces": "ec2:DescribeNetworkInterfaces", 
    "DescribePlacementGroups": "ec2:DescribePlacementGroups", 
    "DescribePrefixLists": "ec2:DescribePrefixLists", 
    "DescribePrincipalIdFormat": "ec2:DescribePrincipalIdFormat", 
    "DescribePublicIpv4Pools": "ec2:DescribePublicIpv4Pools", 
    "DescribeRegions": "ec2:DescribeRegions", 
    "DescribeReservedInstances": "ec2:DescribeReservedInstances", 
    "DescribeReservedInstancesListings": "ec2:DescribeReservedInstancesListings", 
    "DescribeReservedInstancesModifications": "ec2:DescribeReservedInstancesModifications", 
    "DescribeReservedInstancesOfferings": "ec2:DescribeReservedInstancesOfferings", 
    "DescribeRouteTables": "ec2:DescribeRouteTables", 
    "DescribeScheduledInstanceAvailability": "ec2:DescribeScheduledInstanceAvailability", 
    "DescribeScheduledInstances": "ec2:DescribeScheduledInstances", 
    "DescribeSecurityGroupReferences": "ec2:DescribeSecurityGroupReferences", 
    "DescribeSecurityGroups": "ec2:DescribeSecurityGroups", 
    "DescribeSnapshotAttribute": "ec2:DescribeSnapshotAttribute", 
    "DescribeSnapshots": "ec2:DescribeSnapshots", 
    "DescribeSpotDatafeedSubscription": "ec2:DescribeSpotDatafeedSubscription", 
    "DescribeSpotFleetInstances": "ec2:DescribeSpotFleetInstances", 
    "DescribeSpotFleetRequestHistory": "ec2:DescribeSpotFleetRequestHistory", 
    "DescribeSpotFleetRequests": "ec2:DescribeSpotFleetRequests", 
    "DescribeSpotInstanceRequests": "ec2:DescribeSpotInstanceRequests", 
    "DescribeSpotPriceHistory": "ec2:DescribeSpotPriceHistory", 
    "DescribeStaleSecurityGroups": "ec2:DescribeStaleSecurityGroups", 
    "DescribeSubnets": "ec2:DescribeSubnets", 
    "DescribeTags": "ec2:DescribeTags", 
    "DescribeTransitGatewayAttachments": "ec2:DescribeTransitGatewayAttachments", 
    "DescribeTransitGatewayRouteTables": "ec2:DescribeTransitGatewayRouteTables", 
    "DescribeTransitGatewayVpcAttachments": "ec2:DescribeTransitGatewayVpcAttachments", 
    "DescribeTransitGateways": "ec2:DescribeTransitGateways", 
    "DescribeVolumeAttribute": "ec2:DescribeVolumeAttribute", 
    "DescribeVolumeStatus": "ec2:DescribeVolumeStatus", 
    "DescribeVolumes": "ec2:DescribeVolumes", 
    "DescribeVolumesModifications": "ec2:DescribeVolumesModifications", 
    "DescribeVpcAttribute": "ec2:DescribeVpcAttribute", 
    "DescribeVpcClassicLink": "ec2:DescribeVpcClassicLink", 
    "DescribeVpcClassicLinkDnsSupport": "ec2:DescribeVpcClassicLinkDnsSupport", 
    "DescribeVpcEndpointConnectionNotifications": "ec2:DescribeVpcEndpointConnectionNotifications", 
    "DescribeVpcEndpointConnections": "ec2:DescribeVpcEndpointConnections", 
    "DescribeVpcEndpointServiceConfigurations": "ec2:DescribeVpcEndpointServiceConfigurations", 
    "DescribeVpcEndpointServicePermissions": "ec2:DescribeVpcEndpointServicePermissions", 
    "DescribeVpcEndpointServices": "ec2:DescribeVpcEndpointServices", 
    "DescribeVpcEndpoints": "ec2:DescribeVpcEndpoints", 
    "DescribeVpcPeeringConnections": "ec2:DescribeVpcPeeringConnections", 
    "DescribeVpcs": "ec2:DescribeVpcs", 
    "DescribeVpnConnections": "ec2:DescribeVpnConnections", 
    "DescribeVpnGateways": "ec2:DescribeVpnGateways", 
    "DetachClassicLinkVpc": "ec2:DetachClassicLinkVpc", 
    "DetachInternetGateway": "ec2:DetachInternetGateway", 
    "DetachNetworkInterface": "ec2:DetachNetworkInterface", 
    "DetachVolume": "ec2:DetachVolume", 
    "DetachVpnGateway": "ec2:DetachVpnGateway", 
    "DisableTransitGatewayRouteTablePropagation": "ec2:DisableTransitGatewayRouteTablePropagation", 
    "DisableVgwRoutePropagation": "ec2:DisableVgwRoutePropagation", 
    "DisableVpcClassicLink": "ec2:DisableVpcClassicLink", 
    "DisableVpcClassicLinkDnsSupport": "ec2:DisableVpcClassicLinkDnsSupport", 
    "DisassociateAddress": "ec2:DisassociateAddress", 
    "DisassociateClientVpnTargetNetwork": "ec2:DisassociateClientVpnTargetNetwork", 
    "DisassociateIamInstanceProfile": "ec2:DisassociateIamInstanceProfile", 
    "DisassociateRouteTable": "ec2:DisassociateRouteTable", 
    "DisassociateSubnetCidrBlock": "ec2:DisassociateSubnetCidrBlock", 
    "DisassociateTransitGatewayRouteTable": "ec2:DisassociateTransitGatewayRouteTable", 
    "DisassociateVpcCidrBlock": "ec2:DisassociateVpcCidrBlock", 
    "EnableTransitGatewayRouteTablePropagation": "ec2:EnableTransitGatewayRouteTablePropagation", 
    "EnableVgwRoutePropagation": "ec2:EnableVgwRoutePropagation", 
    "EnableVolumeIO": "ec2:EnableVolumeIO", 
    "EnableVpcClassicLink": "ec2:EnableVpcClassicLink", 
    "EnableVpcClassicLinkDnsSupport": "ec2:EnableVpcClassicLinkDnsSupport", 
    "ExportClientVpnClientCertificateRevocationList": "ec2:ExportClientVpnClientCertificateRevocationList", 
    "ExportClientVpnClientConfiguration": "ec2:ExportClientVpnClientConfiguration", 
    "ExportTransitGatewayRoutes": "ec2:ExportTransitGatewayRoutes", 
    "GetConsoleOutput": "ec2:GetConsoleOutput", 
    "GetConsoleScreenshot": "ec2:GetConsoleScreenshot", 
    "GetHostReservationPurchasePreview": "ec2:GetHostReservationPurchasePreview", 
    "GetLaunchTemplateData": "ec2:GetLaunchTemplateData", 
    "GetPasswordData": "ec2:GetPasswordData", 
    "GetReservedInstancesExchangeQuote": "ec2:GetReservedInstancesExchangeQuote", 
    "GetTransitGatewayAttachmentPropagations": "ec2:GetTransitGatewayAttachmentPropagations", 
    "GetTransitGatewayRouteTableAssociations": "ec2:GetTransitGatewayRouteTableAssociations", 
    "GetTransitGatewayRouteTablePropagations": "ec2:GetTransitGatewayRouteTablePropagations", 
    "ImportClientVpnClientCertificateRevocationList": "ec2:ImportClientVpnClientCertificateRevocationList", 
    "ImportImage": "ec2:ImportImage", 
    "ImportInstance": "ec2:ImportInstance", 
    "ImportKeyPair": "ec2:ImportKeyPair", 
    "ImportSnapshot": "ec2:ImportSnapshot", 
    "ImportVolume": "ec2:ImportVolume", 
    "ModifyCapacityReservation": "ec2:ModifyCapacityReservation", 
    "ModifyClientVpnEndpoint": "ec2:ModifyClientVpnEndpoint", 
    "ModifyFleet": "ec2:ModifyFleet", 
    "ModifyFpgaImageAttribute": "ec2:ModifyFpgaImageAttribute", 
    "ModifyHosts": "ec2:ModifyHosts", 
    "ModifyIdFormat": "ec2:ModifyIdFormat", 
    "ModifyIdentityIdFormat": "ec2:ModifyIdentityIdFormat", 
    "ModifyImageAttribute": "ec2:ModifyImageAttribute", 
    "ModifyInstanceAttribute": "ec2:ModifyInstanceAttribute", 
    "ModifyInstanceCapacityReservationAttributes": "ec2:ModifyInstanceCapacityReservationAttributes", 
    "ModifyInstanceCreditSpecification": "ec2:ModifyInstanceCreditSpecification", 
    "ModifyInstanceEventStartTime": "ec2:ModifyInstanceEventStartTime", 
    "ModifyInstancePlacement": "ec2:ModifyInstancePlacement", 
    "ModifyLaunchTemplate": "ec2:ModifyLaunchTemplate", 
    "ModifyNetworkInterfaceAttribute": "ec2:ModifyNetworkInterfaceAttribute", 
    "ModifyReservedInstances": "ec2:ModifyReservedInstances", 
    "ModifySnapshotAttribute": "ec2:ModifySnapshotAttribute", 
    "ModifySpotFleetRequest": "ec2:ModifySpotFleetRequest", 
    "ModifySubnetAttribute": "ec2:ModifySubnetAttribute", 
    "ModifyTransitGatewayVpcAttachment": "ec2:ModifyTransitGatewayVpcAttachment", 
    "ModifyVolume": "ec2:ModifyVolume", 
    "ModifyVolumeAttribute": "ec2:ModifyVolumeAttribute", 
    "ModifyVpcAttribute": "ec2:ModifyVpcAttribute", 
    "ModifyVpcEndpoint": "ec2:ModifyVpcEndpoint", 
    "ModifyVpcEndpointConnectionNotification": "ec2:ModifyVpcEndpointConnectionNotification", 
    "ModifyVpcEndpointServiceConfiguration": "ec2:ModifyVpcEndpointServiceConfiguration", 
    "ModifyVpcEndpointServicePermissions": "ec2:ModifyVpcEndpointServicePermissions", 
    "ModifyVpcPeeringConnectionOptions": "ec2:ModifyVpcPeeringConnectionOptions", 
    "ModifyVpcTenancy": "ec2:ModifyVpcTenancy", 
    "MonitorInstances": "ec2:MonitorInstances", 
    "MoveAddressToVpc": "ec2:MoveAddressToVpc", 
    "ProvisionByoipCidr": "ec2:ProvisionByoipCidr", 
    "PurchaseHostReservation": "ec2:PurchaseHostReservation", 
    "PurchaseReservedInstancesOffering": "ec2:PurchaseReservedInstancesOffering", 
    "PurchaseScheduledInstances": "ec2:PurchaseScheduledInstances", 
    "RebootInstances": "ec2:RebootInstances", 
    "RegisterImage": "ec2:RegisterImage", 
    "RejectTransitGatewayVpcAttachment": "ec2:RejectTransitGatewayVpcAttachment", 
    "RejectVpcEndpointConnections": "ec2:RejectVpcEndpointConnections", 
    "RejectVpcPeeringConnection": "ec2:RejectVpcPeeringConnection", 
    "ReleaseAddress": "ec2:ReleaseAddress", 
    "ReleaseHosts": "ec2:ReleaseHosts", 
    "ReplaceIamInstanceProfileAssociation": "ec2:ReplaceIamInstanceProfileAssociation", 
    "ReplaceNetworkAclAssociation": "ec2:ReplaceNetworkAclAssociation", 
    "ReplaceNetworkAclEntry": "ec2:ReplaceNetworkAclEntry", 
    "ReplaceRoute": "ec2:ReplaceRoute", 
    "ReplaceRouteTableAssociation": "ec2:ReplaceRouteTableAssociation", 
    "ReplaceTransitGatewayRoute": "ec2:ReplaceTransitGatewayRoute", 
    "ReportInstanceStatus": "ec2:ReportInstanceStatus", 
    "RequestSpotFleet": "ec2:RequestSpotFleet", 
    "RequestSpotInstances": "ec2:RequestSpotInstances", 
    "ResetFpgaImageAttribute": "ec2:ResetFpgaImageAttribute", 
    "ResetImageAttribute": "ec2:ResetImageAttribute", 
    "ResetInstanceAttribute": "ec2:ResetInstanceAttribute", 
    "ResetNetworkInterfaceAttribute": "ec2:ResetNetworkInterfaceAttribute", 
    "ResetSnapshotAttribute": "ec2:ResetSnapshotAttribute", 
    "RestoreAddressToClassic": "ec2:RestoreAddressToClassic", 
    "RevokeClientVpnIngress": "ec2:RevokeClientVpnIngress", 
    "RevokeSecurityGroupEgress": "ec2:RevokeSecurityGroupEgress", 
    "RevokeSecurityGroupIngress": "ec2:RevokeSecurityGroupIngress", 
    "RunInstances": "ec2:RunInstances", 
    "RunScheduledInstances": "ec2:RunScheduledInstances", 
    "SearchTransitGatewayRoutes": "ec2:SearchTransitGatewayRoutes", 
    "StartInstances": "ec2:StartInstances", 
    "StopInstances": "ec2:StopInstances", 
    "TerminateClientVpnConnections": "ec2:TerminateClientVpnConnections", 
    "TerminateInstances": "ec2:TerminateInstances", 
    "UnassignIpv6Addresses": "ec2:UnassignIpv6Addresses", 
    "UnassignPrivateIpAddresses": "ec2:UnassignPrivateIpAddresses", 
    "UnmonitorInstances": "ec2:UnmonitorInstances", 
    "UpdateSecurityGroupRuleDescriptionsEgress": "ec2:UpdateSecurityGroupRuleDescriptionsEgress", 
    "UpdateSecurityGroupRuleDescriptionsIngress": "ec2:UpdateSecurityGroupRuleDescriptionsIngress", 
    "WithdrawByoipCidr": "ec2:WithdrawByoipCidr"
  }, 
  "ecr": {
    "BatchCheckLayerAvailability": "ecr:BatchCheckLayerAvailability", 
    "BatchDeleteImage": "ecr:BatchDeleteImage", 
    "BatchGetImage": "ecr:BatchGetImage", 
    "CompleteLayerUpload": "ecr:CompleteLayerUpload", 
    "CreateRepository": "ecr:CreateRepository", 
    "DeleteLifecyclePolicy": "ecr:*", 
    "DeleteRepository": "ecr:DeleteRepository", 
    "DeleteRepositoryPolicy": "ecr:DeleteRepositoryPolicy", 
    "DescribeImages": "ecr:DescribeImages", 
    "DescribeRepositories": "ecr:DescribeRepositories", 
    "GetAuthorizationToken": "ecr:GetAuthorizationToken", 
    "GetDownloadUrlForLayer": "ecr:GetDownloadUrlForLayer", 
    "GetLifecyclePolicy": "ecr:*", 
    "GetLifecyclePolicyPreview": "ecr:*", 
    "GetRepositoryPolicy": "ecr:GetRepositoryPolicy", 
    "InitiateLayerUpload": "ecr:InitiateLayerUpload", 
    "ListImages": "ecr:ListImages", 
    "ListTagsForResource": "ecr:ListTagsForResource", 
    "PutImage": "ecr:PutImage", 
    "PutLifecyclePolicy": "ecr:*", 
    "SetRepositoryPolicy": "ecr:SetRepositoryPolicy", 
    "StartLifecyclePolicyPreview": "ecr:*", 
    "TagResource": "ecr:TagResource", 
    "UntagResource": "ecr:UntagResource", 
    "UploadLayerPart": "ecr:UploadLayerPart"
  }, 
  "ecs": {
    "CreateCluster": "ecs:CreateCluster", 
    "CreateService": "ecs:CreateService", 
    "CreateTaskSet": "ecs:CreateTaskSet", 
    "DeleteAccountSetting": "ecs:DeleteAccountSetting", 
    "DeleteAttributes": "ecs:*", 
    "DeleteCluster": "ecs:DeleteCluster", 
    "DeleteService": "ecs:DeleteService", 
    "DeleteTaskSet": "ecs:DeleteTaskSet", 
    "DeregisterContainerInstance": "ecs:DeregisterContainerInstance", 
    "DeregisterTaskDefinition": "ecs:DeregisterTaskDefinition", 
    "DescribeClusters": "ecs:DescribeClusters", 
    "DescribeContainerInstances": "ecs:DescribeContainerInstances", 
    "DescribeServices": "ecs:DescribeServices", 
    "DescribeTaskDefinition": "ecs:DescribeTaskDefinition", 
    "DescribeTaskSets": "ecs:DescribeTaskSets", 
    "DescribeTasks": "ecs:DescribeTasks", 
    "DiscoverPollEndpoint": "ecs:DiscoverPollEndpoint", 
    "ListAccountSettings": "ecs:ListAccountSettings", 
    "ListAttributes": "ecs:*", 
    "ListClusters": "ecs:ListClusters", 
    "ListContainerInstances": "ecs:ListContainerInstances", 
    "ListServices": "ecs:ListServices", 
    "ListTagsForResource": "ecs:ListTagsForResource", 
    "ListTaskDefinitionFamilies": "ecs:ListTaskDefinitionFamilies", 
    "ListTaskDefinitions": "ecs:ListTaskDefinitions", 
    "ListTasks": "ecs:ListTasks", 
    "Poll": "ecs:Poll", 
    "PutAccountSetting": "ecs:PutAccountSetting", 
    "PutAccountSettingDefault": "ecs:PutAccountSettingDefault", 
    "PutAttributes": "ecs:*", 
    "RegisterContainerInstance": "ecs:RegisterContainerInstance", 
    "RegisterTaskDefinition": "ecs:RegisterTaskDefinition", 
    "RunTask": "ecs:RunTask", 
    "StartTask": "ecs:StartTask", 
    "StopTask": "ecs:StopTask", 
    "SubmitContainerStateChange": "ecs:SubmitContainerStateChange", 
    "SubmitTaskStateChange": "ecs:SubmitTaskStateChange", 
    "TagResource": "ecs:TagResource", 
    "UntagResource": "ecs:UntagResource", 
    "UpdateContainerAgent": "ecs:UpdateContainerAgent", 
    "UpdateContainerInstancesState": "ecs:UpdateContainerInstancesState", 
    "UpdateService": "ecs:UpdateService", 
    "UpdateServicePrimaryTaskSet": "ecs:UpdateServicePrimaryTaskSet", 
    "UpdateTaskSet": "ecs:UpdateTaskSet"
  }, 
  "efs": {
    "CreateFileSystem": "elasticfilesystem:CreateFileSystem", 
    "CreateMountTarget": "elasticfilesystem:CreateMountTarget", 
    "CreateTags": "elasticfilesystem:CreateTags", 
    "DeleteFileSystem": "elasticfilesystem:DeleteFileSystem", 
    "DeleteMountTarget": "elasticfilesystem:DeleteMountTarget", 
    "DeleteTags": "elasticfilesystem:DeleteTags", 
    "DescribeFileSystems": "elasticfilesystem:DescribeFileSystems", 
    "DescribeLifecycleConfiguration": "elasticfilesystem:DescribeLifecycleConfiguration", 
    "DescribeMountTargetSecurityGroups": "elasticfilesystem:DescribeMountTargetSecurityGroups", 
    "DescribeMountTargets": "elasticfilesystem:DescribeMountTargets", 
    "DescribeTags": "elasticfilesystem:DescribeTags", 
    "ModifyMountTargetSecurityGroups": "elasticfilesystem:ModifyMountTargetSecurityGroups", 
    "PutLifecycleConfiguration": "elasticfilesystem:PutLifecycleConfiguration", 
    "UpdateFileSystem": "elasticfilesystem:*"
  }, 
  "eks": {
    "CreateCluster": "eks:*", 
    "DeleteCluster": "eks:*", 
    "DescribeCluster": "eks:*", 
    "DescribeUpdate": "eks:DescribeUpdate", 
    "ListClusters": "eks:*", 
    "ListUpdates": "eks:ListUpdates", 
    "UpdateClusterVersion": "eks:UpdateClusterVersion"
  }, 
  "elasticache": {
    "AddTagsToResource": "elasticache:AddTagsToResource", 
    "AuthorizeCacheSecurityGroupIngress": "elasticache:AuthorizeCacheSecurityGroupIngress", 
    "CopySnapshot": "elasticache:CopySnapshot", 
    "CreateCacheCluster": "elasticache:CreateCacheCluster", 
    "CreateCacheParameterGroup": "elasticache:CreateCacheParameterGroup", 
    "CreateCacheSecurityGroup": "elasticache:CreateCacheSecurityGroup", 
    "CreateCacheSubnetGroup": "elasticache:CreateCacheSubnetGroup", 
    "CreateReplicationGroup": "elasticache:CreateReplicationGroup", 
    "CreateSnapshot": "elasticache:CreateSnapshot", 
    "DecreaseReplicaCount": "elasticache:DecreaseReplicaCount", 
    "DeleteCacheCluster": "elasticache:DeleteCacheCluster", 
    "DeleteCacheParameterGroup": "elasticache:DeleteCacheParameterGroup", 
    "DeleteCacheSecurityGroup": "elasticache:DeleteCacheSecurityGroup", 
    "DeleteCacheSubnetGroup": "elasticache:DeleteCacheSubnetGroup", 
    "DeleteReplicationGroup": "elasticache:DeleteReplicationGroup", 
    "DeleteSnapshot": "elasticache:DeleteSnapshot", 
    "DescribeCacheClusters": "elasticache:DescribeCacheClusters", 
    "DescribeCacheEngineVersions": "elasticache:DescribeCacheEngineVersions", 
    "DescribeCacheParameterGroups": "elasticache:DescribeCacheParameterGroups", 
    "DescribeCacheParameters": "elasticache:DescribeCacheParameters", 
    "DescribeCacheSecurityGroups": "elasticache:DescribeCacheSecurityGroups", 
    "DescribeCacheSubnetGroups": "elasticache:DescribeCacheSubnetGroups", 
    "DescribeEngineDefaultParameters": "elasticache:DescribeEngineDefaultParameters", 
    "DescribeEvents": "elasticache:DescribeEvents", 
    "DescribeReplicationGroups": "elasticache:DescribeReplicationGroups", 
    "DescribeReservedCacheNodes": "elasticache:DescribeReservedCacheNodes", 
    "DescribeReservedCacheNodesOfferings": "elasticache:DescribeReservedCacheNodesOfferings", 
    "DescribeSnapshots": "elasticache:DescribeSnapshots", 
    "IncreaseReplicaCount": "elasticache:IncreaseReplicaCount", 
    "ListAllowedNodeTypeModifications": "elasticache:ListAllowedNodeTypeModifications", 
    "ListTagsForResource": "elasticache:ListTagsForResource", 
    "ModifyCacheCluster": "elasticache:ModifyCacheCluster", 
    "ModifyCacheParameterGroup": "elasticache:ModifyCacheParameterGroup", 
    "ModifyCacheSubnetGroup": "elasticache:ModifyCacheSubnetGroup", 
    "ModifyReplicationGroup": "elasticache:ModifyReplicationGroup", 
    "ModifyReplicationGroupShardConfiguration": "elasticache:*", 
    "PurchaseReservedCacheNodesOffering": "elasticache:PurchaseReservedCacheNodesOffering", 
    "RebootCacheCluster": "elasticache:RebootCacheCluster", 
    "RemoveTagsFromResource": "elasticache:RemoveTagsFromResource", 
    "ResetCacheParameterGroup": "elasticache:ResetCacheParameterGroup", 
    "RevokeCacheSecurityGroupIngress": "elasticache:RevokeCacheSecurityGroupIngress", 
    "TestFailover": "elasticache:TestFailover"
  }, 
  "elasticbeanstalk": {
    "AbortEnvironmentUpdate": "elasticbeanstalk:AbortEnvironmentUpdate", 
    "AddTags": "elasticbeanstalk:AddTags", 
    "ApplyEnvironmentManagedAction": "elasticbeanstalk:ApplyEnvironmentManagedAction", 
    "CheckDNSAvailability": "elasticbeanstalk:CheckDNSAvailability", 
    "ComposeEnvironments": "elasticbeanstalk:ComposeEnvironments", 
    "CreateApplication": "elasticbeanstalk:CreateApplication", 
    "CreateApplicationVersion": "elasticbeanstalk:CreateApplicationVersion", 
    "CreateConfigurationTemplate": "elasticbeanstalk:CreateConfigurationTemplate", 
    "CreateEnvironment": "elasticbeanstalk:CreateEnvironment", 
    "CreatePlatformVersion": "elasticbeanstalk:CreatePlatformVersion", 
    "CreateStorageLocation": "elasticbeanstalk:CreateStorageLocation", 
    "DeleteApplication": "elasticbeanstalk:DeleteApplication", 
    "DeleteApplicationVersion": "elasticbeanstalk:DeleteApplicationVersion", 
    "DeleteConfigurationTemplate": "elasticbeanstalk:DeleteConfigurationTemplate", 
    "DeleteEnvironmentConfiguration": "elasticbeanstalk:DeleteEnvironmentConfiguration", 
    "DeletePlatformVersion": "elasticbeanstalk:DeletePlatformVersion", 
    "DescribeAccountAttributes": "elasticbeanstalk:*", 
    "DescribeApplicationVersions": "elasticbeanstalk:DescribeApplicationVersions", 
    "DescribeApplications": "elasticbeanstalk:DescribeApplications", 
    "DescribeConfigurationOptions": "elasticbeanstalk:DescribeConfigurationOptions", 
    "DescribeConfigurationSettings": "elasticbeanstalk:DescribeConfigurationSettings", 
    "DescribeEnvironmentHealth": "elasticbeanstalk:DescribeEnvironmentHealth", 
    "DescribeEnvironmentManagedActionHistory": "elasticbeanstalk:DescribeEnvironmentManagedActionHistory", 
    "DescribeEnvironmentManagedActions": "elasticbeanstalk:DescribeEnvironmentManagedActions", 
    "DescribeEnvironmentResources": "elasticbeanstalk:DescribeEnvironmentResources", 
    "DescribeEnvironments": "elasticbeanstalk:DescribeEnvironments", 
    "DescribeEvents": "elasticbeanstalk:DescribeEvents", 
    "DescribeInstancesHealth": "elasticbeanstalk:DescribeInstancesHealth", 
    "DescribePlatformVersion": "elasticbeanstalk:DescribePlatformVersion", 
    "ListAvailableSolutionStacks": "elasticbeanstalk:ListAvailableSolutionStacks", 
    "ListPlatformVersions": "elasticbeanstalk:ListPlatformVersions", 
    "ListTagsForResource": "elasticbeanstalk:*", 
    "RebuildEnvironment": "elasticbeanstalk:RebuildEnvironment", 
    "RemoveTags": "elasticbeanstalk:RemoveTags", 
    "RequestEnvironmentInfo": "elasticbeanstalk:RequestEnvironmentInfo", 
    "RestartAppServer": "elasticbeanstalk:RestartAppServer", 
    "RetrieveEnvironmentInfo": "elasticbeanstalk:RetrieveEnvironmentInfo", 
    "SwapEnvironmentCNAMEs": "elasticbeanstalk:SwapEnvironmentCNAMEs", 
    "TerminateEnvironment": "elasticbeanstalk:TerminateEnvironment", 
    "UpdateApplication": "elasticbeanstalk:UpdateApplication", 
    "UpdateApplicationResourceLifecycle": "elasticbeanstalk:UpdateApplicationResourceLifecycle", 
    "UpdateApplicationVersion": "elasticbeanstalk:UpdateApplicationVersion", 
    "UpdateConfigurationTemplate": "elasticbeanstalk:UpdateConfigurationTemplate", 
    "UpdateEnvironment": "elasticbeanstalk:UpdateEnvironment", 
    "UpdateTagsForResource": "elasticbeanstalk:*", 
    "ValidateConfigurationSettings": "elasticbeanstalk:ValidateConfigurationSettings"
  }, 
  "elastictranscoder": {
    "CancelJob": "elastictranscoder:CancelJob", 
    "CreateJob": "elastictranscoder:CreateJob", 
    "CreatePipeline": "elastictranscoder:CreatePipeline", 
    "CreatePreset": "elastictranscoder:CreatePreset", 
    "DeletePipeline": "elastictranscoder:DeletePipeline", 
    "DeletePreset": "elastictranscoder:DeletePreset", 
    "ListJobsByPipeline": "elastictranscoder:ListJobsByPipeline", 
    "ListJobsByStatus": "elastictranscoder:ListJobsByStatus", 
    "ListPipelines": "elastictranscoder:ListPipelines", 
    "ListPresets": "elastictranscoder:ListPresets", 
    "ReadJob": "elastictranscoder:ReadJob", 
    "ReadPipeline": "elastictranscoder:ReadPipeline", 
    "ReadPreset": "elastictranscoder:ReadPreset", 
    "TestRole": "elastictranscoder:TestRole", 
    "UpdatePipeline": "elastictranscoder:UpdatePipeline", 
    "UpdatePipelineNotifications": "elastictranscoder:UpdatePipelineNotifications", 
    "UpdatePipelineStatus": "elastictranscoder:UpdatePipelineStatus"
  }, 
  "elb": {
    "AddTags": "elasticloadbalancing:AddTags", 
    "ApplySecurityGroupsToLoadBalancer": "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer", 
    "AttachLoadBalancerToSubnets": "elasticloadbalancing:AttachLoadBalancerToSubnets", 
    "ConfigureHealthCheck": "elasticloadbalancing:ConfigureHealthCheck", 
    "CreateAppCookieStickinessPolicy": "elasticloadbalancing:CreateAppCookieStickinessPolicy", 
    "CreateLBCookieStickinessPolicy": "elasticloadbalancing:CreateLBCookieStickinessPolicy", 
    "CreateLoadBalancer": "elasticloadbalancing:CreateLoadBalancer", 
    "CreateLoadBalancerListeners": "elasticloadbalancing:CreateLoadBalancerListeners", 
    "CreateLoadBalancerPolicy": "elasticloadbalancing:CreateLoadBalancerPolicy", 
    "DeleteLoadBalancer": "elasticloadbalancing:DeleteLoadBalancer", 
    "DeleteLoadBalancerListeners": "elasticloadbalancing:DeleteLoadBalancerListeners", 
    "DeleteLoadBalancerPolicy": "elasticloadbalancing:DeleteLoadBalancerPolicy", 
    "DeregisterInstancesFromLoadBalancer": "elasticloadbalancing:DeregisterInstancesFromLoadBalancer", 
    "DescribeInstanceHealth": "elasticloadbalancing:DescribeInstanceHealth", 
    "DescribeLoadBalancerAttributes": "elasticloadbalancing:DescribeLoadBalancerAttributes", 
    "DescribeLoadBalancerPolicies": "elasticloadbalancing:DescribeLoadBalancerPolicies", 
    "DescribeLoadBalancerPolicyTypes": "elasticloadbalancing:DescribeLoadBalancerPolicyTypes", 
    "DescribeLoadBalancers": "elasticloadbalancing:DescribeLoadBalancers", 
    "DescribeTags": "elasticloadbalancing:DescribeTags", 
    "DetachLoadBalancerFromSubnets": "elasticloadbalancing:DetachLoadBalancerFromSubnets", 
    "DisableAvailabilityZonesForLoadBalancer": "elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer", 
    "EnableAvailabilityZonesForLoadBalancer": "elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer", 
    "ModifyLoadBalancerAttributes": "elasticloadbalancing:ModifyLoadBalancerAttributes", 
    "RegisterInstancesWithLoadBalancer": "elasticloadbalancing:RegisterInstancesWithLoadBalancer", 
    "RemoveTags": "elasticloadbalancing:RemoveTags", 
    "SetLoadBalancerListenerSSLCertificate": "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate", 
    "SetLoadBalancerPoliciesForBackendServer": "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer", 
    "SetLoadBalancerPoliciesOfListener": "elasticloadbalancing:SetLoadBalancerPoliciesOfListener"
  }, 
  "elbv2": {
    "AddListenerCertificates": "elasticloadbalancing:*", 
    "AddTags": "elasticloadbalancing:AddTags", 
    "CreateListener": "elasticloadbalancing:CreateListener", 
    "CreateLoadBalancer": "elasticloadbalancing:CreateLoadBalancer", 
    "CreateRule": "elasticloadbalancing:CreateRule", 
    "CreateTargetGroup": "elasticloadbalancing:CreateTargetGroup", 
    "DeleteListener": "elasticloadbalancing:DeleteListener", 
    "DeleteLoadBalancer": "elasticloadbalancing:DeleteLoadBalancer", 
    "DeleteRule": "elasticloadbalancing:DeleteRule", 
    "DeleteTargetGroup": "elasticloadbalancing:DeleteTargetGroup", 
    "DeregisterTargets": "elasticloadbalancing:DeregisterTargets", 
    "DescribeAccountLimits": "elasticloadbalancing:*", 
    "DescribeListenerCertificates": "elasticloadbalancing:*", 
    "DescribeListeners": "elasticloadbalancing:DescribeListeners", 
    "DescribeLoadBalancerAttributes": "elasticloadbalancing:DescribeLoadBalancerAttributes", 
    "DescribeLoadBalancers": "elasticloadbalancing:DescribeLoadBalancers", 
    "DescribeRules": "elasticloadbalancing:DescribeRules", 
    "DescribeSSLPolicies": "elasticloadbalancing:DescribeSSLPolicies", 
    "DescribeTags": "elasticloadbalancing:DescribeTags", 
    "DescribeTargetGroupAttributes": "elasticloadbalancing:DescribeTargetGroupAttributes", 
    "DescribeTargetGroups": "elasticloadbalancing:DescribeTargetGroups", 
    "DescribeTargetHealth": "elasticloadbalancing:DescribeTargetHealth", 
    "ModifyListener": "elasticloadbalancing:ModifyListener", 
    "ModifyLoadBalancerAttributes": "elasticloadbalancing:ModifyLoadBalancerAttributes", 
    "ModifyRule": "elasticloadbalancing:ModifyRule", 
    "ModifyTargetGroup": "elasticloadbalancing:ModifyTargetGroup", 
    "ModifyTargetGroupAttributes": "elasticloadbalancing:ModifyTargetGroupAttributes", 
    "RegisterTargets": "elasticloadbalancing:RegisterTargets", 
    "RemoveListenerCertificates": "elasticloadbalancing:*", 
    "RemoveTags": "elasticloadbalancing:RemoveTags", 
    "SetIpAddressType": "elasticloadbalancing:SetIpAddressType", 
    "SetRulePriorities": "elasticloadbalancing:SetRulePriorities", 
    "SetSecurityGroups": "elasticloadbalancing:SetSecurityGroups", 
    "SetSubnets": "elasticloadbalancing:SetSubnets", 
    "SetWebAcl": "elasticloadbalancing:SetWebAcl"
  }, 
  "emr": {
    "AddInstanceFleet": "elasticmapreduce:*", 
    "AddInstanceGroups": "elasticmapreduce:AddInstanceGroups", 
    "AddJobFlowSteps": "elasticmapreduce:AddJobFlowSteps", 
    "AddTags": "elasticmapreduce:AddTags", 
    "CancelSteps": "elasticmapreduce:CancelSteps", 
    "CreateEditor": "elasticmapreduce:CreateEditor", 
    "CreateSecurityConfiguration": "elasticmapreduce:CreateSecurityConfiguration", 
    "DeleteEditor": "elasticmapreduce:DeleteEditor", 
    "DeleteSecurityConfiguration": "elasticmapreduce:DeleteSecurityConfiguration", 
    "DescribeCluster": "elasticmapreduce:DescribeCluster", 
    "DescribeEditor": "elasticmapreduce:DescribeEditor", 
    "DescribeJobFlows": "elasticmapreduce:DescribeJobFlows", 
    "DescribeSecurityConfiguration": "elasticmapreduce:DescribeSecurityConfiguration", 
    "DescribeStep": "elasticmapreduce:DescribeStep", 
    "ListBootstrapActions": "elasticmapreduce:ListBootstrapActions", 
    "ListClusters": "elasticmapreduce:ListClusters", 
    "ListEditors": "elasticmapreduce:ListEditors", 
    "ListInstanceFleets": "elasticmapreduce:*", 
    "ListInstanceGroups": "elasticmapreduce:ListInstanceGroups", 
    "ListInstances": "elasticmapreduce:ListInstances", 
    "ListSecurityConfigurations": "elasticmapreduce:ListSecurityConfigurations", 
    "ListSteps": "elasticmapreduce:ListSteps", 
    "ModifyInstanceFleet": "elasticmapreduce:ModifyInstanceFleet", 
    "ModifyInstanceGroups": "elasticmapreduce:ModifyInstanceGroups", 
    "OpenEditorInConsole": "elasticmapreduce:OpenEditorInConsole", 
    "PutAutoScalingPolicy": "elasticmapreduce:PutAutoScalingPolicy", 
    "RemoveAutoScalingPolicy": "elasticmapreduce:RemoveAutoScalingPolicy", 
    "RemoveTags": "elasticmapreduce:RemoveTags", 
    "RunJobFlow": "elasticmapreduce:RunJobFlow", 
    "SetTerminationProtection": "elasticmapreduce:SetTerminationProtection", 
    "SetVisibleToAllUsers": "elasticmapreduce:SetVisibleToAllUsers", 
    "StartEditor": "elasticmapreduce:StartEditor", 
    "StopEditor": "elasticmapreduce:StopEditor", 
    "TerminateJobFlows": "elasticmapreduce:TerminateJobFlows", 
    "ViewEventsFromAllClustersInConsole": "elasticmapreduce:ViewEventsFromAllClustersInConsole"
  }, 
  "es": {
    "AddTags": "es:AddTags", 
    "CreateElasticsearchDomain": "es:CreateElasticsearchDomain", 
    "DeleteElasticsearchDomain": "es:DeleteElasticsearchDomain", 
    "DeleteElasticsearchServiceRole": "es:DeleteElasticsearchServiceRole", 
    "DescribeElasticsearchDomain": "es:DescribeElasticsearchDomain", 
    "DescribeElasticsearchDomainConfig": "es:DescribeElasticsearchDomainConfig", 
    "DescribeElasticsearchDomains": "es:DescribeElasticsearchDomains", 
    "DescribeElasticsearchInstanceTypeLimits": "es:DescribeElasticsearchInstanceTypeLimits", 
    "DescribeReservedElasticsearchInstanceOfferings": "es:*", 
    "DescribeReservedElasticsearchInstances": "es:*", 
    "ESHttpDelete": "es:ESHttpDelete", 
    "ESHttpGet": "es:ESHttpGet", 
    "ESHttpHead": "es:ESHttpHead", 
    "ESHttpPost": "es:ESHttpPost", 
    "ESHttpPut": "es:ESHttpPut", 
    "GetCompatibleElasticsearchVersions": [
      "es:*", 
      "es:GetCompatibleElasticsearchVersions"
    ], 
    "GetUpgradeHistory": [
      "es:*", 
      "es:GetUpgradeHistory"
    ], 
    "GetUpgradeStatus": [
      "es:*", 
      "es:GetUpgradeStatus"
    ], 
    "ListDomainNames": "es:ListDomainNames", 
    "ListElasticsearchInstanceTypes": "es:ListElasticsearchInstanceTypes", 
    "ListElasticsearchVersions": "es:ListElasticsearchVersions", 
    "ListTags": "es:ListTags", 
    "PurchaseReservedElasticsearchInstance": "es:*", 
    "RemoveTags": "es:RemoveTags", 
    "UpdateElasticsearchDomainConfig": "es:UpdateElasticsearchDomainConfig", 
    "UpgradeElasticsearchDomain": "es:*"
  }, 
  "events": {
    "DeleteRule": "events:DeleteRule", 
    "DescribeEventBus": "events:*", 
    "DescribeRule": "events:DescribeRule", 
    "DisableRule": "events:DisableRule", 
    "EnableRule": "events:EnableRule", 
    "ListRuleNamesByTarget": "events:ListRuleNamesByTarget", 
    "ListRules": "events:ListRules", 
    "ListTagsForResource": "events:ListTagsForResource", 
    "ListTargetsByRule": "events:ListTargetsByRule", 
    "PutEvents": "events:PutEvents", 
    "PutPermission": "events:*", 
    "PutRule": "events:PutRule", 
    "PutTargets": "events:PutTargets", 
    "RemovePermission": "events:*", 
    "RemoveTargets": "events:RemoveTargets", 
    "TagResource": "events:TagResource", 
    "TestEventPattern": "events:TestEventPattern", 
    "UntagResource": "events:UntagResource"
  }, 
  "firehose": {
    "CreateDeliveryStream": "firehose:CreateDeliveryStream", 
    "DeleteDeliveryStream": "firehose:DeleteDeliveryStream", 
    "DescribeDeliveryStream": "firehose:DescribeDeliveryStream", 
    "ListDeliveryStreams": "firehose:ListDeliveryStreams", 
    "ListTagsForDeliveryStream": "firehose:ListTagsForDeliveryStream", 
    "PutRecord": "firehose:PutRecord", 
    "PutRecordBatch": "firehose:PutRecordBatch", 
    "StartDeliveryStreamEncryption": "firehose:StartDeliveryStreamEncryption", 
    "StopDeliveryStreamEncryption": "firehose:StopDeliveryStreamEncryption", 
    "TagDeliveryStream": "firehose:TagDeliveryStream", 
    "UntagDeliveryStream": "firehose:UntagDeliveryStream", 
    "UpdateDestination": "firehose:UpdateDestination"
  }, 
  "fms": {
    "AssociateAdminAccount": "fms:*", 
    "DeleteNotificationChannel": "fms:*", 
    "DeletePolicy": "fms:*", 
    "DisassociateAdminAccount": "fms:*", 
    "GetAdminAccount": "fms:*", 
    "GetComplianceDetail": "fms:*", 
    "GetNotificationChannel": "fms:*", 
    "GetPolicy": "fms:*", 
    "GetProtectionStatus": "fms:*", 
    "ListComplianceStatus": "fms:*", 
    "ListMemberAccounts": "fms:*", 
    "ListPolicies": "fms:*", 
    "PutNotificationChannel": "fms:*", 
    "PutPolicy": "fms:*"
  }, 
  "gamelift": {
    "AcceptMatch": "gamelift:*", 
    "CreateAlias": "gamelift:CreateAlias", 
    "CreateBuild": "gamelift:CreateBuild", 
    "CreateFleet": "gamelift:CreateFleet", 
    "CreateGameSession": "gamelift:CreateGameSession", 
    "CreateGameSessionQueue": "gamelift:*", 
    "CreateMatchmakingConfiguration": "gamelift:*", 
    "CreateMatchmakingRuleSet": "gamelift:*", 
    "CreatePlayerSession": "gamelift:CreatePlayerSession", 
    "CreatePlayerSessions": "gamelift:CreatePlayerSessions", 
    "CreateVpcPeeringAuthorization": "gamelift:*", 
    "CreateVpcPeeringConnection": "gamelift:*", 
    "DeleteAlias": "gamelift:DeleteAlias", 
    "DeleteBuild": "gamelift:DeleteBuild", 
    "DeleteFleet": "gamelift:DeleteFleet", 
    "DeleteGameSessionQueue": "gamelift:*", 
    "DeleteMatchmakingConfiguration": "gamelift:*", 
    "DeleteScalingPolicy": "gamelift:DeleteScalingPolicy", 
    "DeleteVpcPeeringAuthorization": "gamelift:*", 
    "DeleteVpcPeeringConnection": "gamelift:*", 
    "DescribeAlias": "gamelift:DescribeAlias", 
    "DescribeBuild": "gamelift:DescribeBuild", 
    "DescribeEC2InstanceLimits": "gamelift:DescribeEC2InstanceLimits", 
    "DescribeFleetAttributes": "gamelift:DescribeFleetAttributes", 
    "DescribeFleetCapacity": "gamelift:DescribeFleetCapacity", 
    "DescribeFleetEvents": "gamelift:DescribeFleetEvents", 
    "DescribeFleetPortSettings": "gamelift:DescribeFleetPortSettings", 
    "DescribeFleetUtilization": "gamelift:DescribeFleetUtilization", 
    "DescribeGameSessionDetails": "gamelift:DescribeGameSessionDetails", 
    "DescribeGameSessionPlacement": "gamelift:*", 
    "DescribeGameSessionQueues": "gamelift:*", 
    "DescribeGameSessions": "gamelift:DescribeGameSessions", 
    "DescribeInstances": "gamelift:DescribeInstances", 
    "DescribeMatchmaking": "gamelift:*", 
    "DescribeMatchmakingConfigurations": "gamelift:*", 
    "DescribeMatchmakingRuleSets": "gamelift:*", 
    "DescribePlayerSessions": "gamelift:DescribePlayerSessions", 
    "DescribeRuntimeConfiguration": "gamelift:DescribeRuntimeConfiguration", 
    "DescribeScalingPolicies": "gamelift:DescribeScalingPolicies", 
    "DescribeVpcPeeringAuthorizations": "gamelift:*", 
    "DescribeVpcPeeringConnections": "gamelift:*", 
    "GetGameSessionLogUrl": "gamelift:GetGameSessionLogUrl", 
    "GetInstanceAccess": "gamelift:GetInstanceAccess", 
    "ListAliases": "gamelift:ListAliases", 
    "ListBuilds": "gamelift:ListBuilds", 
    "ListFleets": "gamelift:ListFleets", 
    "PutScalingPolicy": "gamelift:PutScalingPolicy", 
    "RequestUploadCredentials": "gamelift:RequestUploadCredentials", 
    "ResolveAlias": "gamelift:ResolveAlias", 
    "SearchGameSessions": "gamelift:SearchGameSessions", 
    "StartFleetActions": "gamelift:*", 
    "StartGameSessionPlacement": "gamelift:*", 
    "StartMatchBackfill": "gamelift:*", 
    "StartMatchmaking": "gamelift:*", 
    "StopFleetActions": "gamelift:*", 
    "StopGameSessionPlacement": "gamelift:*", 
    "StopMatchmaking": "gamelift:*", 
    "UpdateAlias": "gamelift:UpdateAlias", 
    "UpdateBuild": "gamelift:UpdateBuild", 
    "UpdateFleetAttributes": "gamelift:UpdateFleetAttributes", 
    "UpdateFleetCapacity": "gamelift:UpdateFleetCapacity", 
    "UpdateFleetPortSettings": "gamelift:UpdateFleetPortSettings", 
    "UpdateGameSession": "gamelift:UpdateGameSession", 
    "UpdateGameSessionQueue": "gamelift:*", 
    "UpdateMatchmakingConfiguration": "gamelift:*", 
    "UpdateRuntimeConfiguration": "gamelift:UpdateRuntimeConfiguration", 
    "ValidateMatchmakingRuleSet": "gamelift:*"
  }, 
  "glacier": {
    "AbortMultipartUpload": "glacier:AbortMultipartUpload", 
    "AbortVaultLock": "glacier:AbortVaultLock", 
    "AddTagsToVault": "glacier:AddTagsToVault", 
    "CompleteMultipartUpload": "glacier:CompleteMultipartUpload", 
    "CompleteVaultLock": "glacier:CompleteVaultLock", 
    "CreateVault": "glacier:CreateVault", 
    "DeleteArchive": "glacier:DeleteArchive", 
    "DeleteVault": "glacier:DeleteVault", 
    "DeleteVaultAccessPolicy": "glacier:DeleteVaultAccessPolicy", 
    "DeleteVaultNotifications": "glacier:DeleteVaultNotifications", 
    "DescribeJob": "glacier:DescribeJob", 
    "DescribeVault": "glacier:DescribeVault", 
    "GetDataRetrievalPolicy": "glacier:GetDataRetrievalPolicy", 
    "GetJobOutput": "glacier:GetJobOutput", 
    "GetVaultAccessPolicy": "glacier:GetVaultAccessPolicy", 
    "GetVaultLock": "glacier:GetVaultLock", 
    "GetVaultNotifications": "glacier:GetVaultNotifications", 
    "InitiateJob": "glacier:InitiateJob", 
    "InitiateMultipartUpload": "glacier:InitiateMultipartUpload", 
    "InitiateVaultLock": "glacier:InitiateVaultLock", 
    "ListJobs": "glacier:ListJobs", 
    "ListMultipartUploads": "glacier:ListMultipartUploads", 
    "ListParts": "glacier:ListParts", 
    "ListProvisionedCapacity": "glacier:ListProvisionedCapacity", 
    "ListTagsForVault": "glacier:ListTagsForVault", 
    "ListVaults": "glacier:ListVaults", 
    "PurchaseProvisionedCapacity": "glacier:PurchaseProvisionedCapacity", 
    "RemoveTagsFromVault": "glacier:RemoveTagsFromVault", 
    "SetDataRetrievalPolicy": "glacier:SetDataRetrievalPolicy", 
    "SetVaultAccessPolicy": "glacier:SetVaultAccessPolicy", 
    "SetVaultNotifications": "glacier:SetVaultNotifications", 
    "UploadArchive": "glacier:UploadArchive", 
    "UploadMultipartPart": "glacier:UploadMultipartPart"
  }, 
  "glue": {
    "BatchCreatePartition": "glue:BatchCreatePartition", 
    "BatchDeleteConnection": "glue:BatchDeleteConnection", 
    "BatchDeletePartition": "glue:BatchDeletePartition", 
    "BatchDeleteTable": "glue:BatchDeleteTable", 
    "BatchDeleteTableVersion": "glue:BatchDeleteTableVersion", 
    "BatchGetPartition": "glue:BatchGetPartition", 
    "BatchStopJobRun": "glue:BatchStopJobRun", 
    "CreateClassifier": "glue:CreateClassifier", 
    "CreateConnection": "glue:CreateConnection", 
    "CreateCrawler": "glue:CreateCrawler", 
    "CreateDatabase": "glue:CreateDatabase", 
    "CreateDevEndpoint": "glue:CreateDevEndpoint", 
    "CreateJob": "glue:CreateJob", 
    "CreatePartition": "glue:CreatePartition", 
    "CreateScript": "glue:CreateScript", 
    "CreateSecurityConfiguration": "glue:CreateSecurityConfiguration", 
    "CreateTable": "glue:CreateTable", 
    "CreateTrigger": "glue:CreateTrigger", 
    "CreateUserDefinedFunction": "glue:CreateUserDefinedFunction", 
    "DeleteClassifier": "glue:DeleteClassifier", 
    "DeleteConnection": "glue:DeleteConnection", 
    "DeleteCrawler": "glue:DeleteCrawler", 
    "DeleteDatabase": "glue:DeleteDatabase", 
    "DeleteDevEndpoint": "glue:DeleteDevEndpoint", 
    "DeleteJob": "glue:DeleteJob", 
    "DeletePartition": "glue:DeletePartition", 
    "DeleteResourcePolicy": "glue:DeleteResourcePolicy", 
    "DeleteSecurityConfiguration": "glue:DeleteSecurityConfiguration", 
    "DeleteTable": "glue:DeleteTable", 
    "DeleteTableVersion": "glue:DeleteTableVersion", 
    "DeleteTrigger": "glue:DeleteTrigger", 
    "DeleteUserDefinedFunction": "glue:DeleteUserDefinedFunction", 
    "GetCatalogImportStatus": "glue:GetCatalogImportStatus", 
    "GetClassifier": "glue:GetClassifier", 
    "GetClassifiers": "glue:GetClassifiers", 
    "GetConnection": "glue:GetConnection", 
    "GetConnections": "glue:GetConnections", 
    "GetCrawler": "glue:GetCrawler", 
    "GetCrawlerMetrics": "glue:GetCrawlerMetrics", 
    "GetCrawlers": "glue:GetCrawlers", 
    "GetDataCatalogEncryptionSettings": "glue:GetDataCatalogEncryptionSettings", 
    "GetDatabase": "glue:GetDatabase", 
    "GetDatabases": "glue:GetDatabases", 
    "GetDataflowGraph": "glue:GetDataflowGraph", 
    "GetDevEndpoint": "glue:GetDevEndpoint", 
    "GetDevEndpoints": "glue:GetDevEndpoints", 
    "GetJob": "glue:GetJob", 
    "GetJobRun": "glue:GetJobRun", 
    "GetJobRuns": "glue:GetJobRuns", 
    "GetJobs": "glue:GetJobs", 
    "GetMapping": "glue:GetMapping", 
    "GetPartition": "glue:GetPartition", 
    "GetPartitions": "glue:GetPartitions", 
    "GetPlan": "glue:GetPlan", 
    "GetResourcePolicy": "glue:GetResourcePolicy", 
    "GetSecurityConfiguration": "glue:GetSecurityConfiguration", 
    "GetSecurityConfigurations": "glue:GetSecurityConfigurations", 
    "GetTable": "glue:GetTable", 
    "GetTableVersion": "glue:GetTableVersion", 
    "GetTableVersions": "glue:GetTableVersions", 
    "GetTables": "glue:GetTables", 
    "GetTrigger": "glue:GetTrigger", 
    "GetTriggers": "glue:GetTriggers", 
    "GetUserDefinedFunction": "glue:GetUserDefinedFunction", 
    "GetUserDefinedFunctions": "glue:GetUserDefinedFunctions", 
    "ImportCatalogToGlue": "glue:ImportCatalogToGlue", 
    "PutDataCatalogEncryptionSettings": "glue:PutDataCatalogEncryptionSettings", 
    "PutResourcePolicy": "glue:PutResourcePolicy", 
    "ResetJobBookmark": "glue:ResetJobBookmark", 
    "StartCrawler": "glue:StartCrawler", 
    "StartCrawlerSchedule": "glue:StartCrawlerSchedule", 
    "StartJobRun": "glue:StartJobRun", 
    "StartTrigger": "glue:StartTrigger", 
    "StopCrawler": "glue:StopCrawler", 
    "StopCrawlerSchedule": "glue:StopCrawlerSchedule", 
    "StopTrigger": "glue:StopTrigger", 
    "UpdateClassifier": "glue:UpdateClassifier", 
    "UpdateConnection": "glue:UpdateConnection", 
    "UpdateCrawler": "glue:UpdateCrawler", 
    "UpdateCrawlerSchedule": "glue:UpdateCrawlerSchedule", 
    "UpdateDatabase": "glue:UpdateDatabase", 
    "UpdateDevEndpoint": "glue:UpdateDevEndpoint", 
    "UpdateJob": "glue:UpdateJob", 
    "UpdatePartition": "glue:UpdatePartition", 
    "UpdateTable": "glue:UpdateTable", 
    "UpdateTrigger": "glue:UpdateTrigger", 
    "UpdateUserDefinedFunction": "glue:UpdateUserDefinedFunction"
  }, 
  "greengrass": {
    "AssociateRoleToGroup": "greengrass:AssociateRoleToGroup", 
    "AssociateServiceRoleToAccount": "greengrass:AssociateServiceRoleToAccount", 
    "CreateConnectorDefinition": "greengrass:CreateConnectorDefinition", 
    "CreateConnectorDefinitionVersion": "greengrass:CreateConnectorDefinitionVersion", 
    "CreateCoreDefinition": "greengrass:CreateCoreDefinition", 
    "CreateCoreDefinitionVersion": "greengrass:CreateCoreDefinitionVersion", 
    "CreateDeployment": "greengrass:CreateDeployment", 
    "CreateDeviceDefinition": "greengrass:CreateDeviceDefinition", 
    "CreateDeviceDefinitionVersion": "greengrass:CreateDeviceDefinitionVersion", 
    "CreateFunctionDefinition": "greengrass:CreateFunctionDefinition", 
    "CreateFunctionDefinitionVersion": "greengrass:CreateFunctionDefinitionVersion", 
    "CreateGroup": "greengrass:CreateGroup", 
    "CreateGroupCertificateAuthority": "greengrass:CreateGroupCertificateAuthority", 
    "CreateGroupVersion": "greengrass:CreateGroupVersion", 
    "CreateLoggerDefinition": "greengrass:CreateLoggerDefinition", 
    "CreateLoggerDefinitionVersion": "greengrass:CreateLoggerDefinitionVersion", 
    "CreateResourceDefinition": "greengrass:CreateResourceDefinition", 
    "CreateResourceDefinitionVersion": "greengrass:CreateResourceDefinitionVersion", 
    "CreateSoftwareUpdateJob": "greengrass:CreateSoftwareUpdateJob", 
    "CreateSubscriptionDefinition": "greengrass:CreateSubscriptionDefinition", 
    "CreateSubscriptionDefinitionVersion": "greengrass:CreateSubscriptionDefinitionVersion", 
    "DeleteConnectorDefinition": "greengrass:DeleteConnectorDefinition", 
    "DeleteCoreDefinition": "greengrass:DeleteCoreDefinition", 
    "DeleteDeviceDefinition": "greengrass:DeleteDeviceDefinition", 
    "DeleteFunctionDefinition": "greengrass:DeleteFunctionDefinition", 
    "DeleteGroup": "greengrass:DeleteGroup", 
    "DeleteLoggerDefinition": "greengrass:DeleteLoggerDefinition", 
    "DeleteResourceDefinition": "greengrass:DeleteResourceDefinition", 
    "DeleteSubscriptionDefinition": "greengrass:DeleteSubscriptionDefinition", 
    "DisassociateRoleFromGroup": "greengrass:DisassociateRoleFromGroup", 
    "DisassociateServiceRoleFromAccount": "greengrass:DisassociateServiceRoleFromAccount", 
    "GetAssociatedRole": "greengrass:GetAssociatedRole", 
    "GetBulkDeploymentStatus": "greengrass:GetBulkDeploymentStatus", 
    "GetConnectivityInfo": "greengrass:GetConnectivityInfo", 
    "GetConnectorDefinition": "greengrass:GetConnectorDefinition", 
    "GetConnectorDefinitionVersion": "greengrass:GetConnectorDefinitionVersion", 
    "GetCoreDefinition": "greengrass:GetCoreDefinition", 
    "GetCoreDefinitionVersion": "greengrass:GetCoreDefinitionVersion", 
    "GetDeploymentStatus": "greengrass:GetDeploymentStatus", 
    "GetDeviceDefinition": "greengrass:GetDeviceDefinition", 
    "GetDeviceDefinitionVersion": "greengrass:GetDeviceDefinitionVersion", 
    "GetFunctionDefinition": "greengrass:GetFunctionDefinition", 
    "GetFunctionDefinitionVersion": "greengrass:GetFunctionDefinitionVersion", 
    "GetGroup": "greengrass:GetGroup", 
    "GetGroupCertificateAuthority": "greengrass:GetGroupCertificateAuthority", 
    "GetGroupCertificateConfiguration": "greengrass:GetGroupCertificateConfiguration", 
    "GetGroupVersion": "greengrass:GetGroupVersion", 
    "GetLoggerDefinition": "greengrass:GetLoggerDefinition", 
    "GetLoggerDefinitionVersion": "greengrass:GetLoggerDefinitionVersion", 
    "GetResourceDefinition": "greengrass:GetResourceDefinition", 
    "GetResourceDefinitionVersion": "greengrass:GetResourceDefinitionVersion", 
    "GetServiceRoleForAccount": "greengrass:GetServiceRoleForAccount", 
    "GetSubscriptionDefinition": "greengrass:GetSubscriptionDefinition", 
    "GetSubscriptionDefinitionVersion": "greengrass:GetSubscriptionDefinitionVersion", 
    "ListBulkDeploymentDetailedReports": "greengrass:ListBulkDeploymentDetailedReports", 
    "ListBulkDeployments": "greengrass:ListBulkDeployments", 
    "ListConnectorDefinitionVersions": "greengrass:ListConnectorDefinitionVersions", 
    "ListConnectorDefinitions": "greengrass:ListConnectorDefinitions", 
    "ListCoreDefinitionVersions": "greengrass:ListCoreDefinitionVersions", 
    "ListCoreDefinitions": "greengrass:ListCoreDefinitions", 
    "ListDeployments": "greengrass:ListDeployments", 
    "ListDeviceDefinitionVersions": "greengrass:ListDeviceDefinitionVersions", 
    "ListDeviceDefinitions": "greengrass:ListDeviceDefinitions", 
    "ListFunctionDefinitionVersions": "greengrass:ListFunctionDefinitionVersions", 
    "ListFunctionDefinitions": "greengrass:ListFunctionDefinitions", 
    "ListGroupCertificateAuthorities": "greengrass:ListGroupCertificateAuthorities", 
    "ListGroupVersions": "greengrass:ListGroupVersions", 
    "ListGroups": "greengrass:ListGroups", 
    "ListLoggerDefinitionVersions": "greengrass:ListLoggerDefinitionVersions", 
    "ListLoggerDefinitions": "greengrass:ListLoggerDefinitions", 
    "ListResourceDefinitionVersions": "greengrass:ListResourceDefinitionVersions", 
    "ListResourceDefinitions": "greengrass:ListResourceDefinitions", 
    "ListSubscriptionDefinitionVersions": "greengrass:ListSubscriptionDefinitionVersions", 
    "ListSubscriptionDefinitions": "greengrass:ListSubscriptionDefinitions", 
    "ListTagsForResource": "greengrass:ListTagsForResource", 
    "ResetDeployments": "greengrass:ResetDeployments", 
    "StartBulkDeployment": "greengrass:StartBulkDeployment", 
    "StopBulkDeployment": "greengrass:StopBulkDeployment", 
    "TagResource": "greengrass:TagResource", 
    "UntagResource": "greengrass:UntagResource", 
    "UpdateConnectivityInfo": "greengrass:UpdateConnectivityInfo", 
    "UpdateConnectorDefinition": "greengrass:UpdateConnectorDefinition", 
    "UpdateCoreDefinition": "greengrass:UpdateCoreDefinition", 
    "UpdateDeviceDefinition": "greengrass:UpdateDeviceDefinition", 
    "UpdateFunctionDefinition": "greengrass:UpdateFunctionDefinition", 
    "UpdateGroup": "greengrass:UpdateGroup", 
    "UpdateGroupCertificateConfiguration": "greengrass:UpdateGroupCertificateConfiguration", 
    "UpdateLoggerDefinition": "greengrass:UpdateLoggerDefinition", 
    "UpdateResourceDefinition": "greengrass:UpdateResourceDefinition", 
    "UpdateSubscriptionDefinition": "greengrass:UpdateSubscriptionDefinition"
  }, 
  "guardduty": {
    "AcceptInvitation": "guardduty:AcceptInvitation", 
    "ArchiveFindings": "guardduty:ArchiveFindings", 
    "CreateDetector": "guardduty:CreateDetector", 
    "CreateFilter": "guardduty:*", 
    "CreateIPSet": "guardduty:CreateIPSet", 
    "CreateMembers": "guardduty:CreateMembers", 
    "CreateSampleFindings": "guardduty:CreateSampleFindings", 
    "CreateThreatIntelSet": "guardduty:CreateThreatIntelSet", 
    "DeclineInvitations": "guardduty:DeclineInvitations", 
    "DeleteDetector": "guardduty:DeleteDetector", 
    "DeleteFilter": "guardduty:*", 
    "DeleteIPSet": "guardduty:DeleteIPSet", 
    "DeleteInvitations": "guardduty:DeleteInvitations", 
    "DeleteMembers": "guardduty:DeleteMembers", 
    "DeleteThreatIntelSet": "guardduty:DeleteThreatIntelSet", 
    "DisassociateFromMasterAccount": "guardduty:DisassociateFromMasterAccount", 
    "DisassociateMembers": "guardduty:DisassociateMembers", 
    "GetDetector": "guardduty:GetDetector", 
    "GetFilter": "guardduty:*", 
    "GetFindings": "guardduty:GetFindings", 
    "GetFindingsStatistics": "guardduty:GetFindingsStatistics", 
    "GetIPSet": "guardduty:GetIPSet", 
    "GetInvitationsCount": "guardduty:GetInvitationsCount", 
    "GetMasterAccount": "guardduty:GetMasterAccount", 
    "GetMembers": "guardduty:GetMembers", 
    "GetThreatIntelSet": "guardduty:GetThreatIntelSet", 
    "InviteMembers": "guardduty:InviteMembers", 
    "ListDetectors": "guardduty:ListDetectors", 
    "ListFilters": "guardduty:*", 
    "ListFindings": "guardduty:ListFindings", 
    "ListIPSets": "guardduty:ListIPSets", 
    "ListInvitations": "guardduty:ListInvitations", 
    "ListMembers": "guardduty:ListMembers", 
    "ListThreatIntelSets": "guardduty:ListThreatIntelSets", 
    "StartMonitoringMembers": "guardduty:StartMonitoringMembers", 
    "StopMonitoringMembers": "guardduty:StopMonitoringMembers", 
    "UnarchiveFindings": "guardduty:UnarchiveFindings", 
    "UpdateDetector": "guardduty:UpdateDetector", 
    "UpdateFilter": "guardduty:*", 
    "UpdateFindingsFeedback": "guardduty:UpdateFindingsFeedback", 
    "UpdateIPSet": "guardduty:UpdateIPSet", 
    "UpdateThreatIntelSet": "guardduty:UpdateThreatIntelSet"
  }, 
  "health": {
    "DescribeAffectedEntities": "health:DescribeAffectedEntities", 
    "DescribeEntityAggregates": "health:DescribeEntityAggregates", 
    "DescribeEventAggregates": "health:DescribeEventAggregates", 
    "DescribeEventDetails": "health:DescribeEventDetails", 
    "DescribeEventTypes": "health:DescribeEventTypes", 
    "DescribeEvents": "health:DescribeEvents"
  }, 
  "iam": {
    "AddClientIDToOpenIDConnectProvider": "iam:AddClientIDToOpenIDConnectProvider", 
    "AddRoleToInstanceProfile": "iam:AddRoleToInstanceProfile", 
    "AddUserToGroup": "iam:AddUserToGroup", 
    "AttachGroupPolicy": "iam:AttachGroupPolicy", 
    "AttachRolePolicy": "iam:AttachRolePolicy", 
    "AttachUserPolicy": "iam:AttachUserPolicy", 
    "ChangePassword": "iam:ChangePassword", 
    "CreateAccessKey": "iam:CreateAccessKey", 
    "CreateAccountAlias": "iam:CreateAccountAlias", 
    "CreateGroup": "iam:CreateGroup", 
    "CreateInstanceProfile": "iam:CreateInstanceProfile", 
    "CreateLoginProfile": "iam:CreateLoginProfile", 
    "CreateOpenIDConnectProvider": "iam:CreateOpenIDConnectProvider", 
    "CreatePolicy": "iam:CreatePolicy", 
    "CreatePolicyVersion": "iam:CreatePolicyVersion", 
    "CreateRole": "iam:CreateRole", 
    "CreateSAMLProvider": "iam:CreateSAMLProvider", 
    "CreateServiceLinkedRole": "iam:CreateServiceLinkedRole", 
    "CreateServiceSpecificCredential": "iam:CreateServiceSpecificCredential", 
    "CreateUser": "iam:CreateUser", 
    "CreateVirtualMFADevice": "iam:CreateVirtualMFADevice", 
    "DeactivateMFADevice": "iam:DeactivateMFADevice", 
    "DeleteAccessKey": "iam:DeleteAccessKey", 
    "DeleteAccountAlias": "iam:DeleteAccountAlias", 
    "DeleteAccountPasswordPolicy": "iam:DeleteAccountPasswordPolicy", 
    "DeleteGroup": "iam:DeleteGroup", 
    "DeleteGroupPolicy": "iam:DeleteGroupPolicy", 
    "DeleteInstanceProfile": "iam:DeleteInstanceProfile", 
    "DeleteLoginProfile": "iam:DeleteLoginProfile", 
    "DeleteOpenIDConnectProvider": "iam:DeleteOpenIDConnectProvider", 
    "DeletePolicy": "iam:DeletePolicy", 
    "DeletePolicyVersion": "iam:DeletePolicyVersion", 
    "DeleteRole": "iam:DeleteRole", 
    "DeleteRolePermissionsBoundary": "iam:*", 
    "DeleteRolePolicy": "iam:DeleteRolePolicy", 
    "DeleteSAMLProvider": "iam:DeleteSAMLProvider", 
    "DeleteSSHPublicKey": "iam:DeleteSSHPublicKey", 
    "DeleteServerCertificate": "iam:DeleteServerCertificate", 
    "DeleteServiceLinkedRole": "iam:DeleteServiceLinkedRole", 
    "DeleteServiceSpecificCredential": "iam:DeleteServiceSpecificCredential", 
    "DeleteSigningCertificate": "iam:DeleteSigningCertificate", 
    "DeleteUser": "iam:DeleteUser", 
    "DeleteUserPermissionsBoundary": "iam:*", 
    "DeleteUserPolicy": "iam:DeleteUserPolicy", 
    "DeleteVirtualMFADevice": "iam:DeleteVirtualMFADevice", 
    "DetachGroupPolicy": "iam:DetachGroupPolicy", 
    "DetachRolePolicy": "iam:DetachRolePolicy", 
    "DetachUserPolicy": "iam:DetachUserPolicy", 
    "EnableMFADevice": "iam:EnableMFADevice", 
    "GenerateCredentialReport": "iam:GenerateCredentialReport", 
    "GenerateServiceLastAccessedDetails": "iam:GenerateServiceLastAccessedDetails", 
    "GetAccessKeyLastUsed": "iam:GetAccessKeyLastUsed", 
    "GetAccountAuthorizationDetails": "iam:GetAccountAuthorizationDetails", 
    "GetAccountPasswordPolicy": "iam:GetAccountPasswordPolicy", 
    "GetAccountSummary": "iam:GetAccountSummary", 
    "GetContextKeysForCustomPolicy": "iam:GetContextKeysForCustomPolicy", 
    "GetContextKeysForPrincipalPolicy": "iam:GetContextKeysForPrincipalPolicy", 
    "GetCredentialReport": "iam:GetCredentialReport", 
    "GetGroup": "iam:GetGroup", 
    "GetGroupPolicy": "iam:GetGroupPolicy", 
    "GetInstanceProfile": "iam:GetInstanceProfile", 
    "GetLoginProfile": "iam:GetLoginProfile", 
    "GetOpenIDConnectProvider": "iam:GetOpenIDConnectProvider", 
    "GetPolicy": "iam:GetPolicy", 
    "GetPolicyVersion": "iam:GetPolicyVersion", 
    "GetRole": "iam:GetRole", 
    "GetRolePolicy": "iam:GetRolePolicy", 
    "GetSAMLProvider": "iam:GetSAMLProvider", 
    "GetSSHPublicKey": "iam:GetSSHPublicKey", 
    "GetServerCertificate": "iam:GetServerCertificate", 
    "GetServiceLastAccessedDetails": "iam:GetServiceLastAccessedDetails", 
    "GetServiceLastAccessedDetailsWithEntities": "iam:GetServiceLastAccessedDetailsWithEntities", 
    "GetServiceLinkedRoleDeletionStatus": "iam:GetServiceLinkedRoleDeletionStatus", 
    "GetUser": "iam:GetUser", 
    "GetUserPolicy": "iam:GetUserPolicy", 
    "ListAccessKeys": "iam:ListAccessKeys", 
    "ListAccountAliases": "iam:ListAccountAliases", 
    "ListAttachedGroupPolicies": "iam:ListAttachedGroupPolicies", 
    "ListAttachedRolePolicies": "iam:ListAttachedRolePolicies", 
    "ListAttachedUserPolicies": "iam:ListAttachedUserPolicies", 
    "ListEntitiesForPolicy": "iam:ListEntitiesForPolicy", 
    "ListGroupPolicies": "iam:ListGroupPolicies", 
    "ListGroups": "iam:ListGroups", 
    "ListGroupsForUser": "iam:ListGroupsForUser", 
    "ListInstanceProfiles": "iam:ListInstanceProfiles", 
    "ListInstanceProfilesForRole": "iam:ListInstanceProfilesForRole", 
    "ListMFADevices": "iam:ListMFADevices", 
    "ListOpenIDConnectProviders": "iam:ListOpenIDConnectProviders", 
    "ListPolicies": "iam:ListPolicies", 
    "ListPoliciesGrantingServiceAccess": "iam:ListPoliciesGrantingServiceAccess", 
    "ListPolicyVersions": "iam:ListPolicyVersions", 
    "ListRolePolicies": "iam:ListRolePolicies", 
    "ListRoleTags": "iam:ListRoleTags", 
    "ListRoles": "iam:ListRoles", 
    "ListSAMLProviders": "iam:ListSAMLProviders", 
    "ListSSHPublicKeys": "iam:ListSSHPublicKeys", 
    "ListServerCertificates": "iam:ListServerCertificates", 
    "ListServiceSpecificCredentials": "iam:ListServiceSpecificCredentials", 
    "ListSigningCertificates": "iam:ListSigningCertificates", 
    "ListUserPolicies": "iam:ListUserPolicies", 
    "ListUserTags": "iam:ListUserTags", 
    "ListUsers": "iam:ListUsers", 
    "ListVirtualMFADevices": "iam:ListVirtualMFADevices", 
    "PassRole": "iam:PassRole", 
    "PutGroupPolicy": "iam:PutGroupPolicy", 
    "PutRolePermissionsBoundary": "iam:*", 
    "PutRolePolicy": "iam:PutRolePolicy", 
    "PutUserPermissionsBoundary": "iam:*", 
    "PutUserPolicy": "iam:PutUserPolicy", 
    "RemoveClientIDFromOpenIDConnectProvider": "iam:RemoveClientIDFromOpenIDConnectProvider", 
    "RemoveRoleFromInstanceProfile": "iam:RemoveRoleFromInstanceProfile", 
    "RemoveUserFromGroup": "iam:RemoveUserFromGroup", 
    "ResetServiceSpecificCredential": "iam:ResetServiceSpecificCredential", 
    "ResyncMFADevice": "iam:ResyncMFADevice", 
    "SetDefaultPolicyVersion": "iam:SetDefaultPolicyVersion", 
    "SetSecurityTokenServicePreferences": "iam:SetSecurityTokenServicePreferences", 
    "SimulateCustomPolicy": "iam:SimulateCustomPolicy", 
    "SimulatePrincipalPolicy": "iam:SimulatePrincipalPolicy", 
    "TagRole": "iam:TagRole", 
    "TagUser": "iam:TagUser", 
    "UntagRole": "iam:UntagRole", 
    "UntagUser": "iam:UntagUser", 
    "UpdateAccessKey": "iam:UpdateAccessKey", 
    "UpdateAccountPasswordPolicy": "iam:UpdateAccountPasswordPolicy", 
    "UpdateAssumeRolePolicy": "iam:UpdateAssumeRolePolicy", 
    "UpdateGroup": "iam:UpdateGroup", 
    "UpdateLoginProfile": "iam:UpdateLoginProfile", 
    "UpdateOpenIDConnectProviderThumbprint": "iam:UpdateOpenIDConnectProviderThumbprint", 
    "UpdateRole": "iam:UpdateRole", 
    "UpdateRoleDescription": "iam:UpdateRoleDescription", 
    "UpdateSAMLProvider": "iam:UpdateSAMLProvider", 
    "UpdateSSHPublicKey": "iam:UpdateSSHPublicKey", 
    "UpdateServerCertificate": "iam:UpdateServerCertificate", 
    "UpdateServiceSpecificCredential": "iam:UpdateServiceSpecificCredential", 
    "UpdateSigningCertificate": "iam:UpdateSigningCertificate", 
    "UpdateUser": "iam:UpdateUser", 
    "UploadSSHPublicKey": "iam:UploadSSHPublicKey", 
    "UploadServerCertificate": "iam:UploadServerCertificate", 
    "UploadSigningCertificate": "iam:UploadSigningCertificate"
  }, 
  "importexport": {
    "CancelJob": "importexport:CancelJob", 
    "CreateJob": "importexport:CreateJob", 
    "GetShippingLabel": "importexport:GetShippingLabel", 
    "GetStatus": "importexport:GetStatus", 
    "ListJobs": "importexport:ListJobs", 
    "UpdateJob": "importexport:UpdateJob"
  }, 
  "inspector": {
    "AddAttributesToFindings": "inspector:AddAttributesToFindings", 
    "CreateAssessmentTarget": "inspector:CreateAssessmentTarget", 
    "CreateAssessmentTemplate": "inspector:CreateAssessmentTemplate", 
    "CreateExclusionsPreview": "inspector:*", 
    "CreateResourceGroup": "inspector:CreateResourceGroup", 
    "DeleteAssessmentRun": "inspector:DeleteAssessmentRun", 
    "DeleteAssessmentTarget": "inspector:DeleteAssessmentTarget", 
    "DeleteAssessmentTemplate": "inspector:DeleteAssessmentTemplate", 
    "DescribeAssessmentRuns": "inspector:DescribeAssessmentRuns", 
    "DescribeAssessmentTargets": "inspector:DescribeAssessmentTargets", 
    "DescribeAssessmentTemplates": "inspector:DescribeAssessmentTemplates", 
    "DescribeCrossAccountAccessRole": "inspector:DescribeCrossAccountAccessRole", 
    "DescribeExclusions": "inspector:*", 
    "DescribeFindings": "inspector:DescribeFindings", 
    "DescribeResourceGroups": "inspector:DescribeResourceGroups", 
    "DescribeRulesPackages": "inspector:DescribeRulesPackages", 
    "GetAssessmentReport": "inspector:*", 
    "GetExclusionsPreview": "inspector:*", 
    "GetTelemetryMetadata": "inspector:GetTelemetryMetadata", 
    "ListAssessmentRunAgents": "inspector:ListAssessmentRunAgents", 
    "ListAssessmentRuns": "inspector:ListAssessmentRuns", 
    "ListAssessmentTargets": "inspector:ListAssessmentTargets", 
    "ListAssessmentTemplates": "inspector:ListAssessmentTemplates", 
    "ListEventSubscriptions": "inspector:ListEventSubscriptions", 
    "ListExclusions": "inspector:*", 
    "ListFindings": "inspector:ListFindings", 
    "ListRulesPackages": "inspector:ListRulesPackages", 
    "ListTagsForResource": "inspector:ListTagsForResource", 
    "PreviewAgents": "inspector:PreviewAgents", 
    "RegisterCrossAccountAccessRole": "inspector:RegisterCrossAccountAccessRole", 
    "RemoveAttributesFromFindings": "inspector:RemoveAttributesFromFindings", 
    "SetTagsForResource": "inspector:SetTagsForResource", 
    "StartAssessmentRun": "inspector:StartAssessmentRun", 
    "StopAssessmentRun": "inspector:StopAssessmentRun", 
    "SubscribeToEvent": "inspector:SubscribeToEvent", 
    "UnsubscribeFromEvent": "inspector:UnsubscribeFromEvent", 
    "UpdateAssessmentTarget": "inspector:UpdateAssessmentTarget"
  }, 
  "iot": {
    "AcceptCertificateTransfer": "iot:AcceptCertificateTransfer", 
    "AddThingToBillingGroup": "iot:AddThingToBillingGroup", 
    "AddThingToThingGroup": "iot:AddThingToThingGroup", 
    "AssociateTargetsWithJob": "iot:AssociateTargetsWithJob", 
    "AttachPolicy": "iot:AttachPolicy", 
    "AttachPrincipalPolicy": "iot:AttachPrincipalPolicy", 
    "AttachSecurityProfile": "iot:*", 
    "AttachThingPrincipal": "iot:AttachThingPrincipal", 
    "CancelAuditTask": "iot:*", 
    "CancelCertificateTransfer": "iot:CancelCertificateTransfer", 
    "CancelJob": "iot:CancelJob", 
    "CancelJobExecution": "iot:CancelJobExecution", 
    "ClearDefaultAuthorizer": "iot:ClearDefaultAuthorizer", 
    "Connect": "iot:Connect", 
    "CreateAuthorizer": "iot:CreateAuthorizer", 
    "CreateBillingGroup": "iot:CreateBillingGroup", 
    "CreateCertificateFromCsr": "iot:CreateCertificateFromCsr", 
    "CreateDynamicThingGroup": "iot:CreateDynamicThingGroup", 
    "CreateJob": "iot:CreateJob", 
    "CreateKeysAndCertificate": "iot:CreateKeysAndCertificate", 
    "CreateOTAUpdate": "iot:*", 
    "CreatePolicy": "iot:CreatePolicy", 
    "CreatePolicyVersion": "iot:CreatePolicyVersion", 
    "CreateRoleAlias": "iot:CreateRoleAlias", 
    "CreateScheduledAudit": "iot:*", 
    "CreateSecurityProfile": "iot:*", 
    "CreateStream": "iot:CreateStream", 
    "CreateThing": "iot:CreateThing", 
    "CreateThingGroup": "iot:CreateThingGroup", 
    "CreateThingType": "iot:CreateThingType", 
    "CreateTopicRule": "iot:CreateTopicRule", 
    "DeleteAccountAuditConfiguration": "iot:*", 
    "DeleteAuthorizer": "iot:DeleteAuthorizer", 
    "DeleteBillingGroup": "iot:DeleteBillingGroup", 
    "DeleteCACertificate": "iot:DeleteCACertificate", 
    "DeleteCertificate": "iot:DeleteCertificate", 
    "DeleteDynamicThingGroup": "iot:DeleteDynamicThingGroup", 
    "DeleteJob": "iot:DeleteJob", 
    "DeleteJobExecution": "iot:DeleteJobExecution", 
    "DeleteOTAUpdate": "iot:DeleteOTAUpdate", 
    "DeletePolicy": "iot:DeletePolicy", 
    "DeletePolicyVersion": "iot:DeletePolicyVersion", 
    "DeleteRegistrationCode": "iot:DeleteRegistrationCode", 
    "DeleteRoleAlias": "iot:DeleteRoleAlias", 
    "DeleteScheduledAudit": "iot:*", 
    "DeleteSecurityProfile": "iot:*", 
    "DeleteStream": "iot:DeleteStream", 
    "DeleteThing": "iot:DeleteThing", 
    "DeleteThingGroup": "iot:DeleteThingGroup", 
    "DeleteThingShadow": "iot:DeleteThingShadow", 
    "DeleteThingType": "iot:DeleteThingType", 
    "DeleteTopicRule": "iot:DeleteTopicRule", 
    "DeleteV2LoggingLevel": "iot:DeleteV2LoggingLevel", 
    "DeprecateThingType": "iot:DeprecateThingType", 
    "DescribeAccountAuditConfiguration": "iot:*", 
    "DescribeAuditTask": "iot:*", 
    "DescribeAuthorizer": "iot:DescribeAuthorizer", 
    "DescribeBillingGroup": "iot:DescribeBillingGroup", 
    "DescribeCACertificate": "iot:DescribeCACertificate", 
    "DescribeCertificate": "iot:DescribeCertificate", 
    "DescribeDefaultAuthorizer": "iot:DescribeDefaultAuthorizer", 
    "DescribeEndpoint": "iot:DescribeEndpoint", 
    "DescribeEventConfigurations": "iot:DescribeEventConfigurations", 
    "DescribeIndex": "iot:DescribeIndex", 
    "DescribeJob": "iot:DescribeJob", 
    "DescribeJobExecution": "iot:DescribeJobExecution", 
    "DescribeRoleAlias": "iot:DescribeRoleAlias", 
    "DescribeScheduledAudit": "iot:*", 
    "DescribeSecurityProfile": "iot:*", 
    "DescribeStream": "iot:DescribeStream", 
    "DescribeThing": "iot:DescribeThing", 
    "DescribeThingGroup": "iot:DescribeThingGroup", 
    "DescribeThingRegistrationTask": "iot:DescribeThingRegistrationTask", 
    "DescribeThingType": "iot:DescribeThingType", 
    "DetachPolicy": "iot:DetachPolicy", 
    "DetachPrincipalPolicy": "iot:DetachPrincipalPolicy", 
    "DetachSecurityProfile": "iot:*", 
    "DetachThingPrincipal": "iot:DetachThingPrincipal", 
    "DisableTopicRule": "iot:DisableTopicRule", 
    "EnableTopicRule": "iot:EnableTopicRule", 
    "GetEffectivePolicies": "iot:GetEffectivePolicies", 
    "GetIndexingConfiguration": "iot:GetIndexingConfiguration", 
    "GetJobDocument": "iot:GetJobDocument", 
    "GetLoggingOptions": "iot:GetLoggingOptions", 
    "GetOTAUpdate": "iot:GetOTAUpdate", 
    "GetPendingJobExecutions": "iot:GetPendingJobExecutions", 
    "GetPolicy": "iot:GetPolicy", 
    "GetPolicyVersion": "iot:GetPolicyVersion", 
    "GetRegistrationCode": "iot:GetRegistrationCode", 
    "GetStatistics": "iot:GetStatistics", 
    "GetThingShadow": "iot:GetThingShadow", 
    "GetTopicRule": "iot:GetTopicRule", 
    "GetV2LoggingOptions": "iot:GetV2LoggingOptions", 
    "ListActiveViolations": "iot:*", 
    "ListAttachedPolicies": "iot:ListAttachedPolicies", 
    "ListAuditFindings": "iot:*", 
    "ListAuditTasks": "iot:*", 
    "ListAuthorizers": "iot:ListAuthorizers", 
    "ListBillingGroups": "iot:ListBillingGroups", 
    "ListCACertificates": "iot:ListCACertificates", 
    "ListCertificates": "iot:ListCertificates", 
    "ListCertificatesByCA": "iot:ListCertificatesByCA", 
    "ListIndices": "iot:ListIndices", 
    "ListJobExecutionsForJob": "iot:ListJobExecutionsForJob", 
    "ListJobExecutionsForThing": "iot:ListJobExecutionsForThing", 
    "ListJobs": "iot:ListJobs", 
    "ListOTAUpdates": "iot:ListOTAUpdates", 
    "ListOutgoingCertificates": "iot:ListOutgoingCertificates", 
    "ListPolicies": "iot:ListPolicies", 
    "ListPolicyPrincipals": "iot:ListPolicyPrincipals", 
    "ListPolicyVersions": "iot:ListPolicyVersions", 
    "ListPrincipalPolicies": "iot:ListPrincipalPolicies", 
    "ListPrincipalThings": "iot:ListPrincipalThings", 
    "ListRoleAliases": "iot:ListRoleAliases", 
    "ListScheduledAudits": "iot:*", 
    "ListSecurityProfiles": "iot:*", 
    "ListSecurityProfilesForTarget": "iot:*", 
    "ListStreams": "iot:ListStreams", 
    "ListTagsForResource": "iot:ListTagsForResource", 
    "ListTargetsForPolicy": "iot:ListTargetsForPolicy", 
    "ListTargetsForSecurityProfile": "iot:*", 
    "ListThingGroups": "iot:ListThingGroups", 
    "ListThingGroupsForThing": "iot:ListThingGroupsForThing", 
    "ListThingPrincipals": "iot:ListThingPrincipals", 
    "ListThingRegistrationTaskReports": "iot:ListThingRegistrationTaskReports", 
    "ListThingRegistrationTasks": "iot:ListThingRegistrationTasks", 
    "ListThingTypes": "iot:ListThingTypes", 
    "ListThings": "iot:ListThings", 
    "ListThingsInBillingGroup": "iot:ListThingsInBillingGroup", 
    "ListThingsInThingGroup": "iot:ListThingsInThingGroup", 
    "ListTopicRules": "iot:ListTopicRules", 
    "ListV2LoggingLevels": "iot:ListV2LoggingLevels", 
    "ListViolationEvents": "iot:*", 
    "Publish": "iot:Publish", 
    "Receive": "iot:Receive", 
    "RegisterCACertificate": "iot:RegisterCACertificate", 
    "RegisterCertificate": "iot:RegisterCertificate", 
    "RegisterThing": "iot:RegisterThing", 
    "RejectCertificateTransfer": "iot:RejectCertificateTransfer", 
    "RemoveThingFromBillingGroup": "iot:RemoveThingFromBillingGroup", 
    "RemoveThingFromThingGroup": "iot:RemoveThingFromThingGroup", 
    "ReplaceTopicRule": "iot:ReplaceTopicRule", 
    "SearchIndex": "iot:SearchIndex", 
    "SetDefaultAuthorizer": "iot:SetDefaultAuthorizer", 
    "SetDefaultPolicyVersion": "iot:SetDefaultPolicyVersion", 
    "SetLoggingOptions": "iot:SetLoggingOptions", 
    "SetV2LoggingLevel": "iot:SetV2LoggingLevel", 
    "SetV2LoggingOptions": "iot:SetV2LoggingOptions", 
    "StartNextPendingJobExecution": "iot:StartNextPendingJobExecution", 
    "StartOnDemandAuditTask": "iot:*", 
    "StartThingRegistrationTask": "iot:StartThingRegistrationTask", 
    "StopThingRegistrationTask": "iot:StopThingRegistrationTask", 
    "Subscribe": "iot:Subscribe", 
    "TagResource": "iot:TagResource", 
    "TestAuthorization": "iot:TestAuthorization", 
    "TestInvokeAuthorizer": "iot:TestInvokeAuthorizer", 
    "TransferCertificate": "iot:TransferCertificate", 
    "UntagResource": "iot:UntagResource", 
    "UpdateAccountAuditConfiguration": "iot:*", 
    "UpdateAuthorizer": "iot:UpdateAuthorizer", 
    "UpdateBillingGroup": "iot:UpdateBillingGroup", 
    "UpdateCACertificate": "iot:UpdateCACertificate", 
    "UpdateCertificate": "iot:UpdateCertificate", 
    "UpdateDynamicThingGroup": "iot:UpdateDynamicThingGroup", 
    "UpdateEventConfigurations": "iot:UpdateEventConfigurations", 
    "UpdateIndexingConfiguration": "iot:UpdateIndexingConfiguration", 
    "UpdateJob": "iot:UpdateJob", 
    "UpdateJobExecution": "iot:UpdateJobExecution", 
    "UpdateRoleAlias": "iot:UpdateRoleAlias", 
    "UpdateScheduledAudit": "iot:*", 
    "UpdateSecurityProfile": "iot:*", 
    "UpdateStream": "iot:UpdateStream", 
    "UpdateThing": "iot:UpdateThing", 
    "UpdateThingGroup": "iot:UpdateThingGroup", 
    "UpdateThingGroupsForThing": "iot:UpdateThingGroupsForThing", 
    "UpdateThingShadow": "iot:UpdateThingShadow", 
    "ValidateSecurityProfileBehaviors": "iotanalytics:*"
  }, 
  "iot-data": {
    "DeleteThingShadow": "iot:DeleteThingShadow", 
    "GetThingShadow": "iot:GetThingShadow", 
    "Publish": "iot:Publish", 
    "UpdateThingShadow": "iot:UpdateThingShadow"
  }, 
  "iot-jobs-data": {
    "DescribeJobExecution": "iot:DescribeJobExecution", 
    "GetPendingJobExecutions": "iot-jobs-data:GetPendingJobExecutions", 
    "StartNextPendingJobExecution": "iot-jobs-data:StartNextPendingJobExecution", 
    "UpdateJobExecution": "iot-jobs-data:UpdateJobExecution"
  }, 
  "iot1click-devices": {
    "ClaimDevicesByClaimCode": "iot1click-devices:ClaimDevicesByClaimCode", 
    "DescribeDevice": "iot1click-devices:DescribeDevice", 
    "FinalizeDeviceClaim": "iot1click-devices:FinalizeDeviceClaim", 
    "GetDeviceMethods": "iot1click-devices:GetDeviceMethods", 
    "InitiateDeviceClaim": "iot1click-devices:InitiateDeviceClaim", 
    "InvokeDeviceMethod": "iot1click-devices:InvokeDeviceMethod", 
    "ListDeviceEvents": "iot1click-devices:ListDeviceEvents", 
    "ListDevices": "iot1click-devices:ListDevices", 
    "UnclaimDevice": "iot1click-devices:UnclaimDevice", 
    "UpdateDeviceState": "iot1click-devices:UpdateDeviceState"
  }, 
  "iot1click-projects": {
    "AssociateDeviceWithPlacement": "iot1click-projects:AssociateDeviceWithPlacement", 
    "CreatePlacement": "iot1click-projects:CreatePlacement", 
    "CreateProject": "iot1click-projects:CreateProject", 
    "DeletePlacement": "iot1click-projects:DeletePlacement", 
    "DeleteProject": "iot1click-projects:DeleteProject", 
    "DescribePlacement": "iot1click-projects:DescribePlacement", 
    "DescribeProject": "iot1click-projects:DescribeProject", 
    "DisassociateDeviceFromPlacement": "iot1click-projects:DisassociateDeviceFromPlacement", 
    "GetDevicesInPlacement": "iot1click-projects:GetDevicesInPlacement", 
    "ListPlacements": "iot1click-projects:ListPlacements", 
    "ListProjects": "iot1click-projects:ListProjects", 
    "UpdatePlacement": "iot1click-projects:UpdatePlacement", 
    "UpdateProject": "iot1click-projects:UpdateProject"
  }, 
  "iotanalytics": {
    "BatchPutMessage": "iotanalytics:BatchPutMessage", 
    "CancelPipelineReprocessing": "iotanalytics:CancelPipelineReprocessing", 
    "CreateChannel": "iotanalytics:CreateChannel", 
    "CreateDataset": "iotanalytics:CreateDataset", 
    "CreateDatasetContent": "iotanalytics:CreateDatasetContent", 
    "CreateDatastore": "iotanalytics:CreateDatastore", 
    "CreatePipeline": "iotanalytics:CreatePipeline", 
    "DeleteChannel": "iotanalytics:DeleteChannel", 
    "DeleteDataset": "iotanalytics:DeleteDataset", 
    "DeleteDatasetContent": "iotanalytics:DeleteDatasetContent", 
    "DeleteDatastore": "iotanalytics:DeleteDatastore", 
    "DeletePipeline": "iotanalytics:DeletePipeline", 
    "DescribeChannel": "iotanalytics:DescribeChannel", 
    "DescribeDataset": "iotanalytics:DescribeDataset", 
    "DescribeDatastore": "iotanalytics:DescribeDatastore", 
    "DescribeLoggingOptions": "iotanalytics:DescribeLoggingOptions", 
    "DescribePipeline": "iotanalytics:DescribePipeline", 
    "GetDatasetContent": "iotanalytics:GetDatasetContent", 
    "ListChannels": "iotanalytics:ListChannels", 
    "ListDatasets": "iotanalytics:ListDatasets", 
    "ListDatastores": "iotanalytics:ListDatastores", 
    "ListPipelines": "iotanalytics:ListPipelines", 
    "ListTagsForResource": "iotanalytics:*", 
    "PutLoggingOptions": "iotanalytics:PutLoggingOptions", 
    "RunPipelineActivity": "iotanalytics:RunPipelineActivity", 
    "SampleChannelData": "iotanalytics:SampleChannelData", 
    "StartPipelineReprocessing": "iotanalytics:StartPipelineReprocessing", 
    "TagResource": "iotanalytics:*", 
    "UntagResource": "iotanalytics:*", 
    "UpdateChannel": "iotanalytics:UpdateChannel", 
    "UpdateDataset": "iotanalytics:UpdateDataset", 
    "UpdateDatastore": "iotanalytics:UpdateDatastore", 
    "UpdatePipeline": "iotanalytics:UpdatePipeline"
  }, 
  "kinesis": {
    "AddTagsToStream": "kinesis:AddTagsToStream", 
    "CreateStream": "kinesis:CreateStream", 
    "DecreaseStreamRetentionPeriod": "kinesis:DecreaseStreamRetentionPeriod", 
    "DeleteStream": "kinesis:DeleteStream", 
    "DeregisterStreamConsumer": "kinesis:DeregisterStreamConsumer", 
    "DescribeLimits": "kinesis:DescribeLimits", 
    "DescribeStream": "kinesis:DescribeStream", 
    "DescribeStreamConsumer": "kinesis:DescribeStreamConsumer", 
    "DescribeStreamSummary": "kinesis:DescribeStreamSummary", 
    "DisableEnhancedMonitoring": "kinesis:DisableEnhancedMonitoring", 
    "EnableEnhancedMonitoring": "kinesis:EnableEnhancedMonitoring", 
    "GetRecords": "kinesis:GetRecords", 
    "GetShardIterator": "kinesis:GetShardIterator", 
    "IncreaseStreamRetentionPeriod": "kinesis:IncreaseStreamRetentionPeriod", 
    "ListShards": "kinesis:ListShards", 
    "ListStreamConsumers": "kinesis:ListStreamConsumers", 
    "ListStreams": "kinesis:ListStreams", 
    "ListTagsForStream": "kinesis:ListTagsForStream", 
    "MergeShards": "kinesis:MergeShards", 
    "PutRecord": "kinesis:PutRecord", 
    "PutRecords": "kinesis:PutRecords", 
    "RegisterStreamConsumer": "kinesis:RegisterStreamConsumer", 
    "RemoveTagsFromStream": "kinesis:RemoveTagsFromStream", 
    "SplitShard": "kinesis:SplitShard", 
    "StartStreamEncryption": "kinesis:*", 
    "StopStreamEncryption": "kinesis:*", 
    "SubscribeToShard": "kinesis:SubscribeToShard", 
    "UpdateShardCount": "kinesis:UpdateShardCount"
  }, 
  "kinesis-video-archived-media": {
    "GetHLSStreamingSessionURL": "kinesis-video-archived-media:*", 
    "GetMediaForFragmentList": "kinesisvideo:GetMediaForFragmentList", 
    "ListFragments": "kinesisvideo:ListFragments"
  }, 
  "kinesis-video-media": {
    "GetMedia": "kinesisvideo:GetMedia"
  }, 
  "kinesisanalytics": {
    "AddApplicationCloudWatchLoggingOption": [
      "kinesisanalytics:AddApplicationCloudWatchLoggingOption", 
      "iam:passRole"
    ], 
    "AddApplicationInput": "kinesisanalytics:AddApplicationInput", 
    "AddApplicationInputProcessingConfiguration": [
      "kinesisanalytics:AddApplicationInputProcessingConfiguration", 
      "iam:passRole"
    ], 
    "AddApplicationOutput": "kinesisanalytics:AddApplicationOutput", 
    "AddApplicationReferenceDataSource": "kinesisanalytics:AddApplicationReferenceDataSource", 
    "CreateApplication": "kinesisanalytics:CreateApplication", 
    "DeleteApplication": "kinesisanalytics:DeleteApplication", 
    "DeleteApplicationCloudWatchLoggingOption": "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption", 
    "DeleteApplicationInputProcessingConfiguration": "kinesisanalytics:DeleteApplicationInputProcessingConfiguration", 
    "DeleteApplicationOutput": "kinesisanalytics:DeleteApplicationOutput", 
    "DeleteApplicationReferenceDataSource": "kinesisanalytics:DeleteApplicationReferenceDataSource", 
    "DescribeApplication": "kinesisanalytics:DescribeApplication", 
    "DiscoverInputSchema": "kinesisanalytics:DiscoverInputSchema", 
    "ListApplications": "kinesisanalytics:ListApplications", 
    "ListTagsForResource": "kinesisanalytics:ListTagsForResource", 
    "StartApplication": "kinesisanalytics:StartApplication", 
    "StopApplication": "kinesisanalytics:StopApplication", 
    "TagResource": "kinesisanalytics:TagResource", 
    "UntagResource": "kinesisanalytics:UntagResource", 
    "UpdateApplication": "kinesisanalytics:UpdateApplication"
  }, 
  "kinesisvideo": {
    "CreateStream": "kinesisvideo:CreateStream", 
    "DeleteStream": "kinesisvideo:DeleteStream", 
    "DescribeStream": "kinesisvideo:DescribeStream", 
    "GetDataEndpoint": "kinesisvideo:GetDataEndpoint", 
    "GetHLSStreamingSessionURL": "kinesisvideo:GetHLSStreamingSessionURL", 
    "GetMediaForFragmentList": "kinesisvideo:GetMediaForFragmentList", 
    "ListFragments": "kinesisvideo:ListFragments", 
    "ListStreams": "kinesisvideo:ListStreams", 
    "ListTagsForStream": "kinesisvideo:ListTagsForStream", 
    "PutMedia": "kinesisvideo:PutMedia", 
    "TagStream": "kinesisvideo:TagStream", 
    "UntagStream": "kinesisvideo:UntagStream", 
    "UpdateDataRetention": "kinesisvideo:UpdateDataRetention", 
    "UpdateStream": "kinesisvideo:UpdateStream"
  }, 
  "kms": {
    "CancelKeyDeletion": "kms:CancelKeyDeletion", 
    "ConnectCustomKeyStore": "kms:ConnectCustomKeyStore", 
    "CreateAlias": "kms:CreateAlias", 
    "CreateCustomKeyStore": "kms:CreateCustomKeyStore", 
    "CreateGrant": "kms:CreateGrant", 
    "CreateKey": "kms:CreateKey", 
    "Decrypt": "kms:Decrypt", 
    "DeleteAlias": "kms:DeleteAlias", 
    "DeleteCustomKeyStore": "kms:DeleteCustomKeyStore", 
    "DeleteImportedKeyMaterial": "kms:DeleteImportedKeyMaterial", 
    "DescribeCustomKeyStores": "kms:DescribeCustomKeyStores", 
    "DescribeKey": "kms:DescribeKey", 
    "DisableKey": "kms:DisableKey", 
    "DisableKeyRotation": "kms:DisableKeyRotation", 
    "DisconnectCustomKeyStore": "kms:DisconnectCustomKeyStore", 
    "EnableKey": "kms:EnableKey", 
    "EnableKeyRotation": "kms:EnableKeyRotation", 
    "Encrypt": "kms:Encrypt", 
    "GenerateDataKey": "kms:GenerateDataKey", 
    "GenerateDataKeyWithoutPlaintext": "kms:GenerateDataKeyWithoutPlaintext", 
    "GenerateRandom": "kms:GenerateRandom", 
    "GetKeyPolicy": "kms:GetKeyPolicy", 
    "GetKeyRotationStatus": "kms:GetKeyRotationStatus", 
    "GetParametersForImport": "kms:GetParametersForImport", 
    "ImportKeyMaterial": "kms:ImportKeyMaterial", 
    "ListAliases": "kms:ListAliases", 
    "ListGrants": "kms:ListGrants", 
    "ListKeyPolicies": "kms:ListKeyPolicies", 
    "ListKeys": "kms:ListKeys", 
    "ListResourceTags": "kms:ListResourceTags", 
    "ListRetirableGrants": "kms:ListRetirableGrants", 
    "PutKeyPolicy": "kms:PutKeyPolicy", 
    "ReEncrypt": [
      "kms:ReEncryptFrom", 
      "kms:ReEncryptTo"
    ], 
    "ReEncryptFrom": "kms:ReEncryptFrom", 
    "ReEncryptTo": "kms:ReEncryptTo", 
    "RetireGrant": "kms:RetireGrant", 
    "RevokeGrant": "kms:RevokeGrant", 
    "ScheduleKeyDeletion": "kms:ScheduleKeyDeletion", 
    "TagResource": "kms:TagResource", 
    "UntagResource": "kms:UntagResource", 
    "UpdateAlias": "kms:UpdateAlias", 
    "UpdateCustomKeyStore": "kms:UpdateCustomKeyStore", 
    "UpdateKeyDescription": "kms:UpdateKeyDescription"
  }, 
  "lambda": {
    "AddLayerVersionPermission": "lambda:AddLayerVersionPermission", 
    "AddPermission": "lambda:AddPermission", 
    "CreateAlias": "lambda:CreateAlias", 
    "CreateEventSourceMapping": "lambda:CreateEventSourceMapping", 
    "CreateFunction": "lambda:CreateFunction", 
    "DeleteAlias": "lambda:DeleteAlias", 
    "DeleteEventSourceMapping": "lambda:DeleteEventSourceMapping", 
    "DeleteFunction": "lambda:DeleteFunction", 
    "DeleteFunctionConcurrency": "lambda:DeleteFunctionConcurrency", 
    "DeleteLayerVersion": "lambda:DeleteLayerVersion", 
    "EnableReplication": "lambda:EnableReplication", 
    "GetAccountSettings": "lambda:GetAccountSettings", 
    "GetAlias": "lambda:GetAlias", 
    "GetEventSourceMapping": "lambda:GetEventSourceMapping", 
    "GetFunction": "lambda:GetFunction", 
    "GetFunctionConfiguration": "lambda:GetFunctionConfiguration", 
    "GetLayerVersion": "lambda:GetLayerVersion", 
    "GetLayerVersionPolicy": "lambda:GetLayerVersionPolicy", 
    "GetPolicy": "lambda:GetPolicy", 
    "Invoke": "lambda:InvokeFunction", 
    "InvokeAsync": "lambda:InvokeFunction", 
    "ListAliases": "lambda:ListAliases", 
    "ListEventSourceMappings": "lambda:ListEventSourceMappings", 
    "ListFunctions": "lambda:ListFunctions", 
    "ListLayerVersions": "lambda:ListLayerVersions", 
    "ListLayers": "lambda:ListLayers", 
    "ListTags": "lambda:ListTags", 
    "ListVersionsByFunction": "lambda:ListVersionsByFunction", 
    "PublishLayerVersion": "lambda:PublishLayerVersion", 
    "PublishVersion": "lambda:PublishVersion", 
    "PutFunctionConcurrency": "lambda:PutFunctionConcurrency", 
    "RemoveLayerVersionPermission": "lambda:RemoveLayerVersionPermission", 
    "RemovePermission": "lambda:RemovePermission", 
    "TagResource": "lambda:TagResource", 
    "UntagResource": "lambda:UntagResource", 
    "UpdateAlias": "lambda:UpdateAlias", 
    "UpdateEventSourceMapping": "lambda:UpdateEventSourceMapping", 
    "UpdateFunctionCode": "lambda:UpdateFunctionCode", 
    "UpdateFunctionConfiguration": "lambda:UpdateFunctionConfiguration"
  }, 
  "lex-models": {
    "CreateBotVersion": "lex:CreateBotVersion", 
    "CreateIntentVersion": "lex:CreateIntentVersion", 
    "CreateSlotTypeVersion": "lex:CreateSlotTypeVersion", 
    "DeleteBot": "lex:DeleteBot", 
    "DeleteBotAlias": "lex:DeleteBotAlias", 
    "DeleteBotChannelAssociation": "lex:DeleteBotChannelAssociation", 
    "DeleteBotVersion": "lex:DeleteBotVersion", 
    "DeleteIntent": "lex:DeleteIntent", 
    "DeleteIntentVersion": "lex:DeleteIntentVersion", 
    "DeleteSlotType": "lex:DeleteSlotType", 
    "DeleteSlotTypeVersion": "lex:DeleteSlotTypeVersion", 
    "DeleteUtterances": "lex:DeleteUtterances", 
    "GetBot": "lex:GetBot", 
    "GetBotAlias": "lex:GetBotAlias", 
    "GetBotAliases": "lex:GetBotAliases", 
    "GetBotChannelAssociation": "lex:GetBotChannelAssociation", 
    "GetBotChannelAssociations": "lex:GetBotChannelAssociations", 
    "GetBotVersions": "lex:GetBotVersions", 
    "GetBots": "lex:GetBots", 
    "GetBuiltinIntent": "lex:GetBuiltinIntent", 
    "GetBuiltinIntents": "lex:GetBuiltinIntents", 
    "GetBuiltinSlotTypes": "lex:GetBuiltinSlotTypes", 
    "GetExport": "lex:GetExport", 
    "GetImport": "lex:GetImport", 
    "GetIntent": "lex:GetIntent", 
    "GetIntentVersions": "lex:GetIntentVersions", 
    "GetIntents": "lex:GetIntents", 
    "GetSlotType": "lex:GetSlotType", 
    "GetSlotTypeVersions": "lex:GetSlotTypeVersions", 
    "GetSlotTypes": "lex:GetSlotTypes", 
    "GetUtterancesView": "lex:GetUtterancesView", 
    "PutBot": "lex:PutBot", 
    "PutBotAlias": "lex:PutBotAlias", 
    "PutIntent": "lex:PutIntent", 
    "PutSlotType": "lex:PutSlotType", 
    "StartImport": "lex:StartImport"
  }, 
  "lex-runtime": {
    "PostContent": "lex:PostContent", 
    "PostText": "lex:PostText"
  }, 
  "lightsail": {
    "AllocateStaticIp": "lightsail:AllocateStaticIp", 
    "AttachDisk": "lightsail:*", 
    "AttachInstancesToLoadBalancer": "lightsail:*", 
    "AttachLoadBalancerTlsCertificate": "lightsail:*", 
    "AttachStaticIp": "lightsail:AttachStaticIp", 
    "CloseInstancePublicPorts": "lightsail:CloseInstancePublicPorts", 
    "CopySnapshot": "lightsail:CopySnapshot", 
    "CreateCloudFormationStack": "lightsail:CreateCloudFormationStack", 
    "CreateDisk": "lightsail:*", 
    "CreateDiskFromSnapshot": "lightsail:*", 
    "CreateDiskSnapshot": "lightsail:*", 
    "CreateDomain": "lightsail:CreateDomain", 
    "CreateDomainEntry": "lightsail:CreateDomainEntry", 
    "CreateInstanceSnapshot": "lightsail:CreateInstanceSnapshot", 
    "CreateInstances": "lightsail:CreateInstances", 
    "CreateInstancesFromSnapshot": "lightsail:CreateInstancesFromSnapshot", 
    "CreateKeyPair": "lightsail:CreateKeyPair", 
    "CreateLoadBalancer": "lightsail:*", 
    "CreateLoadBalancerTlsCertificate": "lightsail:*", 
    "CreateRelationalDatabase": "lightsail:CreateRelationalDatabase", 
    "CreateRelationalDatabaseFromSnapshot": "lightsail:CreateRelationalDatabaseFromSnapshot", 
    "CreateRelationalDatabaseSnapshot": "lightsail:CreateRelationalDatabaseSnapshot", 
    "DeleteDisk": "lightsail:*", 
    "DeleteDiskSnapshot": "lightsail:*", 
    "DeleteDomain": "lightsail:DeleteDomain", 
    "DeleteDomainEntry": "lightsail:DeleteDomainEntry", 
    "DeleteInstance": "lightsail:DeleteInstance", 
    "DeleteInstanceSnapshot": "lightsail:DeleteInstanceSnapshot", 
    "DeleteKeyPair": "lightsail:DeleteKeyPair", 
    "DeleteKnownHostKeys": "lightsail:DeleteKnownHostKeys", 
    "DeleteLoadBalancer": "lightsail:*", 
    "DeleteLoadBalancerTlsCertificate": "lightsail:*", 
    "DeleteRelationalDatabase": "lightsail:DeleteRelationalDatabase", 
    "DeleteRelationalDatabaseSnapshot": "lightsail:DeleteRelationalDatabaseSnapshot", 
    "DetachDisk": "lightsail:*", 
    "DetachInstancesFromLoadBalancer": "lightsail:*", 
    "DetachStaticIp": "lightsail:DetachStaticIp", 
    "DownloadDefaultKeyPair": "lightsail:DownloadDefaultKeyPair", 
    "ExportSnapshot": "lightsail:ExportSnapshot", 
    "GetActiveNames": "lightsail:GetActiveNames", 
    "GetBlueprints": "lightsail:GetBlueprints", 
    "GetBundles": "lightsail:GetBundles", 
    "GetCloudFormationStackRecords": "lightsail:GetCloudFormationStackRecords", 
    "GetDisk": "lightsail:*", 
    "GetDiskSnapshot": "lightsail:*", 
    "GetDiskSnapshots": "lightsail:*", 
    "GetDisks": "lightsail:*", 
    "GetDomain": "lightsail:GetDomain", 
    "GetDomains": "lightsail:GetDomains", 
    "GetExportSnapshotRecords": "lightsail:GetExportSnapshotRecords", 
    "GetInstance": "lightsail:GetInstance", 
    "GetInstanceAccessDetails": "lightsail:GetInstanceAccessDetails", 
    "GetInstanceMetricData": "lightsail:GetInstanceMetricData", 
    "GetInstancePortStates": "lightsail:GetInstancePortStates", 
    "GetInstanceSnapshot": "lightsail:GetInstanceSnapshot", 
    "GetInstanceSnapshots": "lightsail:GetInstanceSnapshots", 
    "GetInstanceState": "lightsail:GetInstanceState", 
    "GetInstances": "lightsail:GetInstances", 
    "GetKeyPair": "lightsail:GetKeyPair", 
    "GetKeyPairs": "lightsail:GetKeyPairs", 
    "GetLoadBalancer": "lightsail:*", 
    "GetLoadBalancerMetricData": "lightsail:*", 
    "GetLoadBalancerTlsCertificates": "lightsail:*", 
    "GetLoadBalancers": "lightsail:*", 
    "GetOperation": "lightsail:GetOperation", 
    "GetOperations": "lightsail:GetOperations", 
    "GetOperationsForResource": "lightsail:GetOperationsForResource", 
    "GetRegions": "lightsail:GetRegions", 
    "GetRelationalDatabase": "lightsail:GetRelationalDatabase", 
    "GetRelationalDatabaseBlueprints": "lightsail:GetRelationalDatabaseBlueprints", 
    "GetRelationalDatabaseBundles": "lightsail:GetRelationalDatabaseBundles", 
    "GetRelationalDatabaseEvents": "lightsail:GetRelationalDatabaseEvents", 
    "GetRelationalDatabaseLogEvents": "lightsail:GetRelationalDatabaseLogEvents", 
    "GetRelationalDatabaseLogStreams": "lightsail:GetRelationalDatabaseLogStreams", 
    "GetRelationalDatabaseMasterUserPassword": "lightsail:GetRelationalDatabaseMasterUserPassword", 
    "GetRelationalDatabaseMetricData": "lightsail:GetRelationalDatabaseMetricData", 
    "GetRelationalDatabaseParameters": "lightsail:GetRelationalDatabaseParameters", 
    "GetRelationalDatabaseSnapshot": "lightsail:GetRelationalDatabaseSnapshot", 
    "GetRelationalDatabaseSnapshots": "lightsail:GetRelationalDatabaseSnapshots", 
    "GetRelationalDatabases": "lightsail:GetRelationalDatabases", 
    "GetStaticIp": "lightsail:GetStaticIp", 
    "GetStaticIps": "lightsail:GetStaticIps", 
    "ImportKeyPair": "lightsail:ImportKeyPair", 
    "IsVpcPeered": "lightsail:IsVpcPeered", 
    "OpenInstancePublicPorts": "lightsail:OpenInstancePublicPorts", 
    "PeerVpc": "lightsail:PeerVpc", 
    "PutInstancePublicPorts": "lightsail:*", 
    "RebootInstance": "lightsail:RebootInstance", 
    "RebootRelationalDatabase": "lightsail:RebootRelationalDatabase", 
    "ReleaseStaticIp": "lightsail:ReleaseStaticIp", 
    "StartInstance": "lightsail:StartInstance", 
    "StartRelationalDatabase": "lightsail:StartRelationalDatabase", 
    "StopInstance": "lightsail:StopInstance", 
    "StopRelationalDatabase": "lightsail:StopRelationalDatabase", 
    "TagResource": "lightsail:TagResource", 
    "UnpeerVpc": "lightsail:UnpeerVpc", 
    "UntagResource": "lightsail:UntagResource", 
    "UpdateDomainEntry": "lightsail:UpdateDomainEntry", 
    "UpdateLoadBalancerAttribute": "lightsail:*", 
    "UpdateRelationalDatabase": "lightsail:UpdateRelationalDatabase", 
    "UpdateRelationalDatabaseParameters": "lightsail:UpdateRelationalDatabaseParameters"
  }, 
  "logs": {
    "AssociateKmsKey": "logs:AssociateKmsKey", 
    "CancelExportTask": "logs:CancelExportTask", 
    "CreateExportTask": "logs:CreateExportTask", 
    "CreateLogDelivery ": "logs:CreateLogDelivery", 
    "CreateLogGroup": "logs:CreateLogGroup", 
    "CreateLogStream": "logs:CreateLogStream", 
    "DeleteDestination": "logs:DeleteDestination", 
    "DeleteLogDelivery ": "logs:DeleteLogDelivery", 
    "DeleteLogGroup": "logs:DeleteLogGroup", 
    "DeleteLogStream": "logs:DeleteLogStream", 
    "DeleteMetricFilter": "logs:DeleteMetricFilter", 
    "DeleteResourcePolicy": "logs:DeleteResourcePolicy", 
    "DeleteRetentionPolicy": "logs:DeleteRetentionPolicy", 
    "DeleteSubscriptionFilter": "logs:DeleteSubscriptionFilter", 
    "DescribeDestinations": "logs:DescribeDestinations", 
    "DescribeExportTasks": "logs:DescribeExportTasks", 
    "DescribeLogGroups": "logs:DescribeLogGroups", 
    "DescribeLogStreams": "logs:DescribeLogStreams", 
    "DescribeMetricFilters": "logs:DescribeMetricFilters", 
    "DescribeQueries": "logs:DescribeQueries", 
    "DescribeResourcePolicies": "logs:DescribeResourcePolicies", 
    "DescribeSubscriptionFilters": "logs:DescribeSubscriptionFilters", 
    "DisassociateKmsKey": "logs:DisassociateKmsKey", 
    "FilterLogEvents": "logs:FilterLogEvents", 
    "GetLogDelivery ": "logs:GetLogDelivery", 
    "GetLogEvents": "logs:GetLogEvents", 
    "GetLogGroupFields": "logs:GetLogGroupFields", 
    "GetLogRecord": "logs:GetLogRecord", 
    "GetQueryResults": "logs:GetQueryResults", 
    "ListLogDeliveries ": "logs:ListLogDeliveries", 
    "ListTagsLogGroup": "logs:ListTagsLogGroup", 
    "PutDestination": "logs:PutDestination", 
    "PutDestinationPolicy": "logs:PutDestinationPolicy", 
    "PutLogEvents": "logs:PutLogEvents", 
    "PutMetricFilter": "logs:PutMetricFilter", 
    "PutResourcePolicy": "logs:PutResourcePolicy", 
    "PutRetentionPolicy": "logs:PutRetentionPolicy", 
    "PutSubscriptionFilter": "logs:PutSubscriptionFilter", 
    "StartQuery": "logs:StartQuery", 
    "StopQuery": "logs:StopQuery", 
    "TagLogGroup": "logs:TagLogGroup", 
    "TestMetricFilter": "logs:TestMetricFilter", 
    "UntagLogGroup": "logs:UntagLogGroup", 
    "UpdateLogDelivery ": "logs:UpdateLogDelivery"
  }, 
  "machinelearning": {
    "AddTags": "machinelearning:AddTags", 
    "CreateBatchPrediction": "machinelearning:CreateBatchPrediction", 
    "CreateDataSourceFromRDS": "machinelearning:CreateDataSourceFromRDS", 
    "CreateDataSourceFromRedshift": "machinelearning:CreateDataSourceFromRedshift", 
    "CreateDataSourceFromS3": "machinelearning:CreateDataSourceFromS3", 
    "CreateEvaluation": "machinelearning:CreateEvaluation", 
    "CreateMLModel": "machinelearning:CreateMLModel", 
    "CreateRealtimeEndpoint": "machinelearning:CreateRealtimeEndpoint", 
    "DeleteBatchPrediction": "machinelearning:DeleteBatchPrediction", 
    "DeleteDataSource": "machinelearning:DeleteDataSource", 
    "DeleteEvaluation": "machinelearning:DeleteEvaluation", 
    "DeleteMLModel": "machinelearning:DeleteMLModel", 
    "DeleteRealtimeEndpoint": "machinelearning:DeleteRealtimeEndpoint", 
    "DeleteTags": "machinelearning:DeleteTags", 
    "DescribeBatchPredictions": "machinelearning:DescribeBatchPredictions", 
    "DescribeDataSources": "machinelearning:DescribeDataSources", 
    "DescribeEvaluations": "machinelearning:DescribeEvaluations", 
    "DescribeMLModels": "machinelearning:DescribeMLModels", 
    "DescribeTags": "machinelearning:DescribeTags", 
    "GetBatchPrediction": "machinelearning:GetBatchPrediction", 
    "GetDataSource": "machinelearning:GetDataSource", 
    "GetEvaluation": "machinelearning:GetEvaluation", 
    "GetMLModel": "machinelearning:GetMLModel", 
    "Predict": "machinelearning:Predict", 
    "UpdateBatchPrediction": "machinelearning:UpdateBatchPrediction", 
    "UpdateDataSource": "machinelearning:UpdateDataSource", 
    "UpdateEvaluation": "machinelearning:UpdateEvaluation", 
    "UpdateMLModel": "machinelearning:UpdateMLModel"
  }, 
  "macie": {
    "AssociateMemberAccount": "macie:*", 
    "AssociateS3Resources": "macie:*", 
    "DisassociateMemberAccount": "macie:*", 
    "DisassociateS3Resources": "macie:*", 
    "ListMemberAccounts": "macie:*", 
    "ListS3Resources": "macie:*", 
    "UpdateS3Resources": "macie:*"
  }, 
  "marketplace-entitlement": {
    "GetEntitlements": "aws-marketplace:*"
  }, 
  "marketplacecommerceanalytics": {
    "GenerateDataSet": "marketplacecommerceanalytics:*", 
    "StartSupportDataExport": "marketplacecommerceanalytics:*"
  }, 
  "mediaconvert": {
    "AssociateCertificate": "mediaconvert:AssociateCertificate", 
    "CancelJob": "mediaconvert:CancelJob", 
    "CreateJob": "mediaconvert:CreateJob", 
    "CreateJobTemplate": "mediaconvert:CreateJobTemplate", 
    "CreatePreset": "mediaconvert:CreatePreset", 
    "CreateQueue": "mediaconvert:CreateQueue", 
    "DeleteJobTemplate": "mediaconvert:DeleteJobTemplate", 
    "DeletePreset": "mediaconvert:DeletePreset", 
    "DeleteQueue": "mediaconvert:DeleteQueue", 
    "DescribeEndpoints": "mediaconvert:*", 
    "DisassociateCertificate": "mediaconvert:DisassociateCertificate", 
    "GetJob": "mediaconvert:GetJob", 
    "GetJobTemplate": "mediaconvert:GetJobTemplate", 
    "GetPreset": "mediaconvert:GetPreset", 
    "GetQueue": "mediaconvert:GetQueue", 
    "ListJobTemplates": "mediaconvert:ListJobTemplates", 
    "ListJobs": "mediaconvert:ListJobs", 
    "ListPresets": "mediaconvert:ListPresets", 
    "ListQueues": "mediaconvert:ListQueues", 
    "ListTagsForResource": "mediaconvert:*", 
    "TagResource": "mediaconvert:*", 
    "UntagResource": "mediaconvert:*", 
    "UpdateJobTemplate": "mediaconvert:UpdateJobTemplate", 
    "UpdatePreset": "mediaconvert:UpdatePreset", 
    "UpdateQueue": "mediaconvert:UpdateQueue"
  }, 
  "medialive": {
    "BatchUpdateSchedule": "medialive:*", 
    "CreateChannel": "medialive:CreateChannel", 
    "CreateInput": "medialive:CreateInput", 
    "CreateInputSecurityGroup": "medialive:CreateInputSecurityGroup", 
    "CreateTags": "medialive:CreateTags", 
    "DeleteChannel": "medialive:DeleteChannel", 
    "DeleteInput": "medialive:DeleteInput", 
    "DeleteInputSecurityGroup": "medialive:DeleteInputSecurityGroup", 
    "DeleteReservation": "medialive:*", 
    "DeleteTags": "medialive:DeleteTags", 
    "DescribeChannel": "medialive:DescribeChannel", 
    "DescribeInput": "medialive:DescribeInput", 
    "DescribeInputSecurityGroup": "medialive:DescribeInputSecurityGroup", 
    "DescribeOffering": "medialive:*", 
    "DescribeReservation": "medialive:*", 
    "DescribeSchedule": "medialive:*", 
    "ListChannels": "medialive:ListChannels", 
    "ListInputSecurityGroups": "medialive:ListInputSecurityGroups", 
    "ListInputs": "medialive:ListInputs", 
    "ListOfferings": "medialive:*", 
    "ListReservations": "medialive:*", 
    "ListTagsForResource": "medialive:ListTagsForResource", 
    "PurchaseOffering": "medialive:*", 
    "StartChannel": "medialive:StartChannel", 
    "StopChannel": "medialive:StopChannel", 
    "UpdateChannel": "medialive:*", 
    "UpdateChannelClass": "medialive:UpdateChannelClass", 
    "UpdateInput": "medialive:*", 
    "UpdateInputSecurityGroup": "medialive:*", 
    "UpdateReservation": "medialive:UpdateReservation"
  }, 
  "mediapackage": {
    "CreateChannel": "mediapackage:CreateChannel", 
    "CreateOriginEndpoint": "mediapackage:CreateOriginEndpoint", 
    "DeleteChannel": "mediapackage:DeleteChannel", 
    "DeleteOriginEndpoint": "mediapackage:DeleteOriginEndpoint", 
    "DescribeChannel": "mediapackage:DescribeChannel", 
    "DescribeOriginEndpoint": "mediapackage:DescribeOriginEndpoint", 
    "ListChannels": "mediapackage:ListChannels", 
    "ListOriginEndpoints": "mediapackage:ListOriginEndpoints", 
    "ListTagsForResource": "mediapackage:ListTagsForResource", 
    "RotateChannelCredentials": "mediapackage:*", 
    "RotateIngestEndpointCredentials": "mediapackage:RotateIngestEndpointCredentials", 
    "TagResource": "mediapackage:TagResource", 
    "UntagResource": "mediapackage:UntagResource", 
    "UpdateChannel": "mediapackage:UpdateChannel", 
    "UpdateOriginEndpoint": "mediapackage:UpdateOriginEndpoint"
  }, 
  "mediastore": {
    "CreateContainer": "mediastore:CreateContainer", 
    "DeleteContainer": "mediastore:DeleteContainer", 
    "DeleteContainerPolicy": "mediastore:DeleteContainerPolicy", 
    "DeleteCorsPolicy": "mediastore:*", 
    "DeleteLifecyclePolicy": "mediastore:DeleteLifecyclePolicy", 
    "DeleteObject": "mediastore:DeleteObject", 
    "DescribeContainer": "mediastore:DescribeContainer", 
    "DescribeObject": "mediastore:DescribeObject", 
    "GetContainerPolicy": "mediastore:GetContainerPolicy", 
    "GetCorsPolicy": "mediastore:*", 
    "GetLifecyclePolicy": "mediastore:GetLifecyclePolicy", 
    "GetObject": "mediastore:GetObject", 
    "ListContainers": "mediastore:ListContainers", 
    "ListItems": "mediastore:ListItems", 
    "PutContainerPolicy": "mediastore:PutContainerPolicy", 
    "PutCorsPolicy": "mediastore:*", 
    "PutLifecyclePolicy": "mediastore:PutLifecyclePolicy", 
    "PutObject": "mediastore:PutObject", 
    "StartAccessLogging": "mediastore:StartAccessLogging", 
    "StopAccessLogging": "mediastore:StopAccessLogging"
  }, 
  "mediastore-data": {
    "DeleteObject": "mediastore:DeleteObject", 
    "DescribeObject": "mediastore:DescribeObject", 
    "GetObject": "mediastore:GetObject", 
    "ListItems": "mediastore:ListItems", 
    "PutObject": "mediastore:PutObject"
  }, 
  "mediatailor": {
    "DeletePlaybackConfiguration": "mediatailor:*", 
    "GetPlaybackConfiguration": "mediatailor:*", 
    "ListPlaybackConfigurations": "mediatailor:*", 
    "ListTagsForResource": "mediatailor:*", 
    "PutPlaybackConfiguration": "mediatailor:*", 
    "TagResource": "mediatailor:*", 
    "UntagResource": "mediatailor:*"
  }, 
  "meteringmarketplace": {
    "BatchMeterUsage": "aws-marketplace:BatchMeterUsage", 
    "MeterUsage": "aws-marketplace:MeterUsage", 
    "RegisterUsage": "aws-marketplace:RegisterUsage", 
    "ResolveCustomer": "aws-marketplace:ResolveCustomer"
  }, 
  "mgh": {
    "AssociateCreatedArtifact": "mgh:AssociateCreatedArtifact", 
    "AssociateDiscoveredResource": "mgh:AssociateDiscoveredResource", 
    "CreateProgressUpdateStream": "mgh:CreateProgressUpdateStream", 
    "DeleteProgressUpdateStream": "mgh:DeleteProgressUpdateStream", 
    "DescribeApplicationState": "mgh:DescribeApplicationState", 
    "DescribeMigrationTask": "mgh:DescribeMigrationTask", 
    "DisassociateCreatedArtifact": "mgh:DisassociateCreatedArtifact", 
    "DisassociateDiscoveredResource": "mgh:DisassociateDiscoveredResource", 
    "ImportMigrationTask": "mgh:ImportMigrationTask", 
    "ListCreatedArtifacts": "mgh:ListCreatedArtifacts", 
    "ListDiscoveredResources": "mgh:ListDiscoveredResources", 
    "ListMigrationTasks": "mgh:ListMigrationTasks", 
    "ListProgressUpdateStreams": "mgh:ListProgressUpdateStreams", 
    "NotifyApplicationState": "mgh:NotifyApplicationState", 
    "NotifyMigrationTaskState": "mgh:NotifyMigrationTaskState", 
    "PutResourceAttributes": "mgh:PutResourceAttributes"
  }, 
  "mobile": {
    "DescribeProject": "mobilehub:*"
  }, 
  "mobilehub": {
    "CreateContainer": "mobilehub:CreateContainer", 
    "CreateProject": "mobilehub:CreateProject", 
    "CreateServiceRole": "mobilehub:CreateServiceRole", 
    "DeleteProject": "mobilehub:DeleteProject", 
    "DeleteProjectSnapshot": "mobilehub:DeleteProjectSnapshot", 
    "DeployToStage": "mobilehub:DeployToStage", 
    "DescribeBundle": "mobilehub:DescribeBundle", 
    "ExportBundle": "mobilehub:ExportBundle", 
    "ExportProject": "mobilehub:ExportProject", 
    "GenerateProjectParameters": "mobilehub:GenerateProjectParameters", 
    "GetProject": "mobilehub:GetProject", 
    "GetProjectSnapshot": "mobilehub:GetProjectSnapshot", 
    "ImportProject": "mobilehub:ImportProject", 
    "InstallBundle": "mobilehub:InstallBundle", 
    "ListAvailableConnectors": "mobilehub:ListAvailableConnectors", 
    "ListAvailableFeatures": "mobilehub:ListAvailableFeatures", 
    "ListAvailableRegions": "mobilehub:ListAvailableRegions", 
    "ListBundles": "mobilehub:ListBundles", 
    "ListProjectSnapshots": "mobilehub:ListProjectSnapshots", 
    "ListProjects": "mobilehub:ListProjects", 
    "SynchronizeProject": "mobilehub:SynchronizeProject", 
    "UpdateProject": "mobilehub:UpdateProject", 
    "VerifyServiceRole": "mobilehub:VerifyServiceRole"
  }, 
  "mq": {
    "CreateBroker": "mq:CreateBroker", 
    "CreateConfiguration": "mq:CreateConfiguration", 
    "CreateTags": "mq:CreateTags", 
    "CreateUser": "mq:CreateUser", 
    "DeleteBroker": "mq:DeleteBroker", 
    "DeleteTags": "mq:DeleteTags", 
    "DeleteUser": "mq:DeleteUser", 
    "DescribeBroker": "mq:DescribeBroker", 
    "DescribeBrokerEngineTypes": "mq:DescribeBrokerEngineTypes", 
    "DescribeBrokerInstanceOptions": "mq:ListTags", 
    "DescribeConfiguration": "mq:DescribeConfiguration", 
    "DescribeConfigurationRevision": "mq:DescribeConfigurationRevision", 
    "DescribeUser": "mq:DescribeUser", 
    "ListBrokers": "mq:ListBrokers", 
    "ListConfigurationRevisions": "mq:ListConfigurationRevisions", 
    "ListConfigurations": "mq:ListConfigurations", 
    "ListTags": "mq:ListTags", 
    "ListUsers": "mq:ListUsers", 
    "RebootBroker": "mq:RebootBroker", 
    "UpdateBroker": "mq:UpdateBroker", 
    "UpdateConfiguration": "mq:UpdateConfiguration", 
    "UpdateUser": "mq:UpdateUser"
  }, 
  "mturk": {
    "AcceptQualificationRequest": "mechanicalturk:*", 
    "ApproveAssignment": "mechanicalturk:ApproveAssignment", 
    "ApproveRejectedAssignment": "mturk:ApproveRejectedAssignment", 
    "AssignQualification": "mturk:AssignQualification", 
    "AssociateQualificationWithWorker": "mechanicalturk:*", 
    "BlockWorker": "mturk:BlockWorker", 
    "ChangeHITTypeOfHIT": "mturk:ChangeHITTypeOfHIT", 
    "CreateAdditionalAssignmentsForHIT": "mechanicalturk:*", 
    "CreateHIT": "mechanicalturk:CreateHIT", 
    "CreateHITType": "mechanicalturk:*", 
    "CreateHITWithHITType": "mechanicalturk:*", 
    "CreateQualificationType": "mechanicalturk:CreateQualificationType", 
    "CreateWorkerBlock": "mechanicalturk:*", 
    "DeleteHIT": "mechanicalturk:*", 
    "DeleteQualificationType": "mechanicalturk:*", 
    "DeleteWorkerBlock": "mechanicalturk:*", 
    "DisableHIT": "mechanicalturk:DisableHIT", 
    "DisassociateQualificationFromWorker": "mechanicalturk:*", 
    "DisposeHIT": "mechanicalturk:DisposeHIT", 
    "DisposeQualificationType": "mechanicalturk:DisposeQualificationType", 
    "ExtendHIT": "mechanicalturk:ExtendHIT", 
    "ForceExpireHIT": "mechanicalturk:ForceExpireHIT", 
    "GetAccountBalance": "mechanicalturk:GetAccountBalance", 
    "GetAssignment": "mechanicalturk:GetAssignment", 
    "GetAssignmentsForHIT": "mechanicalturk:GetAssignmentsForHIT", 
    "GetBlockedWorkers": "mechanicalturk:GetBlockedWorkers", 
    "GetBonusPayments": "mechanicalturk:GetBonusPayments", 
    "GetFileUploadURL": "mechanicalturk:GetFileUploadURL", 
    "GetHIT": "mechanicalturk:GetHIT", 
    "GetHITsForQualificationType": "mechanicalturk:GetHITsForQualificationType", 
    "GetQualificationRequests": "mechanicalturk:GetQualificationRequests", 
    "GetQualificationScore": "mechanicalturk:GetQualificationScore", 
    "GetQualificationType": "mechanicalturk:GetQualificationType", 
    "GetQualificationsForQualificationType": "mechanicalturk:GetQualificationsForQualificationType", 
    "GetRequesterStatistic": "mechanicalturk:GetRequesterStatistic", 
    "GetRequesterWorkerStatistic": "mechanicalturk:GetRequesterWorkerStatistic", 
    "GetReviewResultsForHIT": "mechanicalturk:GetReviewResultsForHIT", 
    "GetReviewableHITs": "mechanicalturk:GetReviewableHITs", 
    "GrantBonus": "mechanicalturk:GrantBonus", 
    "GrantQualification": "mechanicalturk:GrantQualification", 
    "ListAssignmentsForHIT": "mechanicalturk:*", 
    "ListBonusPayments": "mechanicalturk:*", 
    "ListHITs": "mechanicalturk:*", 
    "ListHITsForQualificationType": "mechanicalturk:*", 
    "ListQualificationRequests": "mechanicalturk:*", 
    "ListQualificationTypes": "mechanicalturk:*", 
    "ListReviewPolicyResultsForHIT": "mechanicalturk:*", 
    "ListReviewableHITs": "mechanicalturk:*", 
    "ListWorkerBlocks": "mechanicalturk:*", 
    "ListWorkersWithQualificationType": "mechanicalturk:*", 
    "NotifyWorkers": "mechanicalturk:NotifyWorkers", 
    "RegisterHITType": "mechanicalturk:RegisterHITType", 
    "RejectAssignment": "mechanicalturk:RejectAssignment", 
    "RejectQualificationRequest": "mechanicalturk:RejectQualificationRequest", 
    "RevokeQualification": "mechanicalturk:RevokeQualification", 
    "SearchHITs": "mechanicalturk:mechanicalturk:", 
    "SearchQualificationTypes": "mechanicalturk:SearchQualificationTypes", 
    "SendBonus": "mechanicalturk:*", 
    "SendTestEventNotification": "mechanicalturk:SendTestEventNotification", 
    "SetHITAsReviewing": "mechanicalturk:SetHITAsReviewing", 
    "SetHITTypeNotification": "mechanicalturk:SetHITTypeNotification", 
    "UnblockWorker": "mechanicalturk:UnblockWorker", 
    "UpdateExpirationForHIT": "mechanicalturk:*", 
    "UpdateHITReviewStatus": "mechanicalturk:*", 
    "UpdateHITTypeOfHIT": "mechanicalturk:*", 
    "UpdateNotificationSettings": "mechanicalturk:*", 
    "UpdateQualificationScore": "mechanicalturk:UpdateQualificationScore", 
    "UpdateQualificationType": "mechanicalturk:UpdateQualificationType"
  }, 
  "neptune": {
    "AddRoleToDBCluster": "neptune-db:*", 
    "AddSourceIdentifierToSubscription": "neptune-db:*", 
    "AddTagsToResource": "neptune-db:*", 
    "ApplyPendingMaintenanceAction": "neptune-db:*", 
    "CopyDBClusterParameterGroup": "neptune-db:*", 
    "CopyDBClusterSnapshot": "neptune-db:*", 
    "CopyDBParameterGroup": "neptune-db:*", 
    "CreateDBCluster": "neptune-db:*", 
    "CreateDBClusterParameterGroup": "neptune-db:*", 
    "CreateDBClusterSnapshot": "neptune-db:*", 
    "CreateDBInstance": "neptune-db:*", 
    "CreateDBParameterGroup": "neptune-db:*", 
    "CreateDBSubnetGroup": "neptune-db:*", 
    "CreateEventSubscription": "neptune-db:*", 
    "DeleteDBCluster": "neptune-db:*", 
    "DeleteDBClusterParameterGroup": "neptune-db:*", 
    "DeleteDBClusterSnapshot": "neptune-db:*", 
    "DeleteDBInstance": "neptune-db:*", 
    "DeleteDBParameterGroup": "neptune-db:*", 
    "DeleteDBSubnetGroup": "neptune-db:*", 
    "DeleteEventSubscription": "neptune-db:*", 
    "DescribeDBClusterParameterGroups": "neptune-db:*", 
    "DescribeDBClusterParameters": "neptune-db:*", 
    "DescribeDBClusterSnapshotAttributes": "neptune-db:*", 
    "DescribeDBClusterSnapshots": "neptune-db:*", 
    "DescribeDBClusters": "neptune-db:*", 
    "DescribeDBEngineVersions": "neptune-db:*", 
    "DescribeDBInstances": "neptune-db:*", 
    "DescribeDBParameterGroups": "neptune-db:*", 
    "DescribeDBParameters": "neptune-db:*", 
    "DescribeDBSubnetGroups": "neptune-db:*", 
    "DescribeEngineDefaultClusterParameters": "neptune-db:*", 
    "DescribeEngineDefaultParameters": "neptune-db:*", 
    "DescribeEventCategories": "neptune-db:*", 
    "DescribeEventSubscriptions": "neptune-db:*", 
    "DescribeEvents": "neptune-db:*", 
    "DescribeOrderableDBInstanceOptions": "neptune-db:*", 
    "DescribePendingMaintenanceActions": "neptune-db:*", 
    "DescribeValidDBInstanceModifications": "neptune-db:*", 
    "FailoverDBCluster": "neptune-db:*", 
    "ListTagsForResource": "neptune-db:*", 
    "ModifyDBCluster": "neptune-db:*", 
    "ModifyDBClusterParameterGroup": "neptune-db:*", 
    "ModifyDBClusterSnapshotAttribute": "neptune-db:*", 
    "ModifyDBInstance": "neptune-db:*", 
    "ModifyDBParameterGroup": "neptune-db:*", 
    "ModifyDBSubnetGroup": "neptune-db:*", 
    "ModifyEventSubscription": "neptune-db:*", 
    "PromoteReadReplicaDBCluster": "neptune-db:*", 
    "RebootDBInstance": "neptune-db:*", 
    "RemoveRoleFromDBCluster": "neptune-db:*", 
    "RemoveSourceIdentifierFromSubscription": "neptune-db:*", 
    "RemoveTagsFromResource": "neptune-db:*", 
    "ResetDBClusterParameterGroup": "neptune-db:*", 
    "ResetDBParameterGroup": "neptune-db:*", 
    "RestoreDBClusterFromSnapshot": "neptune-db:*", 
    "RestoreDBClusterToPointInTime": "neptune-db:*"
  }, 
  "opsworks": {
    "AssignInstance": "opsworks:AssignInstance", 
    "AssignVolume": "opsworks:AssignVolume", 
    "AssociateElasticIp": "opsworks:AssociateElasticIp", 
    "AttachElasticLoadBalancer": "opsworks:AttachElasticLoadBalancer", 
    "CloneStack": "opsworks:CloneStack", 
    "CreateApp": "opsworks:CreateApp", 
    "CreateDeployment": "opsworks:CreateDeployment", 
    "CreateInstance": "opsworks:CreateInstance", 
    "CreateLayer": "opsworks:CreateLayer", 
    "CreateStack": "opsworks:CreateStack", 
    "CreateUserProfile": "opsworks:CreateUserProfile", 
    "DeleteApp": "opsworks:DeleteApp", 
    "DeleteInstance": "opsworks:DeleteInstance", 
    "DeleteLayer": "opsworks:DeleteLayer", 
    "DeleteStack": "opsworks:DeleteStack", 
    "DeleteUserProfile": "opsworks:DeleteUserProfile", 
    "DeregisterEcsCluster": "opsworks:DeregisterEcsCluster", 
    "DeregisterElasticIp": "opsworks:DeregisterElasticIp", 
    "DeregisterInstance": "opsworks:DeregisterInstance", 
    "DeregisterRdsDbInstance": "opsworks:DeregisterRdsDbInstance", 
    "DeregisterVolume": "opsworks:DeregisterVolume", 
    "DescribeAgentVersions": "opsworks:DescribeAgentVersions", 
    "DescribeApps": "opsworks:DescribeApps", 
    "DescribeCommands": "opsworks:DescribeCommands", 
    "DescribeDeployments": "opsworks:DescribeDeployments", 
    "DescribeEcsClusters": "opsworks:DescribeEcsClusters", 
    "DescribeElasticIps": "opsworks:DescribeElasticIps", 
    "DescribeElasticLoadBalancers": "opsworks:DescribeElasticLoadBalancers", 
    "DescribeInstances": "opsworks:DescribeInstances", 
    "DescribeLayers": "opsworks:DescribeLayers", 
    "DescribeLoadBasedAutoScaling": "opsworks:DescribeLoadBasedAutoScaling", 
    "DescribeMyUserProfile": "opsworks:DescribeMyUserProfile", 
    "DescribeOperatingSystems": "opsworks:*", 
    "DescribePermissions": "opsworks:DescribePermissions", 
    "DescribeRaidArrays": "opsworks:DescribeRaidArrays", 
    "DescribeRdsDbInstances": "opsworks:DescribeRdsDbInstances", 
    "DescribeServiceErrors": "opsworks:DescribeServiceErrors", 
    "DescribeStackProvisioningParameters": "opsworks:DescribeStackProvisioningParameters", 
    "DescribeStackSummary": "opsworks:DescribeStackSummary", 
    "DescribeStacks": "opsworks:DescribeStacks", 
    "DescribeTimeBasedAutoScaling": "opsworks:DescribeTimeBasedAutoScaling", 
    "DescribeUserProfiles": "opsworks:DescribeUserProfiles", 
    "DescribeVolumes": "opsworks:DescribeVolumes", 
    "DetachElasticLoadBalancer": "opsworks:DetachElasticLoadBalancer", 
    "DisassociateElasticIp": "opsworks:DisassociateElasticIp", 
    "GetHostnameSuggestion": "opsworks:GetHostnameSuggestion", 
    "GrantAccess": "opsworks:GrantAccess", 
    "ListTags": "opsworks:ListTags", 
    "RebootInstance": "opsworks:RebootInstance", 
    "RegisterEcsCluster": "opsworks:RegisterEcsCluster", 
    "RegisterElasticIp": "opsworks:RegisterElasticIp", 
    "RegisterInstance": "opsworks:RegisterInstance", 
    "RegisterRdsDbInstance": "opsworks:RegisterRdsDbInstance", 
    "RegisterVolume": "opsworks:RegisterVolume", 
    "SetLoadBasedAutoScaling": "opsworks:SetLoadBasedAutoScaling", 
    "SetPermission": "opsworks:SetPermission", 
    "SetTimeBasedAutoScaling": "opsworks:SetTimeBasedAutoScaling", 
    "StartInstance": "opsworks:StartInstance", 
    "StartStack": "opsworks:StartStack", 
    "StopInstance": "opsworks:StopInstance", 
    "StopStack": "opsworks:StopStack", 
    "TagResource": "opsworks:TagResource", 
    "UnassignInstance": "opsworks:UnassignInstance", 
    "UnassignVolume": "opsworks:UnassignVolume", 
    "UntagResource": "opsworks:UntagResource", 
    "UpdateApp": "opsworks:UpdateApp", 
    "UpdateElasticIp": "opsworks:UpdateElasticIp", 
    "UpdateInstance": "opsworks:UpdateInstance", 
    "UpdateLayer": "opsworks:UpdateLayer", 
    "UpdateMyUserProfile": "opsworks:UpdateMyUserProfile", 
    "UpdateRdsDbInstance": "opsworks:UpdateRdsDbInstance", 
    "UpdateStack": "opsworks:UpdateStack", 
    "UpdateUserProfile": "opsworks:UpdateUserProfile", 
    "UpdateVolume": "opsworks:UpdateVolume"
  }, 
  "opsworkscm": {
    "AssociateNode": "opsworks-cm:AssociateNode", 
    "CreateBackup": "opsworks-cm:CreateBackup", 
    "CreateServer": "opsworks-cm:CreateServer", 
    "DeleteBackup": "opsworks-cm:DeleteBackup", 
    "DeleteServer": "opsworks-cm:DeleteServer", 
    "DescribeAccountAttributes": "opsworks-cm:DescribeAccountAttributes", 
    "DescribeBackups": "opsworks-cm:DescribeBackups", 
    "DescribeEvents": "opsworks-cm:DescribeEvents", 
    "DescribeNodeAssociationStatus": "opsworks-cm:DescribeNodeAssociationStatus", 
    "DescribeServers": "opsworks-cm:DescribeServers", 
    "DisassociateNode": "opsworks-cm:DisassociateNode", 
    "RestoreServer": "opsworks-cm:RestoreServer", 
    "StartMaintenance": "opsworks-cm:StartMaintenance", 
    "UpdateServer": "opsworks-cm:UpdateServer", 
    "UpdateServerEngineAttributes": "opsworks-cm:UpdateServerEngineAttributes"
  }, 
  "organizations": {
    "AcceptHandshake": "organizations:AcceptHandshake", 
    "AttachPolicy": "organizations:AttachPolicy", 
    "CancelHandshake": "organizations:CancelHandshake", 
    "CreateAccount": "organizations:CreateAccount", 
    "CreateGovCloudAccount": "organizations:CreateGovCloudAccount", 
    "CreateOrganization": "organizations:CreateOrganization", 
    "CreateOrganizationalUnit": "organizations:CreateOrganizationalUnit", 
    "CreatePolicy": "organizations:CreatePolicy", 
    "DeclineHandshake": "organizations:DeclineHandshake", 
    "DeleteOrganization": "organizations:DeleteOrganization", 
    "DeleteOrganizationalUnit": "organizations:DeleteOrganizationalUnit", 
    "DeletePolicy": "organizations:DeletePolicy", 
    "DescribeAccount": "organizations:DescribeAccount", 
    "DescribeCreateAccountStatus": "organizations:DescribeCreateAccountStatus", 
    "DescribeHandshake": "organizations:DescribeHandshake", 
    "DescribeOrganization": "organizations:DescribeOrganization", 
    "DescribeOrganizationalUnit": "organizations:DescribeOrganizationalUnit", 
    "DescribePolicy": "organizations:DescribePolicy", 
    "DetachPolicy": "organizations:DetachPolicy", 
    "DisableAWSServiceAccess": "organizations:DisableAWSServiceAccess", 
    "DisablePolicyType": "organizations:DisablePolicyType", 
    "EnableAWSServiceAccess": "organizations:EnableAWSServiceAccess", 
    "EnableAllFeatures": "organizations:EnableAllFeatures", 
    "EnablePolicyType": "organizations:EnablePolicyType", 
    "InviteAccountToOrganization": "organizations:InviteAccountToOrganization", 
    "LeaveOrganization": "organizations:LeaveOrganization", 
    "ListAWSServiceAccessForOrganization": "organizations:ListAWSServiceAccessForOrganization", 
    "ListAccounts": "organizations:ListAccounts", 
    "ListAccountsForParent": "organizations:ListAccountsForParent", 
    "ListChildren": "organizations:ListChildren", 
    "ListCreateAccountStatus": "organizations:ListCreateAccountStatus", 
    "ListHandshakesForAccount": "organizations:ListHandshakesForAccount", 
    "ListHandshakesForOrganization": "organizations:ListHandshakesForOrganization", 
    "ListOrganizationalUnitsForParent": "organizations:ListOrganizationalUnitsForParent", 
    "ListParents": "organizations:ListParents", 
    "ListPolicies": "organizations:ListPolicies", 
    "ListPoliciesForTarget": "organizations:ListPoliciesForTarget", 
    "ListRoots": "organizations:ListRoots", 
    "ListTargetsForPolicy": "organizations:ListTargetsForPolicy", 
    "MoveAccount": "organizations:MoveAccount", 
    "RemoveAccountFromOrganization": "organizations:RemoveAccountFromOrganization", 
    "UpdateOrganizationalUnit": "organizations:UpdateOrganizationalUnit", 
    "UpdatePolicy": "organizations:UpdatePolicy"
  }, 
  "pi": {
    "DescribeDimensionKeys": "pi:*", 
    "GetResourceMetrics": "pi:*"
  }, 
  "pinpoint": {
    "CreateApp": "mobiletargeting:*", 
    "CreateCampaign": "mobiletargeting:CreateCampaign", 
    "CreateExportJob": "mobiletargeting:*", 
    "CreateImportJob": "mobiletargeting:CreateImportJob", 
    "CreateSegment": "mobiletargeting:CreateSegment", 
    "DeleteAdmChannel": "mobiletargeting:*", 
    "DeleteApnsChannel": "mobiletargeting:DeleteApnsChannel", 
    "DeleteApnsSandboxChannel": "mobiletargeting:*", 
    "DeleteApnsVoipChannel": "mobiletargeting:*", 
    "DeleteApnsVoipSandboxChannel": "mobiletargeting:*", 
    "DeleteApp": "mobiletargeting:*", 
    "DeleteBaiduChannel": "mobiletargeting:*", 
    "DeleteCampaign": "mobiletargeting:DeleteCampaign", 
    "DeleteEmailChannel": "mobiletargeting:*", 
    "DeleteEndpoint": "mobiletargeting:*", 
    "DeleteEventStream": "mobiletargeting:*", 
    "DeleteGcmChannel": "mobiletargeting:DeleteGcmChannel", 
    "DeleteSegment": "mobiletargeting:DeleteSegment", 
    "DeleteSmsChannel": "mobiletargeting:*", 
    "DeleteUserEndpoints": "mobiletargeting:*", 
    "DeleteVoiceChannel": "mobiletargeting:DeleteVoiceChannel", 
    "GetAdmChannel": "mobiletargeting:*", 
    "GetApnsChannel": "mobiletargeting:GetApnsChannel", 
    "GetApnsSandboxChannel": "mobiletargeting:*", 
    "GetApnsVoipChannel": "mobiletargeting:*", 
    "GetApnsVoipSandboxChannel": "mobiletargeting:*", 
    "GetApp": "mobiletargeting:*", 
    "GetApplicationSettings": "mobiletargeting:GetApplicationSettings", 
    "GetApps": "mobiletargeting:*", 
    "GetBaiduChannel": "mobiletargeting:*", 
    "GetCampaign": "mobiletargeting:GetCampaign", 
    "GetCampaignActivities": "mobiletargeting:GetCampaignActivities", 
    "GetCampaignVersion": "mobiletargeting:GetCampaignVersion", 
    "GetCampaignVersions": "mobiletargeting:GetCampaignVersions", 
    "GetCampaigns": "mobiletargeting:GetCampaigns", 
    "GetChannels": "mobiletargeting:*", 
    "GetEmailChannel": "mobiletargeting:*", 
    "GetEndpoint": "mobiletargeting:GetEndpoint", 
    "GetEventStream": "mobiletargeting:*", 
    "GetExportJob": "mobiletargeting:*", 
    "GetExportJobs": "mobiletargeting:*", 
    "GetGcmChannel": "mobiletargeting:GetGcmChannel", 
    "GetImportJob": "mobiletargeting:GetImportJob", 
    "GetImportJobs": "mobiletargeting:GetImportJobs", 
    "GetSegment": "mobiletargeting:GetSegment", 
    "GetSegmentExportJobs": "mobiletargeting:*", 
    "GetSegmentImportJobs": "mobiletargeting:GetSegmentImportJobs", 
    "GetSegmentVersion": "mobiletargeting:GetSegmentVersion", 
    "GetSegmentVersions": "mobiletargeting:GetSegmentVersions", 
    "GetSegments": "mobiletargeting:GetSegments", 
    "GetSmsChannel": "mobiletargeting:*", 
    "GetUserEndpoints": "mobiletargeting:*", 
    "ListTagsForResource": "mobiletargeting:ListTagsForResource", 
    "PhoneNumberValidate": "mobiletargeting:*", 
    "PutEventStream": "mobiletargeting:*", 
    "PutEvents": "mobiletargeting:*", 
    "RemoveAttributes": "mobiletargeting:*", 
    "SendMessages": "mobiletargeting:*", 
    "SendUsersMessages": "mobiletargeting:*", 
    "TagResource": "mobiletargeting:TagResource", 
    "UntagResource": "mobiletargeting:UntagResource", 
    "UpdateAdmChannel": "mobiletargeting:*", 
    "UpdateApnsChannel": "mobiletargeting:UpdateApnsChannel", 
    "UpdateApnsSandboxChannel": "mobiletargeting:*", 
    "UpdateApnsVoipChannel": "mobiletargeting:*", 
    "UpdateApnsVoipSandboxChannel": "mobiletargeting:*", 
    "UpdateApplicationSettings": "mobiletargeting:UpdateApplicationSettings", 
    "UpdateBaiduChannel": "mobiletargeting:*", 
    "UpdateCampaign": "mobiletargeting:UpdateCampaign", 
    "UpdateEmailChannel": "mobiletargeting:*", 
    "UpdateEndpoint": "mobiletargeting:UpdateEndpoint", 
    "UpdateEndpointsBatch": "mobiletargeting:UpdateEndpointsBatch", 
    "UpdateGcmChannel": "mobiletargeting:UpdateGcmChannel", 
    "UpdateSegment": "mobiletargeting:UpdateSegment", 
    "UpdateSmsChannel": "mobiletargeting:*", 
    "UpdateVoiceChannel": "mobiletargeting:UpdateVoiceChannel"
  }, 
  "polly": {
    "DeleteLexicon": "polly:DeleteLexicon", 
    "DescribeVoices": "polly:DescribeVoices", 
    "GetLexicon": "polly:GetLexicon", 
    "GetSpeechSynthesisTask": "polly:*", 
    "ListLexicons": "polly:ListLexicons", 
    "ListSpeechSynthesisTasks": "polly:*", 
    "PutLexicon": "polly:PutLexicon", 
    "StartSpeechSynthesisTask": "polly:*", 
    "SynthesizeSpeech": "polly:SynthesizeSpeech"
  }, 
  "pricing": {
    "DescribeServices": "pricing:DescribeServices", 
    "GetAttributeValues": "pricing:GetAttributeValues", 
    "GetProducts": "pricing:GetProducts"
  }, 
  "rds": {
    "AddRoleToDBCluster": "rds:AddRoleToDBCluster", 
    "AddRoleToDBInstance": "rds:AddRoleToDBInstance", 
    "AddSourceIdentifierToSubscription": "rds:AddSourceIdentifierToSubscription", 
    "AddTagsToResource": "rds:AddTagsToResource", 
    "ApplyPendingMaintenanceAction": "rds:ApplyPendingMaintenanceAction", 
    "AuthorizeDBSecurityGroupIngress": "rds:AuthorizeDBSecurityGroupIngress", 
    "BacktrackDBCluster": "rds:*", 
    "CopyDBClusterParameterGroup": "rds:*", 
    "CopyDBClusterSnapshot": "rds:CopyDBClusterSnapshot", 
    "CopyDBParameterGroup": "rds:CopyDBParameterGroup", 
    "CopyDBSnapshot": "rds:CopyDBSnapshot", 
    "CopyOptionGroup": "rds:CopyOptionGroup", 
    "CreateDBCluster": "rds:CreateDBCluster", 
    "CreateDBClusterEndpoint": "rds:CreateDBClusterEndpoint", 
    "CreateDBClusterParameterGroup": "rds:CreateDBClusterParameterGroup", 
    "CreateDBClusterSnapshot": "rds:CreateDBClusterSnapshot", 
    "CreateDBInstance": "rds:CreateDBInstance", 
    "CreateDBInstanceReadReplica": "rds:CreateDBInstanceReadReplica", 
    "CreateDBParameterGroup": "rds:CreateDBParameterGroup", 
    "CreateDBSecurityGroup": "rds:CreateDBSecurityGroup", 
    "CreateDBSnapshot": "rds:CreateDBSnapshot", 
    "CreateDBSubnetGroup": "rds:CreateDBSubnetGroup", 
    "CreateEventSubscription": "rds:CreateEventSubscription", 
    "CreateGlobalCluster": "rds:CreateGlobalCluster", 
    "CreateOptionGroup": "rds:CreateOptionGroup", 
    "DeleteDBCluster": "rds:DeleteDBCluster", 
    "DeleteDBClusterEndpoint": "rds:DeleteDBClusterEndpoint", 
    "DeleteDBClusterParameterGroup": "rds:DeleteDBClusterParameterGroup", 
    "DeleteDBClusterSnapshot": "rds:DeleteDBClusterSnapshot", 
    "DeleteDBInstance": "rds:DeleteDBInstance", 
    "DeleteDBInstanceAutomatedBackup": "rds:DeleteDBInstanceAutomatedBackup", 
    "DeleteDBParameterGroup": "rds:DeleteDBParameterGroup", 
    "DeleteDBSecurityGroup": "rds:DeleteDBSecurityGroup", 
    "DeleteDBSnapshot": "rds:DeleteDBSnapshot", 
    "DeleteDBSubnetGroup": "rds:DeleteDBSubnetGroup", 
    "DeleteEventSubscription": "rds:DeleteEventSubscription", 
    "DeleteGlobalCluster": "rds:DeleteGlobalCluster", 
    "DeleteOptionGroup": "rds:DeleteOptionGroup", 
    "DescribeAccountAttributes": "rds:DescribeAccountAttributes", 
    "DescribeCertificates": "rds:DescribeCertificates", 
    "DescribeDBClusterBacktracks": "rds:*", 
    "DescribeDBClusterEndpoints": "rds:DescribeDBClusterEndpoints", 
    "DescribeDBClusterParameterGroups": "rds:DescribeDBClusterParameterGroups", 
    "DescribeDBClusterParameters": "rds:DescribeDBClusterParameters", 
    "DescribeDBClusterSnapshotAttributes": "rds:DescribeDBClusterSnapshotAttributes", 
    "DescribeDBClusterSnapshots": "rds:DescribeDBClusterSnapshots", 
    "DescribeDBClusters": "rds:DescribeDBClusters", 
    "DescribeDBEngineVersions": "rds:DescribeDBEngineVersions", 
    "DescribeDBInstanceAutomatedBackups": "rds:DescribeDBInstanceAutomatedBackups", 
    "DescribeDBInstances": "rds:DescribeDBInstances", 
    "DescribeDBLogFiles": "rds:DescribeDBLogFiles", 
    "DescribeDBParameterGroups": "rds:DescribeDBParameterGroups", 
    "DescribeDBParameters": "rds:DescribeDBParameters", 
    "DescribeDBSecurityGroups": "rds:DescribeDBSecurityGroups", 
    "DescribeDBSnapshotAttributes": "rds:DescribeDBSnapshotAttributes", 
    "DescribeDBSnapshots": "rds:DescribeDBSnapshots", 
    "DescribeDBSubnetGroups": "rds:DescribeDBSubnetGroups", 
    "DescribeEngineDefaultClusterParameters": "rds:DescribeEngineDefaultClusterParameters", 
    "DescribeEngineDefaultParameters": "rds:DescribeEngineDefaultParameters", 
    "DescribeEventCategories": "rds:DescribeEventCategories", 
    "DescribeEventSubscriptions": "rds:DescribeEventSubscriptions", 
    "DescribeEvents": "rds:DescribeEvents", 
    "DescribeGlobalClusters": "rds:DescribeGlobalClusters", 
    "DescribeOptionGroupOptions": "rds:DescribeOptionGroupOptions", 
    "DescribeOptionGroups": "rds:DescribeOptionGroups", 
    "DescribeOrderableDBInstanceOptions": "rds:DescribeOrderableDBInstanceOptions", 
    "DescribePendingMaintenanceActions": "rds:DescribePendingMaintenanceActions", 
    "DescribeReservedDBInstances": "rds:DescribeReservedDBInstances", 
    "DescribeReservedDBInstancesOfferings": "rds:DescribeReservedDBInstancesOfferings", 
    "DescribeSourceRegions": "rds:*", 
    "DescribeValidDBInstanceModifications": "rds:*", 
    "DownloadCompleteDBLogFile": "rds:DownloadCompleteDBLogFile", 
    "DownloadDBLogFilePortion": "rds:DownloadDBLogFilePortion", 
    "FailoverDBCluster": "rds:FailoverDBCluster", 
    "ListTagsForResource": "rds:ListTagsForResource", 
    "ModifyCurrentDBClusterCapacity": "rds:*", 
    "ModifyDBCluster": "rds:ModifyDBCluster", 
    "ModifyDBClusterEndpoint": "rds:ModifyDBClusterEndpoint", 
    "ModifyDBClusterParameterGroup": "rds:ModifyDBClusterParameterGroup", 
    "ModifyDBClusterSnapshotAttribute": "rds:ModifyDBClusterSnapshotAttribute", 
    "ModifyDBInstance": "rds:ModifyDBInstance", 
    "ModifyDBParameterGroup": "rds:ModifyDBParameterGroup", 
    "ModifyDBSnapshot": "rds:*", 
    "ModifyDBSnapshotAttribute": "rds:ModifyDBSnapshotAttribute", 
    "ModifyDBSubnetGroup": "rds:ModifyDBSubnetGroup", 
    "ModifyEventSubscription": "rds:ModifyEventSubscription", 
    "ModifyGlobalCluster": "rds:ModifyGlobalCluster", 
    "ModifyOptionGroup": "rds:ModifyOptionGroup", 
    "PromoteReadReplica": "rds:PromoteReadReplica", 
    "PromoteReadReplicaDBCluster": "rds:*", 
    "PurchaseReservedDBInstancesOffering": "rds:PurchaseReservedDBInstancesOffering", 
    "RebootDBInstance": "rds:RebootDBInstance", 
    "RemoveFromGlobalCluster": "rds:RemoveFromGlobalCluster", 
    "RemoveRoleFromDBCluster": "rds:*", 
    "RemoveRoleFromDBInstance": "rds:RemoveRoleFromDBInstance", 
    "RemoveSourceIdentifierFromSubscription": "rds:RemoveSourceIdentifierFromSubscription", 
    "RemoveTagsFromResource": "rds:RemoveTagsFromResource", 
    "ResetDBClusterParameterGroup": "rds:ResetDBClusterParameterGroup", 
    "ResetDBParameterGroup": "rds:ResetDBParameterGroup", 
    "RestoreDBClusterFromS3": "rds:*", 
    "RestoreDBClusterFromSnapshot": "rds:RestoreDBClusterFromSnapshot", 
    "RestoreDBClusterToPointInTime": "rds:RestoreDBClusterToPointInTime", 
    "RestoreDBInstanceFromDBSnapshot": "rds:RestoreDBInstanceFromDBSnapshot", 
    "RestoreDBInstanceFromS3": "rds:*", 
    "RestoreDBInstanceToPointInTime": "rds:RestoreDBInstanceToPointInTime", 
    "RevokeDBSecurityGroupIngress": "rds:RevokeDBSecurityGroupIngress", 
    "StartDBCluster": "rds:StartDBCluster", 
    "StartDBInstance": "rds:StartDBInstance", 
    "StopDBCluster": "rds:StopDBCluster", 
    "StopDBInstance": "rds:StopDBInstance"
  }, 
  "redshift": {
    "AcceptReservedNodeExchange": "redshift:*", 
    "AuthorizeClusterSecurityGroupIngress": "redshift:AuthorizeClusterSecurityGroupIngress", 
    "AuthorizeSnapshotAccess": "redshift:AuthorizeSnapshotAccess", 
    "BatchDeleteClusterSnapshots": "redshift:BatchDeleteClusterSnapshots", 
    "BatchModifyClusterSnapshots": "redshift:BatchModifyClusterSnapshots", 
    "CancelQuery": "redshift:CancelQuery", 
    "CancelQuerySession": "redshift:CancelQuerySession", 
    "CancelResize": "redshift:CancelResize", 
    "CopyClusterSnapshot": "redshift:CopyClusterSnapshot", 
    "CreateCluster": "redshift:CreateCluster", 
    "CreateClusterParameterGroup": "redshift:CreateClusterParameterGroup", 
    "CreateClusterSecurityGroup": "redshift:CreateClusterSecurityGroup", 
    "CreateClusterSnapshot": "redshift:CreateClusterSnapshot", 
    "CreateClusterSubnetGroup": "redshift:CreateClusterSubnetGroup", 
    "CreateClusterUser": "redshift:CreateClusterUser", 
    "CreateEventSubscription": "redshift:CreateEventSubscription", 
    "CreateHsmClientCertificate": "redshift:CreateHsmClientCertificate", 
    "CreateHsmConfiguration": "redshift:CreateHsmConfiguration", 
    "CreateSavedQuery": "redshift:CreateSavedQuery", 
    "CreateSnapshotCopyGrant": "redshift:CreateSnapshotCopyGrant", 
    "CreateSnapshotSchedule": "redshift:CreateSnapshotSchedule", 
    "CreateTags": "redshift:CreateTags", 
    "DeleteCluster": "redshift:DeleteCluster", 
    "DeleteClusterParameterGroup": "redshift:DeleteClusterParameterGroup", 
    "DeleteClusterSecurityGroup": "redshift:DeleteClusterSecurityGroup", 
    "DeleteClusterSnapshot": "redshift:DeleteClusterSnapshot", 
    "DeleteClusterSubnetGroup": "redshift:DeleteClusterSubnetGroup", 
    "DeleteEventSubscription": "redshift:DeleteEventSubscription", 
    "DeleteHsmClientCertificate": "redshift:DeleteHsmClientCertificate", 
    "DeleteHsmConfiguration": "redshift:DeleteHsmConfiguration", 
    "DeleteSavedQueries": "redshift:DeleteSavedQueries", 
    "DeleteSnapshotCopyGrant": "redshift:DeleteSnapshotCopyGrant", 
    "DeleteSnapshotSchedule": "redshift:DeleteSnapshotSchedule", 
    "DeleteTags": "redshift:DeleteTags", 
    "DescribeAccountAttributes": "redshift:DescribeAccountAttributes", 
    "DescribeClusterDbRevisions": [
      "redshift:*", 
      "redshift:DescribeClusterDbRevisions"
    ], 
    "DescribeClusterParameterGroups": "redshift:DescribeClusterParameterGroups", 
    "DescribeClusterParameters": "redshift:DescribeClusterParameters", 
    "DescribeClusterSecurityGroups": "redshift:DescribeClusterSecurityGroups", 
    "DescribeClusterSnapshots": "redshift:DescribeClusterSnapshots", 
    "DescribeClusterSubnetGroups": "redshift:DescribeClusterSubnetGroups", 
    "DescribeClusterTracks": "redshift:*", 
    "DescribeClusterVersions": "redshift:DescribeClusterVersions", 
    "DescribeClusters": "redshift:DescribeClusters", 
    "DescribeDefaultClusterParameters": "redshift:DescribeDefaultClusterParameters", 
    "DescribeEventCategories": "redshift:DescribeEventCategories", 
    "DescribeEventSubscriptions": "redshift:DescribeEventSubscriptions", 
    "DescribeEvents": "redshift:DescribeEvents", 
    "DescribeHsmClientCertificates": "redshift:DescribeHsmClientCertificates", 
    "DescribeHsmConfigurations": "redshift:DescribeHsmConfigurations", 
    "DescribeLoggingStatus": "redshift:DescribeLoggingStatus", 
    "DescribeOrderableClusterOptions": "redshift:DescribeOrderableClusterOptions", 
    "DescribeQuery": "redshift:DescribeQuery", 
    "DescribeReservedNodeOfferings": "redshift:DescribeReservedNodeOfferings", 
    "DescribeReservedNodes": "redshift:DescribeReservedNodes", 
    "DescribeResize": "redshift:DescribeResize", 
    "DescribeSnapshotCopyGrants": "redshift:DescribeSnapshotCopyGrants", 
    "DescribeSnapshotSchedules": "redshift:DescribeSnapshotSchedules", 
    "DescribeStorage": "redshift:DescribeStorage", 
    "DescribeTable": "redshift:DescribeTableRestoreStatus", 
    "DescribeTableRestoreStatus": "redshift:DescribeTableRestoreStatus", 
    "DescribeTags": "redshift:DescribeTags", 
    "DisableLogging": "redshift:DisableLogging", 
    "DisableSnapshotCopy": "redshift:DisableSnapshotCopy", 
    "EnableLogging": "redshift:EnableLogging", 
    "EnableSnapshotCopy": "redshift:EnableSnapshotCopy", 
    "ExecuteQuery": "redshift:ExecuteQuery", 
    "FetchResults": "redshift:FetchResults", 
    "GetClusterCredentials": "redshift:GetClusterCredentials", 
    "GetReservedNodeExchangeOfferings": "redshift:*", 
    "JoinGroup": "redshift:JoinGroup", 
    "ListDatabases": "redshift:ListDatabases", 
    "ListSavedQueries": "redshift:ListSavedQueries", 
    "ListSchemas": "redshift:ListSchemas", 
    "ListTables": "redshift:ListTables", 
    "ModifyCluster": "redshift:ModifyCluster", 
    "ModifyClusterDbRevision": "redshift:*", 
    "ModifyClusterIamRoles": "redshift:ModifyClusterIamRoles", 
    "ModifyClusterMaintenance": ":ModifyClusterMaintenance", 
    "ModifyClusterParameterGroup": "redshift:ModifyClusterParameterGroup", 
    "ModifyClusterSnapshot": "redshift:ModifyClusterSnapshot", 
    "ModifyClusterSnapshotSchedule": "redshift:ModifyClusterSnapshotSchedule", 
    "ModifyClusterSubnetGroup": "redshift:ModifyClusterSubnetGroup", 
    "ModifyEventSubscription": "redshift:ModifyEventSubscription", 
    "ModifySavedQuery": "redshift:ModifySavedQuery", 
    "ModifySnapshotCopyRetentionPeriod": "redshift:ModifySnapshotCopyRetentionPeriod", 
    "ModifySnapshotSchedule": "redshift:ModifySnapshotSchedule", 
    "PurchaseReservedNodeOffering": "redshift:PurchaseReservedNodeOffering", 
    "RebootCluster": "redshift:RebootCluster", 
    "ResetClusterParameterGroup": "redshift:ResetClusterParameterGroup", 
    "ResizeCluster": "redshift:*", 
    "RestoreFromClusterSnapshot": "redshift:RestoreFromClusterSnapshot", 
    "RestoreTableFromClusterSnapshot": "redshift:RestoreTableFromClusterSnapshot", 
    "RevokeClusterSecurityGroupIngress": "redshift:RevokeClusterSecurityGroupIngress", 
    "RevokeSnapshotAccess": "redshift:RevokeSnapshotAccess", 
    "RotateEncryptionKey": "redshift:RotateEncryptionKey", 
    "ViewQueriesFromConsole": "redshift:ViewQueriesFromConsole", 
    "ViewQueriesInConsole": "redshift:ViewQueriesInConsole"
  }, 
  "rekognition": {
    "CompareFaces": "rekognition:CompareFaces", 
    "CreateCollection": "rekognition:CreateCollection", 
    "CreateStreamProcessor": "rekognition:CreateStreamProcessor", 
    "DeleteCollection": "rekognition:*", 
    "DeleteFaces": "rekognition:DeleteFaces", 
    "DeleteStreamProcessor": "rekognition:DeleteStreamProcessor", 
    "DescribeCollection": "rekognition:DescribeCollection", 
    "DescribeStreamProcessor": "rekognition:DescribeStreamProcessor", 
    "DetectFaces": "rekognition:DetectFaces", 
    "DetectLabels": "rekognition:DetectLabels", 
    "DetectModerationLabels": "rekognition:DetectModerationLabels", 
    "DetectText": "rekognition:DetectText", 
    "GetCelebrityInfo": "rekognition:GetCelebrityInfo", 
    "GetCelebrityRecognition": "rekognition:GetCelebrityRecognition", 
    "GetContentModeration": "rekognition:GetContentModeration", 
    "GetFaceDetection": "rekognition:GetFaceDetection", 
    "GetFaceSearch": "rekognition:GetFaceSearch", 
    "GetLabelDetection": "rekognition:GetLabelDetection", 
    "GetPersonTracking": "rekognition:GetPersonTracking", 
    "IndexFaces": "rekognition:IndexFaces", 
    "ListCollections": "rekognition:ListCollections", 
    "ListFaces": "rekognition:ListFaces", 
    "ListStreamProcessors": "rekognition:ListStreamProcessors", 
    "RecognizeCelebrities": "rekognition:RecognizeCelebrities", 
    "SearchFaces": "rekognition:SearchFaces", 
    "SearchFacesByImage": "rekognition:SearchFacesByImage", 
    "StartCelebrityRecognition": "rekognition:StartCelebrityRecognition", 
    "StartContentModeration": "rekognition:StartContentModeration", 
    "StartFaceDetection": "rekognition:StartFaceDetection", 
    "StartFaceSearch": "rekognition:StartFaceSearch", 
    "StartLabelDetection": "rekognition:StartLabelDetection", 
    "StartPersonTracking": "rekognition:StartPersonTracking", 
    "StartStreamProcessor": "rekognition:StartStreamProcessor", 
    "StopStreamProcessor": "rekognition:StopStreamProcessor"
  }, 
  "resource-groups": {
    "CreateGroup": "resource-groups:CreateGroup", 
    "DeleteGroup": "resource-groups:DeleteGroup", 
    "GetGroup": "resource-groups:GetGroup", 
    "GetGroupQuery": "resource-groups:GetGroupQuery", 
    "GetTags": "resource-groups:GetTags", 
    "ListGroupResources": "resource-groups:ListGroupResources", 
    "ListGroups": "resource-groups:ListGroups", 
    "SearchResources": "resource-groups:SearchResources", 
    "Tag": "resource-groups:Tag", 
    "Untag": "resource-groups:Untag", 
    "UpdateGroup": "resource-groups:UpdateGroup", 
    "UpdateGroupQuery": "resource-groups:UpdateGroupQuery"
  }, 
  "resourcegroupstaggingapi": {
    "GetResources": "tag:GetResources", 
    "GetTagKeys": "tag:GetTagKeys", 
    "GetTagValues": "tag:GetTagValues", 
    "TagResources": "tag:TagResources", 
    "UntagResources": "tag:UntagResources"
  }, 
  "route53": {
    "AssociateVPCWithHostedZone": "route53:AssociateVPCWithHostedZone", 
    "ChangeResourceRecordSets": "route53:ChangeResourceRecordSets", 
    "ChangeTagsForResource": "route53:ChangeTagsForResource", 
    "CreateHealthCheck": "route53:CreateHealthCheck", 
    "CreateHostedZone": "route53:CreateHostedZone", 
    "CreateQueryLoggingConfig": "route53:CreateQueryLoggingConfig", 
    "CreateReusableDelegationSet": "route53:CreateReusableDelegationSet", 
    "CreateTrafficPolicy": "route53:CreateTrafficPolicy", 
    "CreateTrafficPolicyInstance": "route53:CreateTrafficPolicyInstance", 
    "CreateTrafficPolicyVersion": "route53:CreateTrafficPolicyVersion", 
    "CreateVPCAssociationAuthorization": "route53:CreateVPCAssociationAuthorization", 
    "DeleteHealthCheck": "route53:DeleteHealthCheck", 
    "DeleteHostedZone": "route53:DeleteHostedZone", 
    "DeleteQueryLoggingConfig": "route53:DeleteQueryLoggingConfig", 
    "DeleteReusableDelegationSet": "route53:DeleteReusableDelegationSet", 
    "DeleteTrafficPolicy": "route53:DeleteTrafficPolicy", 
    "DeleteTrafficPolicyInstance": "route53:DeleteTrafficPolicyInstance", 
    "DeleteVPCAssociationAuthorization": "route53:DeleteVPCAssociationAuthorization", 
    "DisassociateVPCFromHostedZone": "route53:DisassociateVPCFromHostedZone", 
    "GetAccountLimit": "route53:GetAccountLimit", 
    "GetChange": "route53:GetChange", 
    "GetCheckerIpRanges": "route53:GetCheckerIpRanges", 
    "GetGeoLocation": "route53:GetGeoLocation", 
    "GetHealthCheck": "route53:GetHealthCheck", 
    "GetHealthCheckCount": "route53:GetHealthCheckCount", 
    "GetHealthCheckLastFailureReason": "route53:GetHealthCheckLastFailureReason", 
    "GetHealthCheckStatus": "route53:GetHealthCheckStatus", 
    "GetHostedZone": "route53:GetHostedZone", 
    "GetHostedZoneCount": "route53:GetHostedZoneCount", 
    "GetHostedZoneLimit": "route53:GetHostedZoneLimit", 
    "GetQueryLoggingConfig": "route53:GetQueryLoggingConfig", 
    "GetReusableDelegationSet": "route53:GetReusableDelegationSet", 
    "GetReusableDelegationSetLimit": "route53:GetReusableDelegationSetLimit", 
    "GetTrafficPolicy": "route53:GetTrafficPolicy", 
    "GetTrafficPolicyInstance": "route53:GetTrafficPolicyInstance", 
    "GetTrafficPolicyInstanceCount": "route53:GetTrafficPolicyInstanceCount", 
    "ListGeoLocations": "route53:ListGeoLocations", 
    "ListHealthChecks": "route53:ListHealthChecks", 
    "ListHostedZones": "route53:ListHostedZones", 
    "ListHostedZonesByName": "route53:ListHostedZonesByName", 
    "ListQueryLoggingConfigs": "route53:ListQueryLoggingConfigs", 
    "ListResourceRecordSets": "route53:ListResourceRecordSets", 
    "ListReusableDelegationSets": "route53:ListReusableDelegationSets", 
    "ListTagsForResource": "route53:ListTagsForResource", 
    "ListTagsForResources": "route53:ListTagsForResources", 
    "ListTrafficPolicies": "route53:ListTrafficPolicies", 
    "ListTrafficPolicyInstances": "route53:ListTrafficPolicyInstances", 
    "ListTrafficPolicyInstancesByHostedZone": "route53:ListTrafficPolicyInstancesByHostedZone", 
    "ListTrafficPolicyInstancesByPolicy": "route53:ListTrafficPolicyInstancesByPolicy", 
    "ListTrafficPolicyVersions": "route53:ListTrafficPolicyVersions", 
    "ListVPCAssociationAuthorizations": "route53:ListVPCAssociationAuthorizations", 
    "TestDNSAnswer": "route53:TestDNSAnswer", 
    "UpdateHealthCheck": "route53:UpdateHealthCheck", 
    "UpdateHostedZoneComment": "route53:UpdateHostedZoneComment", 
    "UpdateTrafficPolicyComment": "route53:UpdateTrafficPolicyComment", 
    "UpdateTrafficPolicyInstance": "route53:UpdateTrafficPolicyInstance"
  }, 
  "route53domains": {
    "CheckDomainAvailability": "route53domains:CheckDomainAvailability", 
    "CheckDomainTransferability": "route53domains:*", 
    "DeleteTagsForDomain": "route53domains:DeleteTagsForDomain", 
    "DisableDomainAutoRenew": "route53domains:DisableDomainAutoRenew", 
    "DisableDomainTransferLock": "route53domains:DisableDomainTransferLock", 
    "EnableDomainAutoRenew": "route53domains:EnableDomainAutoRenew", 
    "EnableDomainTransferLock": "route53domains:EnableDomainTransferLock", 
    "GetContactReachabilityStatus": "route53domains:GetContactReachabilityStatus", 
    "GetDomainDetail": "route53domains:GetDomainDetail", 
    "GetDomainSuggestions": "route53domains:GetDomainSuggestions", 
    "GetOperationDetail": "route53domains:GetOperationDetail", 
    "ListDomains": "route53domains:ListDomains", 
    "ListOperations": "route53domains:ListOperations", 
    "ListTagsForDomain": "route53domains:ListTagsForDomain", 
    "RegisterDomain": "route53domains:RegisterDomain", 
    "RenewDomain": "route53domains:RenewDomain", 
    "ResendContactReachabilityEmail": "route53domains:ResendContactReachabilityEmail", 
    "RetrieveDomainAuthCode": "route53domains:RetrieveDomainAuthCode", 
    "TransferDomain": "route53domains:TransferDomain", 
    "UpdateDomainContact": "route53domains:UpdateDomainContact", 
    "UpdateDomainContactPrivacy": "route53domains:UpdateDomainContactPrivacy", 
    "UpdateDomainNameservers": "route53domains:UpdateDomainNameservers", 
    "UpdateTagsForDomain": "route53domains:UpdateTagsForDomain", 
    "ViewBilling": "route53domains:ViewBilling"
  }, 
  "s3": {
    "AbortMultipartUpload": "s3:AbortMultipartUpload", 
    "CompleteMultipartUpload": "s3:PutObject", 
    "CopyObject": [
      "s3:GetObject", 
      "s3:PutObject"
    ], 
    "CopyPart": [
      "s3:GetObject", 
      "s3:PutObject"
    ], 
    "CreateBucket": "s3:CreateBucket", 
    "CreateJob": "s3:CreateJob", 
    "CreateMultipartUpload": "s3:PutObject", 
    "DeleteBucket": "s3:DeleteBucket", 
    "DeleteBucketAnalyticsConfiguration": "s3:PutAnalyticsConfiguration", 
    "DeleteBucketCors": "s3:PutBucketCORS", 
    "DeleteBucketCrossOriginConfiguration": "s3:PutBucketCORS", 
    "DeleteBucketEncryption": "s3:PutEncryptionConfiguration", 
    "DeleteBucketInventoryConfiguration": "s3:PutInventoryConfiguration", 
    "DeleteBucketLifecycle": "s3:PutLifecycleConfiguration", 
    "DeleteBucketLifecycleConfiguration": "s3:PutLifecycleConfiguration", 
    "DeleteBucketMetricsConfiguration": "s3:PutMetricsConfiguration", 
    "DeleteBucketPolicy": "s3:DeleteBucketPolicy", 
    "DeleteBucketReplication": "s3:PutReplicationConfiguration", 
    "DeleteBucketReplicationConfiguration": "s3:PutReplicationConfiguration", 
    "DeleteBucketTagging": "s3:PutBucketTagging", 
    "DeleteBucketTaggingConfiguration": "s3:PutBucketTagging", 
    "DeleteBucketWebsite": "s3:DeleteBucketWebsite", 
    "DeleteBucketWebsiteConfiguration": "s3:DeleteBucketWebsite", 
    "DeleteObject": "s3:DeleteObject", 
    "DeleteObjectTagging": "s3:DeleteObjectTagging", 
    "DeleteObjectVersion": "s3:DeleteObjectVersion", 
    "DeleteObjectVersionTagging": "s3:DeleteObjectVersionTagging", 
    "DeleteObjects": [
      "s3:DeleteObject", 
      "s3:DeleteObjectVersion", 
      "s3:PutLifecycleConfiguration"
    ], 
    "DeleteVersion": "s3:DeleteObjectVersion", 
    "DescribeJob": "s3:DescribeJob", 
    "GetAccelerateConfiguration": "s3:GetAccelerateConfiguration", 
    "GetAccountPublicAccessBlock": "s3:GetAccountPublicAccessBlock", 
    "GetAnalyticsConfiguration": "s3:GetAnalyticsConfiguration", 
    "GetBucketAccelerateConfiguration": "s3:GetAccelerateConfiguration", 
    "GetBucketAcl": "s3:GetBucketAcl", 
    "GetBucketAnalyticsConfiguration": "s3:GetAnalyticsConfiguration", 
    "GetBucketCORS": "s3:GetBucketCORS", 
    "GetBucketCors": "s3:GetBucketCORS", 
    "GetBucketCrossOriginConfiguration": "s3:GetBucketCORS", 
    "GetBucketEncryption": "s3:GetEncryptionConfiguration", 
    "GetBucketInventoryConfiguration": "s3:GetInventoryConfiguration", 
    "GetBucketLifecycle": "s3:GetLifecycleConfiguration", 
    "GetBucketLifecycleConfiguration": "s3:GetLifecycleConfiguration", 
    "GetBucketLocation": "s3:GetBucketLocation", 
    "GetBucketLogging": "s3:GetBucketLogging", 
    "GetBucketLoggingConfiguration": "s3:GetBucketLogging", 
    "GetBucketMetricsConfiguration": "s3:GetMetricsConfiguration", 
    "GetBucketNotification": "s3:GetBucketNotification", 
    "GetBucketNotificationConfiguration": "s3:GetBucketNotification", 
    "GetBucketObjectLockConfiguration": "s3:GetBucketObjectLockConfiguration", 
    "GetBucketPolicy": "s3:GetBucketPolicy", 
    "GetBucketPolicyStatus": "s3:GetBucketPolicyStatus", 
    "GetBucketPublicAccessBlock": "s3:GetBucketPublicAccessBlock", 
    "GetBucketReplication": "s3:GetReplicationConfiguration", 
    "GetBucketReplicationConfiguration": "s3:GetReplicationConfiguration", 
    "GetBucketRequestPayment": "s3:GetBucketRequestPayment", 
    "GetBucketTagging": "s3:GetBucketTagging", 
    "GetBucketTaggingConfiguration": "s3:GetBucketTagging", 
    "GetBucketVersioning": "s3:GetBucketVersioning", 
    "GetBucketVersioningConfiguration": "s3:GetBucketVersioning", 
    "GetBucketWebsite": "s3:GetBucketWebsite", 
    "GetBucketWebsiteConfiguration": "s3:GetBucketWebsite", 
    "GetEncryptionConfiguration": "s3:GetEncryptionConfiguration", 
    "GetInventoryConfiguration": "s3:GetInventoryConfiguration", 
    "GetLifecycleConfiguration": "s3:GetLifecycleConfiguration", 
    "GetMetricsConfiguration": "s3:GetMetricsConfiguration", 
    "GetObject": [
      "s3:GetObject", 
      "s3:GetObjectVersion"
    ], 
    "GetObjectAcl": "s3:GetObjectAcl", 
    "GetObjectLegalHold": "s3:GetObjectLegalHold", 
    "GetObjectMetadata": "s3:GetObject", 
    "GetObjectRetention": "s3:GetObjectRetention", 
    "GetObjectTagging": "s3:GetObjectTagging", 
    "GetObjectTorrent": "s3:GetObjectTorrent", 
    "GetObjectVersion": "s3:GetObjectVersion", 
    "GetObjectVersionAcl": "s3:GetObjectVersionAcl", 
    "GetObjectVersionForReplication": "s3:GetObjectVersionForReplication", 
    "GetObjectVersionTagging": "s3:GetObjectVersionTagging", 
    "GetObjectVersionTorrent": "s3:GetObjectVersionTorrent", 
    "GetReplicationConfiguration": "s3:GetReplicationConfiguration", 
    "GetS3AccountOwner": "s3:ListAllMyBuckets", 
    "HeadBucket": "s3:ListBucket", 
    "HeadObject": "s3:GetObject", 
    "InitiateMultipartUpload": "s3:PutObject", 
    "ListAllMyBuckets": "s3:ListAllMyBuckets", 
    "ListBucket": "s3:ListBucket", 
    "ListBucketAnalyticsConfigurations": "s3:GetAnalyticsConfiguration", 
    "ListBucketByTags": "s3:ListBucketByTags", 
    "ListBucketInventoryConfigurations": "s3:GetInventoryConfiguration", 
    "ListBucketMetricsConfigurations": "s3:GetMetricsConfiguration", 
    "ListBucketMultipartUploads": "s3:ListBucketMultipartUploads", 
    "ListBucketVersions": "s3:ListBucketVersions", 
    "ListBuckets": "s3:ListAllMyBuckets", 
    "ListJobs": "s3:ListJobs", 
    "ListMultipartUploadParts": "s3:ListMultipartUploadParts", 
    "ListMultipartUploads": "s3:ListBucketMultipartUploads", 
    "ListNextBatchOfObjects": "s3:ListBucket", 
    "ListNextBatchOfVersions": "s3:ListBucketVersions", 
    "ListObjectVersions": "s3:ListBucketVersions", 
    "ListObjects": "s3:ListBucket", 
    "ListObjectsV2": "s3:ListBucket", 
    "ListParts": "s3:ListMultipartUploadParts", 
    "ListVersions": "s3:ListBucketVersions", 
    "ObjectOwnerOverrideToBucketOwner": "s3:ObjectOwnerOverrideToBucketOwner", 
    "PutAccelerateConfiguration": "s3:PutAccelerateConfiguration", 
    "PutAccountPublicAccessBlock": "s3:PutAccountPublicAccessBlock", 
    "PutAnalyticsConfiguration": "s3:PutAnalyticsConfiguration", 
    "PutBucket": "s3:CreateBucket", 
    "PutBucketAccelerateConfiguration": "s3:PutAccelerateConfiguration", 
    "PutBucketAcl": "s3:PutBucketAcl", 
    "PutBucketAnalyticsConfiguration": "s3:PutAnalyticsConfiguration", 
    "PutBucketCORS": "s3:PutBucketCORS", 
    "PutBucketCors": "s3:PutBucketCORS", 
    "PutBucketEncryption": "s3:PutEncryptionConfiguration", 
    "PutBucketInventoryConfiguration": "s3:PutInventoryConfiguration", 
    "PutBucketLifecycle": "s3:PutLifecycleConfiguration", 
    "PutBucketLifecycleConfiguration": "s3:PutLifecycleConfiguration", 
    "PutBucketLogging": "s3:PutBucketLogging", 
    "PutBucketMetricsConfiguration": "s3:PutMetricsConfiguration", 
    "PutBucketNotification": "s3:PutBucketNotification", 
    "PutBucketNotificationConfiguration": "s3:PutBucketNotification", 
    "PutBucketObjectLockConfiguration": "s3:PutBucketObjectLockConfiguration", 
    "PutBucketPolicy": "s3:PutBucketPolicy", 
    "PutBucketPublicAccessBlock": "s3:PutBucketPublicAccessBlock", 
    "PutBucketReplication": "s3:PutReplicationConfiguration", 
    "PutBucketRequestPayment": "s3:PutBucketRequestPayment", 
    "PutBucketTagging": "s3:PutBucketTagging", 
    "PutBucketVersioning": "s3:PutBucketVersioning", 
    "PutBucketWebsite": "s3:PutBucketWebsite", 
    "PutEncryptionConfiguration": "s3:PutEncryptionConfiguration", 
    "PutInventoryConfiguration": "s3:PutInventoryConfiguration", 
    "PutLifecycleConfiguration": "s3:PutLifecycleConfiguration", 
    "PutMetricsConfiguration": "s3:PutMetricsConfiguration", 
    "PutObject": "s3:PutObject", 
    "PutObjectAcl": "s3:PutObjectAcl", 
    "PutObjectLegalHold": "s3:PutObjectLegalHold", 
    "PutObjectRetention": "s3:PutObjectRetention", 
    "PutObjectTagging": "s3:PutObjectTagging", 
    "PutObjectVersionAcl": "s3:PutObjectVersionAcl", 
    "PutObjectVersionTagging": "s3:PutObjectVersionTagging", 
    "PutReplicationConfiguration": "s3:PutReplicationConfiguration", 
    "ReplicateDelete": "s3:ReplicateDelete", 
    "ReplicateObject": "s3:ReplicateObject", 
    "ReplicateTags": "s3:ReplicateTags", 
    "RestoreObject": "s3:RestoreObject", 
    "RestoreObjectV2": "s3:RestoreObject", 
    "SelectObjectContent": "s3:GetObject", 
    "SetBucketAccelerateConfiguration": "s3:PutAccelerateConfiguration", 
    "SetBucketAcl": "s3:PutBucketAcl", 
    "SetBucketAnalyticsConfiguration": "s3:PutAnalyticsConfiguration", 
    "SetBucketCrossOriginConfiguration": "s3:PutBucketCORS", 
    "SetBucketEncryption": "s3:PutEncryptionConfiguration", 
    "SetBucketInventoryConfiguration": "s3:PutInventoryConfiguration", 
    "SetBucketLifecycle": "s3:PutLifecycleConfiguration", 
    "SetBucketLifecycleConfiguration": "s3:PutLifecycleConfiguration", 
    "SetBucketLoggingConfiguration": "s3:PutBucketLogging", 
    "SetBucketMetricsConfiguration": "s3:PutMetricsConfiguration", 
    "SetBucketNotificationConfiguration": "s3:PutBucketNotification", 
    "SetBucketPolicy": "s3:PutBucketPolicy", 
    "SetBucketReplicationConfiguration": "s3:PutReplicationConfiguration", 
    "SetBucketTaggingConfiguration": "s3:PutBucketTagging", 
    "SetBucketVersioningConfiguration": "s3:PutBucketVersioning", 
    "SetBucketWebsiteConfiguration": "s3:PutBucketWebsite", 
    "SetObjectAcl": "s3:PutObjectAcl", 
    "SetObjectTagging": "s3:PutObjectTagging", 
    "UpdateJobPriority": "s3:UpdateJobPriority", 
    "UpdateJobStatus": "s3:UpdateJobStatus", 
    "UploadPart": "s3:PutObject", 
    "UploadPartCopy": "s3:*",
    "Upload": "s3:PutObject"
  }, 
  "s3-transfer-manager": {
    "Copy": [
      "s3:GetObject", 
      "s3:PutObject"
    ], 
    "Download": "s3:GetObject", 
    "Upload": "s3:PutObject"
  }, 
  "sagemaker": {
    "AddTags": "sagemaker:AddTags", 
    "CreateAlgorithm": "sagemaker:CreateAlgorithm", 
    "CreateCodeRepository": "sagemaker:CreateCodeRepository", 
    "CreateCompilationJob": "sagemaker:CreateCompilationJob", 
    "CreateEndpoint": "sagemaker:CreateEndpoint", 
    "CreateEndpointConfig": "sagemaker:CreateEndpointConfig", 
    "CreateHyperParameterTuningJob": "sagemaker:*", 
    "CreateLabelingJob": "sagemaker:CreateLabelingJob", 
    "CreateModel": "sagemaker:CreateModel", 
    "CreateModelPackage": "sagemaker:CreateModelPackage", 
    "CreateNotebookInstance": "sagemaker:CreateNotebookInstance", 
    "CreateNotebookInstanceLifecycleConfig": "sagemaker:*", 
    "CreatePresignedNotebookInstanceUrl": "sagemaker:CreatePresignedNotebookInstanceUrl", 
    "CreateTrainingJob": "sagemaker:CreateTrainingJob", 
    "CreateTransformJob": "sagemaker:*", 
    "CreateWorkteam": "sagemaker:CreateWorkteam", 
    "DeleteAlgorithm": "sagemaker:DeleteAlgorithm", 
    "DeleteCodeRepository": "sagemaker:DeleteCodeRepository", 
    "DeleteEndpoint": "sagemaker:DeleteEndpoint", 
    "DeleteEndpointConfig": "sagemaker:DeleteEndpointConfig", 
    "DeleteModel": "sagemaker:DeleteModel", 
    "DeleteModelPackage": "sagemaker:DeleteModelPackage", 
    "DeleteNotebookInstance": "sagemaker:DeleteNotebookInstance", 
    "DeleteNotebookInstanceLifecycleConfig": "sagemaker:*", 
    "DeleteTags": "sagemaker:DeleteTags", 
    "DeleteWorkteam": "sagemaker:DeleteWorkteam", 
    "DescribeAlgorithm": "sagemaker:DescribeAlgorithm", 
    "DescribeCodeRepository": "sagemaker:DescribeCodeRepository", 
    "DescribeCompilationJob": "sagemaker:DescribeCompilationJob", 
    "DescribeEndpoint": "sagemaker:DescribeEndpoint", 
    "DescribeEndpointConfig": "sagemaker:DescribeEndpointConfig", 
    "DescribeHyperParameterTuningJob": "sagemaker:DescribeHyperParameterTuningJob", 
    "DescribeLabelingJob": "sagemaker:DescribeLabelingJob", 
    "DescribeModel": "sagemaker:DescribeModel", 
    "DescribeModelPackage": "sagemaker:DescribeModelPackage", 
    "DescribeNotebookInstance": "sagemaker:DescribeNotebookInstance", 
    "DescribeNotebookInstanceLifecycleConfig": "sagemaker:DescribeNotebookInstanceLifecycleConfig", 
    "DescribeSubscribedWorkteam": "sagemaker:DescribeSubscribedWorkteam", 
    "DescribeTrainingJob": "sagemaker:DescribeTrainingJob", 
    "DescribeTransformJob": "sagemaker:*", 
    "DescribeWorkteam": "sagemaker:DescribeWorkteam", 
    "GetSearchSuggestions": "sagemaker:GetSearchSuggestions", 
    "ListAlgorithms": "sagemaker:ListAlgorithms", 
    "ListCodeRepositories": "sagemaker:ListCodeRepositories", 
    "ListCompilationJobs": "sagemaker:ListCompilationJobs", 
    "ListEndpointConfigs": "sagemaker:ListEndpointConfigs", 
    "ListEndpoints": "sagemaker:ListEndpoints", 
    "ListHyperParameterTuningJobs": "sagemaker:*", 
    "ListLabelingJobs": "sagemaker:ListLabelingJobs", 
    "ListLabelingJobsForWorkteam": "sagemaker:ListLabelingJobsForWorkteam", 
    "ListModelPackages": "sagemaker:ListModelPackages", 
    "ListModels": "sagemaker:ListModels", 
    "ListNotebookInstanceLifecycleConfigs": "sagemaker:*", 
    "ListNotebookInstances": "sagemaker:ListNotebookInstances", 
    "ListSubscribedWorkteams": "sagemaker:ListSubscribedWorkteams", 
    "ListTags": "sagemaker:ListTags", 
    "ListTrainingJobs": "sagemaker:*", 
    "ListTrainingJobsForHyperParameterTuningJob": "sagemaker:*", 
    "ListTransformJobs": "sagemaker:ListTransformJobs", 
    "ListWorkteams": "sagemaker:ListWorkteams", 
    "RenderUiTemplate": "sagemaker:RenderUiTemplate", 
    "Search": "sagemaker:Search", 
    "StartNotebookInstance": "sagemaker:StartNotebookInstance", 
    "StopCompilationJob": "sagemaker:StopCompilationJob", 
    "StopHyperParameterTuningJob": "sagemaker:*", 
    "StopLabelingJob": "sagemaker:StopLabelingJob", 
    "StopNotebookInstance": "sagemaker:StopNotebookInstance", 
    "StopTrainingJob": "sagemaker:StopTrainingJob", 
    "StopTransformJob": "sagemaker:*", 
    "UpdateCodeRepository": "sagemaker:UpdateCodeRepository", 
    "UpdateEndpoint": "sagemaker:UpdateEndpoint", 
    "UpdateEndpointWeightsAndCapacities": "sagemaker:UpdateEndpointWeightsAndCapacities", 
    "UpdateNotebookInstance": "sagemaker:*", 
    "UpdateNotebookInstanceLifecycleConfig": "sagemaker:UpdateNotebookInstanceLifecycleConfig", 
    "UpdateWorkteam": "sagemaker:UpdateWorkteam"
  }, 
  "sagemaker-runtime": {
    "InvokeEndpoint": "sagemaker:InvokeEndpoint"
  }, 
  "sdb": {
    "BatchDeleteAttributes": "sdb:BatchDeleteAttributes", 
    "BatchPutAttributes": "sdb:BatchPutAttributes", 
    "CreateDomain": "sdb:CreateDomain", 
    "DeleteAttributes": "sdb:DeleteAttributes", 
    "DeleteDomain": "sdb:DeleteDomain", 
    "DomainMetadata": "sdb:DomainMetadata", 
    "GetAttributes": "sdb:GetAttributes", 
    "ListDomains": "sdb:ListDomains", 
    "PutAttributes": "sdb:PutAttributes", 
    "Select": "sdb:Select"
  }, 
  "secretsmanager": {
    "CancelRotateSecret": "secretsmanager:CancelRotateSecret", 
    "CreateSecret": "secretsmanager:CreateSecret", 
    "DeleteResourcePolicy": "secretsmanager:*", 
    "DeleteSecret": "secretsmanager:DeleteSecret", 
    "DescribeSecret": "secretsmanager:DescribeSecret", 
    "GetRandomPassword": "secretsmanager:GetRandomPassword", 
    "GetResourcePolicy": "secretsmanager:*", 
    "GetSecretValue": "secretsmanager:GetSecretValue", 
    "ListSecretVersionIds": "secretsmanager:ListSecretVersionIds", 
    "ListSecrets": "secretsmanager:ListSecrets", 
    "PutResourcePolicy": "secretsmanager:*", 
    "PutSecretValue": "secretsmanager:PutSecretValue", 
    "RestoreSecret": "secretsmanager:RestoreSecret", 
    "RotateSecret": "secretsmanager:RotateSecret", 
    "TagResource": "secretsmanager:TagResource", 
    "UntagResource": "secretsmanager:UntagResource", 
    "UpdateSecret": "secretsmanager:UpdateSecret", 
    "UpdateSecretVersionStage": "secretsmanager:UpdateSecretVersionStage"
  }, 
  "serverlessrepo": {
    "CreateApplication": "serverlessrepo:CreateApplication", 
    "CreateApplicationVersion": "serverlessrepo:CreateApplicationVersion", 
    "CreateCloudFormationChangeSet": "serverlessrepo:CreateCloudFormationChangeSet", 
    "CreateCloudFormationTemplate": "serverlessrepo:CreateCloudFormationTemplate", 
    "DeleteApplication": "serverlessrepo:DeleteApplication", 
    "GetApplication": "serverlessrepo:GetApplication", 
    "GetApplicationPolicy": "serverlessrepo:GetApplicationPolicy", 
    "GetCloudFormationTemplate": "serverlessrepo:GetCloudFormationTemplate", 
    "ListApplicationDependencies": "serverlessrepo:ListApplicationDependencies", 
    "ListApplicationVersions": "serverlessrepo:ListApplicationVersions", 
    "ListApplications": "serverlessrepo:ListApplications", 
    "PutApplicationPolicy": "serverlessrepo:PutApplicationPolicy", 
    "SearchApplications": "serverlessrepo:SearchApplications", 
    "UpdateApplication": "serverlessrepo:UpdateApplication"
  }, 
  "servicecatalog": {
    "AcceptPortfolioShare": "servicecatalog:AcceptPortfolioShare", 
    "AssociatePrincipalWithPortfolio": "servicecatalog:AssociatePrincipalWithPortfolio", 
    "AssociateProductWithPortfolio": "servicecatalog:AssociateProductWithPortfolio", 
    "AssociateServiceActionWithProvisioningArtifact": "servicecatalog:AssociateServiceActionWithProvisioningArtifact", 
    "AssociateTagOptionWithResource": "servicecatalog:*", 
    "BatchAssociateServiceActionWithProvisioningArtifact": "servicecatalog:BatchAssociateServiceActionWithProvisioningArtifact", 
    "BatchDisassociateServiceActionFromProvisioningArtifact": "servicecatalog:BatchDisassociateServiceActionFromProvisioningArtifact", 
    "CopyProduct": "servicecatalog:*", 
    "CreateConstraint": "servicecatalog:CreateConstraint", 
    "CreatePortfolio": "servicecatalog:CreatePortfolio", 
    "CreatePortfolioShare": "servicecatalog:CreatePortfolioShare", 
    "CreateProduct": "servicecatalog:CreateProduct", 
    "CreateProvisionedProductPlan": "servicecatalog:*", 
    "CreateProvisioningArtifact": "servicecatalog:CreateProvisioningArtifact", 
    "CreateServiceAction": "servicecatalog:CreateServiceAction", 
    "CreateTagOption": "servicecatalog:*", 
    "DeleteConstraint": "servicecatalog:DeleteConstraint", 
    "DeletePortfolio": "servicecatalog:DeletePortfolio", 
    "DeletePortfolioShare": "servicecatalog:DeletePortfolioShare", 
    "DeleteProduct": "servicecatalog:DeleteProduct", 
    "DeleteProvisionedProductPlan": "servicecatalog:*", 
    "DeleteProvisioningArtifact": "servicecatalog:DeleteProvisioningArtifact", 
    "DeleteServiceAction": "servicecatalog:DeleteServiceAction", 
    "DeleteTagOption": "servicecatalog:*", 
    "DescribeConstraint": "servicecatalog:DescribeConstraint", 
    "DescribeCopyProductStatus": "servicecatalog:*", 
    "DescribePortfolio": "servicecatalog:DescribePortfolio", 
    "DescribePortfolioShareStatus": "servicecatalog:DescribePortfolioShareStatus", 
    "DescribeProduct": "servicecatalog:DescribeProduct", 
    "DescribeProductAsAdmin": "servicecatalog:DescribeProductAsAdmin", 
    "DescribeProductView": "servicecatalog:DescribeProductView", 
    "DescribeProvisionedProduct": "servicecatalog:*", 
    "DescribeProvisionedProductPlan": "servicecatalog:*", 
    "DescribeProvisioningArtifact": "servicecatalog:DescribeProvisioningArtifact", 
    "DescribeProvisioningParameters": "servicecatalog:DescribeProvisioningParameters", 
    "DescribeRecord": "servicecatalog:DescribeRecord", 
    "DescribeServiceAction": "servicecatalog:DescribeServiceAction", 
    "DescribeTagOption": "servicecatalog:DescribeTagOption", 
    "DisableAWSOrganizationsAccess": "servicecatalog:DisableAWSOrganizationsAccess", 
    "DisassociatePrincipalFromPortfolio": "servicecatalog:DisassociatePrincipalFromPortfolio", 
    "DisassociateProductFromPortfolio": "servicecatalog:DisassociateProductFromPortfolio", 
    "DisassociateServiceActionFromProvisioningArtifact": "servicecatalog:DisassociateServiceActionFromProvisioningArtifact", 
    "DisassociateTagOptionFromResource": "servicecatalog:DisassociateTagOptionFromResource", 
    "EnableAWSOrganizationsAccess": "servicecatalog:EnableAWSOrganizationsAccess", 
    "ExecuteProvisionedProductPlan": "servicecatalog:ExecuteProvisionedProductPlan", 
    "ExecuteProvisionedProductServiceAction": "servicecatalog:ExecuteProvisionedProductServiceAction", 
    "GetAWSOrganizationsAccessStatus": "servicecatalog:GetAWSOrganizationsAccessStatus", 
    "ListAcceptedPortfolioShares": "servicecatalog:ListAcceptedPortfolioShares", 
    "ListConstraintsForPortfolio": "servicecatalog:ListConstraintsForPortfolio", 
    "ListLaunchPaths": "servicecatalog:ListLaunchPaths", 
    "ListOrganizationPortfolioAccess": "servicecatalog:ListOrganizationPortfolioAccess", 
    "ListPortfolioAccess": "servicecatalog:ListPortfolioAccess", 
    "ListPortfolios": "servicecatalog:ListPortfolios", 
    "ListPortfoliosForProduct": "servicecatalog:ListPortfoliosForProduct", 
    "ListPrincipalsForPortfolio": "servicecatalog:ListPrincipalsForPortfolio", 
    "ListProvisionedProductPlans": "servicecatalog:*", 
    "ListProvisioningArtifacts": "servicecatalog:ListProvisioningArtifacts", 
    "ListProvisioningArtifactsForServiceAction": "servicecatalog:ListProvisioningArtifactsForServiceAction", 
    "ListRecordHistory": "servicecatalog:ListRecordHistory", 
    "ListResourcesForTagOption": "servicecatalog:*", 
    "ListServiceActions": "servicecatalog:ListServiceActions", 
    "ListServiceActionsForProvisioningArtifact": "servicecatalog:ListServiceActionsForProvisioningArtifact", 
    "ListTagOptions": "servicecatalog:*", 
    "ProvisionProduct": "servicecatalog:ProvisionProduct", 
    "RejectPortfolioShare": "servicecatalog:RejectPortfolioShare", 
    "ScanProvisionedProducts": "servicecatalog:ScanProvisionedProducts", 
    "SearchProducts": "servicecatalog:SearchProducts", 
    "SearchProductsAsAdmin": "servicecatalog:SearchProductsAsAdmin", 
    "SearchProvisionedProducts": "servicecatalog:*", 
    "TerminateProvisionedProduct": "servicecatalog:TerminateProvisionedProduct", 
    "UpdateConstraint": "servicecatalog:UpdateConstraint", 
    "UpdatePortfolio": "servicecatalog:UpdatePortfolio", 
    "UpdateProduct": "servicecatalog:UpdateProduct", 
    "UpdateProvisionedProduct": "servicecatalog:UpdateProvisionedProduct", 
    "UpdateProvisioningArtifact": "servicecatalog:UpdateProvisioningArtifact", 
    "UpdateServiceAction": "servicecatalog:UpdateServiceAction"
  }, 
  "servicediscovery": {
    "CreateHttpNamespace": "servicediscovery:CreateHttpNamespace", 
    "CreatePrivateDnsNamespace": "servicediscovery:CreatePrivateDnsNamespace", 
    "CreatePublicDnsNamespace": "servicediscovery:CreatePublicDnsNamespace", 
    "CreateService": "servicediscovery:CreateService", 
    "DeleteNamespace": "servicediscovery:DeleteNamespace", 
    "DeleteService": "servicediscovery:DeleteService", 
    "DeregisterInstance": "servicediscovery:DeregisterInstance", 
    "DiscoverInstances": "servicediscovery:DiscoverInstances", 
    "GetInstance": "servicediscovery:GetInstance", 
    "GetInstancesHealthStatus": "servicediscovery:GetInstancesHealthStatus", 
    "GetNamespace": "servicediscovery:GetNamespace", 
    "GetOperation": "servicediscovery:GetOperation", 
    "GetService": "servicediscovery:GetService", 
    "ListInstances": "servicediscovery:ListInstances", 
    "ListNamespaces": "servicediscovery:ListNamespaces", 
    "ListOperations": "servicediscovery:ListOperations", 
    "ListServices": "servicediscovery:ListServices", 
    "RegisterInstance": "servicediscovery:RegisterInstance", 
    "UpdateInstanceCustomHealthStatus": "servicediscovery:*", 
    "UpdateService": "servicediscovery:UpdateService", 
    "UpdateTagOption": "servicecatalog:*"
  }, 
  "ses": {
    "CloneReceiptRuleSet": "ses:CloneReceiptRuleSet", 
    "CreateConfigurationSet": "ses:CreateConfigurationSet", 
    "CreateConfigurationSetEventDestination": "ses:CreateConfigurationSetEventDestination", 
    "CreateConfigurationSetTrackingOptions": "ses:CreateConfigurationSetTrackingOptions", 
    "CreateCustomVerificationEmailTemplate": "ses:CreateCustomVerificationEmailTemplate", 
    "CreateReceiptFilter": "ses:CreateReceiptFilter", 
    "CreateReceiptRule": "ses:CreateReceiptRule", 
    "CreateReceiptRuleSet": "ses:CreateReceiptRuleSet", 
    "CreateTemplate": "ses:CreateTemplate", 
    "DeleteConfigurationSet": "ses:DeleteConfigurationSet", 
    "DeleteConfigurationSetEventDestination": "ses:DeleteConfigurationSetEventDestination", 
    "DeleteConfigurationSetTrackingOptions": "ses:DeleteConfigurationSetTrackingOptions", 
    "DeleteCustomVerificationEmailTemplate": "ses:DeleteCustomVerificationEmailTemplate", 
    "DeleteIdentity": "ses:DeleteIdentity", 
    "DeleteIdentityPolicy": "ses:DeleteIdentityPolicy", 
    "DeleteReceiptFilter": "ses:DeleteReceiptFilter", 
    "DeleteReceiptRule": "ses:DeleteReceiptRule", 
    "DeleteReceiptRuleSet": "ses:DeleteReceiptRuleSet", 
    "DeleteTemplate": "ses:DeleteTemplate", 
    "DeleteVerifiedEmailAddress": "ses:DeleteVerifiedEmailAddress", 
    "DescribeActiveReceiptRuleSet": "ses:DescribeActiveReceiptRuleSet", 
    "DescribeConfigurationSet": "ses:DescribeConfigurationSet", 
    "DescribeReceiptRule": "ses:DescribeReceiptRule", 
    "DescribeReceiptRuleSet": "ses:DescribeReceiptRuleSet", 
    "GetAccountSendingEnabled": "ses:GetAccountSendingEnabled", 
    "GetCustomVerificationEmailTemplate": "ses:GetCustomVerificationEmailTemplate", 
    "GetIdentityDkimAttributes": "ses:GetIdentityDkimAttributes", 
    "GetIdentityMailFromDomainAttributes": "ses:GetIdentityMailFromDomainAttributes", 
    "GetIdentityNotificationAttributes": "ses:GetIdentityNotificationAttributes", 
    "GetIdentityPolicies": "ses:GetIdentityPolicies", 
    "GetIdentityVerificationAttributes": "ses:GetIdentityVerificationAttributes", 
    "GetSendQuota": "ses:GetSendQuota", 
    "GetSendStatistics": "ses:GetSendStatistics", 
    "GetTemplate": "ses:GetTemplate", 
    "ListConfigurationSets": "ses:ListConfigurationSets", 
    "ListCustomVerificationEmailTemplates": "ses:ListCustomVerificationEmailTemplates", 
    "ListIdentities": "ses:ListIdentities", 
    "ListIdentityPolicies": "ses:ListIdentityPolicies", 
    "ListReceiptFilters": "ses:ListReceiptFilters", 
    "ListReceiptRuleSets": "ses:ListReceiptRuleSets", 
    "ListTemplates": "ses:ListTemplates", 
    "ListVerifiedEmailAddresses": "ses:ListVerifiedEmailAddresses", 
    "PutIdentityPolicy": "ses:PutIdentityPolicy", 
    "ReorderReceiptRuleSet": "ses:ReorderReceiptRuleSet", 
    "SendBounce": "ses:SendBounce", 
    "SendBulkTemplatedEmail": "ses:SendBulkTemplatedEmail", 
    "SendCustomVerificationEmail": "ses:SendCustomVerificationEmail", 
    "SendEmail": "ses:SendEmail", 
    "SendRawEmail": "ses:SendRawEmail", 
    "SendTemplatedEmail": "ses:SendTemplatedEmail", 
    "SetActiveReceiptRuleSet": "ses:SetActiveReceiptRuleSet", 
    "SetIdentityDkimEnabled": "ses:SetIdentityDkimEnabled", 
    "SetIdentityFeedbackForwardingEnabled": "ses:SetIdentityFeedbackForwardingEnabled", 
    "SetIdentityHeadersInNotificationsEnabled": "ses:SetIdentityHeadersInNotificationsEnabled", 
    "SetIdentityMailFromDomain": "ses:SetIdentityMailFromDomain", 
    "SetIdentityNotificationTopic": "ses:SetIdentityNotificationTopic", 
    "SetReceiptRulePosition": "ses:SetReceiptRulePosition", 
    "TestRenderTemplate": "ses:TestRenderTemplate", 
    "UpdateAccountSendingEnabled": "ses:UpdateAccountSendingEnabled", 
    "UpdateConfigurationSetEventDestination": "ses:UpdateConfigurationSetEventDestination", 
    "UpdateConfigurationSetReputationMetricsEnabled": "ses:UpdateConfigurationSetReputationMetricsEnabled", 
    "UpdateConfigurationSetSendingEnabled": "ses:UpdateConfigurationSetSendingEnabled", 
    "UpdateConfigurationSetTrackingOptions": "ses:UpdateConfigurationSetTrackingOptions", 
    "UpdateCustomVerificationEmailTemplate": "ses:UpdateCustomVerificationEmailTemplate", 
    "UpdateReceiptRule": "ses:UpdateReceiptRule", 
    "UpdateTemplate": "ses:UpdateTemplate", 
    "VerifyDomainDkim": "ses:VerifyDomainDkim", 
    "VerifyDomainIdentity": "ses:VerifyDomainIdentity", 
    "VerifyEmailAddress": "ses:VerifyEmailAddress", 
    "VerifyEmailIdentity": "ses:VerifyEmailIdentity"
  },
  "sesv2": {
    "CreateConfigurationSet": "ses:CreateConfigurationSet", 
    "CreateConfigurationSetEventDestination": "ses:CreateConfigurationSetEventDestination", 
    "CreateCustomVerificationEmailTemplate": "ses:CreateCustomVerificationEmailTemplate", 
    "CreateDedicatedIpPool": "ses:CreateDedicatedIpPool", 
    "CreateDeliverabilityTestReport": "ses:CreateDeliverabilityTestReport", 
    "CreateEmailIdentity": "ses:CreateEmailIdentity", 
    "CreateEmailIdentityPolicy": "ses:CreateEmailIdentityPolicy", 
    "CreateEmailTemplate": "ses:CreateEmailTemplate", 
    "CreateImportJob": "ses:CreateImportJob", 
    "DeleteConfigurationSet": "ses:DeleteConfigurationSet", 
    "DeleteConfigurationSetEventDestination": "ses:DeleteConfigurationSetEventDestination", 
    "DeleteCustomVerificationEmailTemplate": "ses:DeleteCustomVerificationEmailTemplate", 
    "DeleteDedicatedIpPool": "ses:DeleteDedicatedIpPool", 
    "DeleteEmailIdentity": "ses:DeleteEmailIdentity", 
    "DeleteEmailIdentityPolicy": "ses:DeleteEmailIdentityPolicy", 
    "DeleteEmailTemplate": "ses:DeleteEmailTemplate", 
    "DeleteSuppressedDestination": "ses:DeleteSuppressedDestination", 
    "GetAccount": "ses:GetAccount", 
    "GetBlacklistReports": "ses:GetBlacklistReports", 
    "GetConfigurationSet": "ses:GetConfigurationSet", 
    "GetConfigurationSetEventDestinations": "ses:GetConfigurationSetEventDestinations", 
    "GetCustomVerificationEmailTemplate": "ses:GetCustomVerificationEmailTemplate", 
    "GetDedicatedIp": "ses:GetDedicatedIp", 
    "GetDedicatedIps": "ses:GetDedicatedIps", 
    "GetDeliverabilityDashboardOptions": "ses:GetDeliverabilityDashboardOptions", 
    "GetDeliverabilityTestReport": "ses:GetDeliverabilityTestReport", 
    "GetDomainDeliverabilityCampaign": "ses:GetDomainDeliverabilityCampaign", 
    "GetDomainStatisticsReport": "ses:GetDomainStatisticsReport", 
    "GetEmailIdentity": "ses:GetEmailIdentity", 
    "GetEmailIdentityPolicies": "ses:GetEmailIdentityPolicies", 
    "GetEmailTemplate": "ses:GetEmailTemplate", 
    "GetImportJob": "ses:GetImportJob", 
    "GetSuppressedDestination": "ses:GetSuppressedDestination", 
    "ListConfigurationSets": "ses:ListConfigurationSets", 
    "ListCustomVerificationEmailTemplates": "ses:ListCustomVerificationEmailTemplates", 
    "ListDedicatedIpPools": "ses:ListDedicatedIpPools", 
    "ListDeliverabilityTestReports": "ses:ListDeliverabilityTestReports", 
    "ListDomainDeliverabilityCampaigns": "ses:ListDomainDeliverabilityCampaigns", 
    "ListEmailIdentities": "ses:ListEmailIdentities", 
    "ListEmailTemplates": "ses:ListEmailTemplates", 
    "ListImportJobs": "ses:ListImportJobs", 
    "ListSuppressedDestinations": "ses:ListSuppressedDestinations", 
    "ListTagsForResource": "ses:ListTagsForResource", 
    "PutAccountDedicatedIpWarmupAttributes": "ses:PutAccountDedicatedIpWarmupAttributes", 
    "PutAccountDetails": "ses:PutAccountDetails", 
    "PutAccountSendingAttributes": "ses:PutAccountSendingAttributes", 
    "PutAccountSuppressionAttributes": "ses:PutAccountSuppressionAttributes", 
    "PutConfigurationSetDeliveryOptions": "ses:PutConfigurationSetDeliveryOptions", 
    "PutConfigurationSetReputationOptions": "ses:PutConfigurationSetReputationOptions", 
    "PutConfigurationSetSendingOptions": "ses:PutConfigurationSetSendingOptions", 
    "PutConfigurationSetSuppressionOptions": "ses:PutConfigurationSetSuppressionOptions", 
    "PutConfigurationSetTrackingOptions": "ses:PutConfigurationSetTrackingOptions", 
    "PutDedicatedIpInPool": "ses:PutDedicatedIpInPool", 
    "PutDedicatedIpWarmupAttributes": "ses:PutDedicatedIpWarmupAttributes", 
    "PutDeliverabilityDashboardOption": "ses:PutDeliverabilityDashboardOption", 
    "PutEmailIdentityDkimAttributes": "ses:PutEmailIdentityDkimAttributes", 
    "PutEmailIdentityDkimSigningAttributes": "ses:PutEmailIdentityDkimSigningAttributes", 
    "PutEmailIdentityFeedbackAttributes": "ses:PutEmailIdentityFeedbackAttributes", 
    "PutEmailIdentityMailFromAttributes": "ses:PutEmailIdentityMailFromAttributes", 
    "PutSuppressedDestination": "ses:PutSuppressedDestination", 
    "SendBulkEmail": "ses:SendBulkEmail", 
    "SendCustomVerificationEmail": "ses:SendCustomVerificationEmail", 
    "SendEmail": "ses:SendEmail", 
    "TagResource": "ses:TagResource", 
    "TestRenderEmailTemplate": "ses:TestRenderEmailTemplate", 
    "UntagResource": "ses:UntagResource", 
    "UpdateConfigurationSetEventDestination": "ses:UpdateConfigurationSetEventDestination", 
    "UpdateCustomVerificationEmailTemplate": "ses:UpdateCustomVerificationEmailTemplate", 
    "UpdateEmailIdentityPolicy": "ses:UpdateEmailIdentityPolicy", 
    "UpdateEmailTemplate": "ses:UpdateEmailTemplate"
  }, 
  "shield": {
    "AssociateDRTLogBucket": [
      "shield:AssociateDRTLogBucket", 
      "s3:GetBucketPolicy", 
      "s3:PutBucketPolicy"
    ], 
    "AssociateDRTRole": [
      "shield:AssociateDRTRole", 
      "iam:GetRole", 
      "iam:ListAttachedRolePolicies", 
      "iam:PassRole"
    ], 
    "CreateProtection": "shield:CreateProtection", 
    "CreateSubscription": "shield:CreateSubscription", 
    "DeleteProtection": "shield:DeleteProtection", 
    "DeleteSubscription": "shield:DeleteSubscription", 
    "DescribeAttack": "shield:DescribeAttack", 
    "DescribeDRTAccess": "shield:DescribeDRTAccess", 
    "DescribeEmergencyContactSettings": "shield:DescribeEmergencyContactSettings", 
    "DescribeProtection": "shield:DescribeProtection", 
    "DescribeSubscription": "shield:DescribeSubscription", 
    "DisassociateDRTLogBucket": [
      "shield:DisassociateDRTLogBucket", 
      "s3:DeleteBucketPolicy", 
      "s3:GetBucketPolicy", 
      "s3:PutBucketPolicy"
    ], 
    "DisassociateDRTRole": "shield:DisassociateDRTRole", 
    "GetSubscriptionState": "shield:GetSubscriptionState", 
    "ListAttacks": "shield:ListAttacks", 
    "ListProtections": "shield:ListProtections", 
    "UpdateEmergencyContactSettings": "shield:UpdateEmergencyContactSettings", 
    "UpdateSubscription": "shield:*"
  }, 
  "sms": {
    "CreateApp": "sms:CreateApp", 
    "CreateReplicationJob": "sms:CreateReplicationJob", 
    "DeleteApp": "sms:DeleteApp", 
    "DeleteAppLaunchConfiguration": "sms:DeleteAppLaunchConfiguration", 
    "DeleteAppReplicationConfiguration": "sms:DeleteAppReplicationConfiguration", 
    "DeleteReplicationJob": "sms:DeleteReplicationJob", 
    "DeleteServerCatalog": "sms:DeleteServerCatalog", 
    "DisassociateConnector": "sms:DisassociateConnector", 
    "DisassociateConnectors": "sms:DisassociateConnectors", 
    "GenerateChangeSet": "sms:GenerateChangeSet", 
    "GenerateTemplate": "sms:GenerateTemplate", 
    "GetApp": "sms:GetApp", 
    "GetAppLaunchConfiguration": "sms:GetAppLaunchConfiguration", 
    "GetAppReplicationConfiguration": "sms:GetAppReplicationConfiguration", 
    "GetConnectors": "sms:GetConnectors", 
    "GetReplicationJobs": "sms:GetReplicationJobs", 
    "GetReplicationRuns": "sms:GetReplicationRuns", 
    "GetServers": "sms:GetServers", 
    "ImportServerCatalog": "sms:ImportServerCatalog", 
    "LaunchApp": "sms:LaunchApp", 
    "ListApps": "sms:PutAppLaunchConfiguration", 
    "PutAppLaunchConfiguration": "sms:PutAppLaunchConfiguration", 
    "PutAppReplicationConfiguration": "sms:PutAppReplicationConfiguration", 
    "StartAppReplication": "sms:StartAppReplication", 
    "StartOnDemandReplicationRun": "sms:StartOnDemandReplicationRun", 
    "StopAppReplication": "sms:StopAppReplication", 
    "TerminateApp": "sms:TerminateApp", 
    "UpdateApp": "sms:UpdateApp", 
    "UpdateReplicationJob": "sms:UpdateReplicationJob"
  }, 
  "snowball": {
    "CancelCluster": "snowball:CancelCluster", 
    "CancelJob": "snowball:CancelJob", 
    "CreateAddress": "snowball:CreateAddress", 
    "CreateCluster": "snowball:CreateCluster", 
    "CreateJob": "snowball:CreateJob", 
    "DescribeAddress": "snowball:DescribeAddress", 
    "DescribeAddresses": "snowball:DescribeAddresses", 
    "DescribeCluster": "snowball:DescribeCluster", 
    "DescribeJob": "snowball:DescribeJob", 
    "GetJobManifest": "snowball:GetJobManifest", 
    "GetJobUnlockCode": "snowball:GetJobUnlockCode", 
    "GetSnowballUsage": "snowball:GetSnowballUsage", 
    "ListClusterJobs": "snowball:ListClusterJobs", 
    "ListClusters": "snowball:ListClusters", 
    "ListCompatibleImages": "snowball:*", 
    "ListJobs": "snowball:ListJobs", 
    "UpdateCluster": "snowball:UpdateCluster", 
    "UpdateJob": "snowball:UpdateJob"
  }, 
  "sns": {
    "AddPermission": "sns:AddPermission", 
    "CheckIfPhoneNumberIsOptedOut": "sns:CheckIfPhoneNumberIsOptedOut", 
    "ConfirmSubscription": "sns:ConfirmSubscription", 
    "CreatePlatformApplication": "sns:CreatePlatformApplication", 
    "CreatePlatformEndpoint": "sns:CreatePlatformEndpoint", 
    "CreateTopic": "sns:CreateTopic", 
    "DeleteEndpoint": "sns:DeleteEndpoint", 
    "DeletePlatformApplication": "sns:DeletePlatformApplication", 
    "DeleteTopic": "sns:DeleteTopic", 
    "GetEndpointAttributes": "sns:GetEndpointAttributes", 
    "GetPlatformApplicationAttributes": "sns:GetPlatformApplicationAttributes", 
    "GetSMSAttributes": "sns:GetSMSAttributes", 
    "GetSubscriptionAttributes": "sns:GetSubscriptionAttributes", 
    "GetTopicAttributes": "sns:GetTopicAttributes", 
    "ListEndpointsByPlatformApplication": "sns:ListEndpointsByPlatformApplication", 
    "ListPhoneNumbersOptedOut": "sns:ListPhoneNumbersOptedOut", 
    "ListPlatformApplications": "sns:ListPlatformApplications", 
    "ListSubscriptions": "sns:ListSubscriptions", 
    "ListSubscriptionsByTopic": "sns:ListSubscriptionsByTopic", 
    "ListTopics": "sns:ListTopics", 
    "OptInPhoneNumber": "sns:OptInPhoneNumber", 
    "Publish": "sns:Publish", 
    "RemovePermission": "sns:RemovePermission", 
    "SetEndpointAttributes": "sns:SetEndpointAttributes", 
    "SetPlatformApplicationAttributes": "sns:SetPlatformApplicationAttributes", 
    "SetSMSAttributes": "sns:SetSMSAttributes", 
    "SetSubscriptionAttributes": "sns:SetSubscriptionAttributes", 
    "SetTopicAttributes": "sns:SetTopicAttributes", 
    "Subscribe": "sns:Subscribe", 
    "Unsubscribe": "sns:Unsubscribe"
  }, 
  "sqs": {
    "AddPermission": "sqs:AddPermission", 
    "ChangeMessageVisibility": "sqs:ChangeMessageVisibility", 
    "ChangeMessageVisibilityBatch": [
      "sqs:ChangeMessageVisibility", 
      "sqs:ChangeMessageVisibilityBatch"
    ], 
    "CreateQueue": "sqs:CreateQueue", 
    "DeleteMessage": "sqs:DeleteMessage", 
    "DeleteMessageBatch": [
      "sqs:DeleteMessage", 
      "sqs:DeleteMessageBatch"
    ], 
    "DeleteQueue": "sqs:DeleteQueue", 
    "GetQueueAttributes": "sqs:GetQueueAttributes", 
    "GetQueueUrl": "sqs:GetQueueUrl", 
    "ListDeadLetterSourceQueues": "sqs:ListDeadLetterSourceQueues", 
    "ListQueueTags": "sqs:ListQueueTags", 
    "ListQueues": "sqs:ListQueues", 
    "PurgeQueue": "sqs:PurgeQueue", 
    "ReceiveMessage": "sqs:ReceiveMessage", 
    "RemovePermission": "sqs:RemovePermission", 
    "SendMessage": "sqs:SendMessage", 
    "SendMessageBatch": [
      "sqs:SendMessage", 
      "sqs:SendMessageBatch"
    ], 
    "SetQueueAttributes": "sqs:SetQueueAttributes", 
    "TagQueue": "sqs:TagQueue", 
    "UntagQueue": "sqs:UntagQueue"
  }, 
  "ssm": {
    "AddTagsToResource": "ssm:AddTagsToResource", 
    "CancelCommand": "ssm:CancelCommand", 
    "CancelMaintenanceWindowExecution": "ssm:CancelMaintenanceWindowExecution", 
    "CreateActivation": "ssm:CreateActivation", 
    "CreateAssociation": "ssm:CreateAssociation", 
    "CreateAssociationBatch": "ssm:CreateAssociationBatch", 
    "CreateDocument": "ssm:CreateDocument", 
    "CreateMaintenanceWindow": "ssm:CreateMaintenanceWindow", 
    "CreatePatchBaseline": "ssm:CreatePatchBaseline", 
    "CreateResourceDataSync": "ssm:CreateResourceDataSync", 
    "DeleteActivation": "ssm:DeleteActivation", 
    "DeleteAssociation": "ssm:DeleteAssociation", 
    "DeleteDocument": "ssm:DeleteDocument", 
    "DeleteInventory": "ssm:*", 
    "DeleteMaintenanceWindow": "ssm:DeleteMaintenanceWindow", 
    "DeleteParameter": "ssm:DeleteParameter", 
    "DeleteParameters": "ssm:DeleteParameters", 
    "DeletePatchBaseline": "ssm:DeletePatchBaseline", 
    "DeleteResourceDataSync": "ssm:DeleteResourceDataSync", 
    "DeregisterManagedInstance": "ssm:DeregisterManagedInstance", 
    "DeregisterPatchBaselineForPatchGroup": "ssm:DeregisterPatchBaselineForPatchGroup", 
    "DeregisterTargetFromMaintenanceWindow": "ssm:DeregisterTargetFromMaintenanceWindow", 
    "DeregisterTaskFromMaintenanceWindow": "ssm:DeregisterTaskFromMaintenanceWindow", 
    "DescribeActivations": "ssm:DescribeActivations", 
    "DescribeAssociation": "ssm:DescribeAssociation", 
    "DescribeAssociationExecutionTargets": "ssm:*", 
    "DescribeAssociationExecutions": "ssm:*", 
    "DescribeAutomationExecutions": "ssm:DescribeAutomationExecutions", 
    "DescribeAutomationStepExecutions": "ssm:DescribeAutomationStepExecutions", 
    "DescribeAvailablePatches": "ssm:DescribeAvailablePatches", 
    "DescribeDocument": "ssm:DescribeDocument", 
    "DescribeDocumentParameters": "ssm:DescribeDocumentParameters", 
    "DescribeDocumentPermission": "ssm:DescribeDocumentPermission", 
    "DescribeEffectiveInstanceAssociations": "ssm:DescribeEffectiveInstanceAssociations", 
    "DescribeEffectivePatchesForPatchBaseline": "ssm:DescribeEffectivePatchesForPatchBaseline", 
    "DescribeInstanceAssociationsStatus": "ssm:DescribeInstanceAssociationsStatus", 
    "DescribeInstanceInformation": "ssm:DescribeInstanceInformation", 
    "DescribeInstancePatchStates": "ssm:DescribeInstancePatchStates", 
    "DescribeInstancePatchStatesForPatchGroup": "ssm:DescribeInstancePatchStatesForPatchGroup", 
    "DescribeInstancePatches": "ssm:DescribeInstancePatches", 
    "DescribeInstanceProperties": "ssm:DescribeInstanceProperties", 
    "DescribeInventoryDeletions": "ssm:*", 
    "DescribeMaintenanceWindowExecutionTaskInvocations": "ssm:DescribeMaintenanceWindowExecutionTaskInvocations", 
    "DescribeMaintenanceWindowExecutionTasks": "ssm:DescribeMaintenanceWindowExecutionTasks", 
    "DescribeMaintenanceWindowExecutions": "ssm:DescribeMaintenanceWindowExecutions", 
    "DescribeMaintenanceWindowSchedule": "ssm:DescribeMaintenanceWindowSchedule", 
    "DescribeMaintenanceWindowTargets": "ssm:DescribeMaintenanceWindowTargets", 
    "DescribeMaintenanceWindowTasks": "ssm:DescribeMaintenanceWindowTasks", 
    "DescribeMaintenanceWindows": "ssm:DescribeMaintenanceWindows", 
    "DescribeMaintenanceWindowsForTarget": "ssm:DescribeMaintenanceWindowsForTarget", 
    "DescribeParameters": "ssm:DescribeParameters", 
    "DescribePatchBaselines": "ssm:DescribePatchBaselines", 
    "DescribePatchGroupState": "ssm:DescribePatchGroupState", 
    "DescribePatchGroups": "ssm:DescribePatchGroups", 
    "DescribeSessions": "ssm:DescribeSessions", 
    "GetAutomationExecution": "ssm:GetAutomationExecution", 
    "GetCommandInvocation": "ssm:GetCommandInvocation", 
    "GetConnectionStatus": "ssm:GetConnectionStatus", 
    "GetDefaultPatchBaseline": "ssm:GetDefaultPatchBaseline", 
    "GetDeployablePatchSnapshotForInstance": "ssm:GetDeployablePatchSnapshotForInstance", 
    "GetDocument": "ssm:GetDocument", 
    "GetInventory": "ssm:GetInventory", 
    "GetInventorySchema": "ssm:GetInventorySchema", 
    "GetMaintenanceWindow": "ssm:GetMaintenanceWindow", 
    "GetMaintenanceWindowExecution": "ssm:GetMaintenanceWindowExecution", 
    "GetMaintenanceWindowExecutionTask": "ssm:GetMaintenanceWindowExecutionTask", 
    "GetMaintenanceWindowExecutionTaskInvocation": "ssm:GetMaintenanceWindowExecutionTaskInvocation", 
    "GetMaintenanceWindowTask": "ssm:GetMaintenanceWindowTask", 
    "GetManifest": "ssm:GetManifest", 
    "GetParameter": "ssm:GetParameter", 
    "GetParameterHistory": "ssm:GetParameterHistory", 
    "GetParameters": "ssm:GetParameters", 
    "GetParametersByPath": "ssm:GetParametersByPath", 
    "GetPatchBaseline": "ssm:GetPatchBaseline", 
    "GetPatchBaselineForPatchGroup": "ssm:GetPatchBaselineForPatchGroup", 
    "LabelParameterVersion": "ssm:*", 
    "ListAssociationVersions": "ssm:ListAssociationVersions", 
    "ListAssociations": "ssm:ListAssociations", 
    "ListCommandInvocations": "ssm:ListCommandInvocations", 
    "ListCommands": "ssm:ListCommands", 
    "ListComplianceItems": "ssm:*", 
    "ListComplianceSummaries": "ssm:*", 
    "ListDocumentVersions": "ssm:ListDocumentVersions", 
    "ListDocuments": "ssm:ListDocuments", 
    "ListInventoryEntries": "ssm:ListInventoryEntries", 
    "ListResourceComplianceSummaries": "ssm:*", 
    "ListResourceDataSync": "ssm:ListResourceDataSync", 
    "ListTagsForResource": "ssm:ListTagsForResource", 
    "ModifyDocumentPermission": "ssm:ModifyDocumentPermission", 
    "PutComplianceItems": "ssm:PutComplianceItems", 
    "PutConfigurePackageResult": "ssm:PutConfigurePackageResult", 
    "PutInventory": "ssm:PutInventory", 
    "PutParameter": "ssm:PutParameter", 
    "RegisterDefaultPatchBaseline": "ssm:RegisterDefaultPatchBaseline", 
    "RegisterPatchBaselineForPatchGroup": "ssm:RegisterPatchBaselineForPatchGroup", 
    "RegisterTargetWithMaintenanceWindow": "ssm:RegisterTargetWithMaintenanceWindow", 
    "RegisterTaskWithMaintenanceWindow": "ssm:RegisterTaskWithMaintenanceWindow", 
    "RemoveTagsFromResource": "ssm:RemoveTagsFromResource", 
    "ResumeSession": "ssm:ResumeSession", 
    "SendAutomationSignal": "ssm:SendAutomationSignal", 
    "SendCommand": "ssm:SendCommand", 
    "StartAssociationsOnce": "ssm:*", 
    "StartAutomationExecution": "ssm:StartAutomationExecution", 
    "StartSession": "ssm:StartSession", 
    "StopAutomationExecution": "ssm:StopAutomationExecution", 
    "TerminateSession": "ssm:TerminateSession", 
    "UpdateAssociation": "ssm:UpdateAssociation", 
    "UpdateAssociationStatus": "ssm:UpdateAssociationStatus", 
    "UpdateDocument": "ssm:UpdateDocument", 
    "UpdateDocumentDefaultVersion": "ssm:UpdateDocumentDefaultVersion", 
    "UpdateInstanceInformation": "ssm:UpdateInstanceInformation", 
    "UpdateMaintenanceWindow": "ssm:UpdateMaintenanceWindow", 
    "UpdateMaintenanceWindowTarget": "ssm:UpdateMaintenanceWindowTarget", 
    "UpdateMaintenanceWindowTask": "ssm:UpdateMaintenanceWindowTask", 
    "UpdateManagedInstanceRole": "ssm:UpdateManagedInstanceRole", 
    "UpdatePatchBaseline": "ssm:UpdatePatchBaseline"
  }, 
  "stepfunctions": {
    "CreateActivity": "states:CreateActivity", 
    "CreateStateMachine": "states:CreateStateMachine", 
    "DeleteActivity": "states:DeleteActivity", 
    "DeleteStateMachine": "states:DeleteStateMachine", 
    "DescribeActivity": "states:DescribeActivity", 
    "DescribeExecution": "states:DescribeExecution", 
    "DescribeStateMachine": "states:DescribeStateMachine", 
    "DescribeStateMachineForExecution": "states:DescribeStateMachineForExecution", 
    "GetActivityTask": "states:GetActivityTask", 
    "GetExecutionHistory": "states:GetExecutionHistory", 
    "ListActivities": "states:ListActivities", 
    "ListExecutions": "states:ListExecutions", 
    "ListStateMachines": "states:ListStateMachines", 
    "ListTagsForResource": "states:ListTagsForResource", 
    "SendTaskFailure": "states:SendTaskFailure", 
    "SendTaskHeartbeat": "states:SendTaskHeartbeat", 
    "SendTaskSuccess": "states:SendTaskSuccess", 
    "StartExecution": "states:StartExecution", 
    "StopExecution": "states:StopExecution", 
    "TagResource": "states:TagResource", 
    "UntagResource": "states:UntagResource", 
    "UpdateStateMachine": "states:UpdateStateMachine"
  }, 
  "storagegateway": {
    "ActivateGateway": "storagegateway:ActivateGateway", 
    "AddCache": "storagegateway:AddCache", 
    "AddTagsToResource": "storagegateway:AddTagsToResource", 
    "AddUploadBuffer": "storagegateway:AddUploadBuffer", 
    "AddWorkingStorage": "storagegateway:AddWorkingStorage", 
    "AssignTapePool": "storagegateway:AssignTapePool", 
    "AttachVolume": "storagegateway:AttachVolume", 
    "CancelArchival": "storagegateway:CancelArchival", 
    "CancelRetrieval": "storagegateway:CancelRetrieval", 
    "CreateCachediSCSIVolume": "storagegateway:CreateCachediSCSIVolume", 
    "CreateNFSFileShare": "storagegateway:CreateNFSFileShare", 
    "CreateSMBFileShare": "storagegateway:CreateSMBFileShare", 
    "CreateSnapshot": "storagegateway:CreateSnapshot", 
    "CreateSnapshotFromVolumeRecoveryPoint": "storagegateway:CreateSnapshotFromVolumeRecoveryPoint", 
    "CreateStorediSCSIVolume": "storagegateway:CreateStorediSCSIVolume", 
    "CreateTapeWithBarcode": "storagegateway:CreateTapeWithBarcode", 
    "CreateTapes": "storagegateway:CreateTapes", 
    "DeleteBandwidthRateLimit": "storagegateway:DeleteBandwidthRateLimit", 
    "DeleteChapCredentials": "storagegateway:DeleteChapCredentials", 
    "DeleteFileShare": "storagegateway:DeleteFileShare", 
    "DeleteGateway": "storagegateway:DeleteGateway", 
    "DeleteSnapshotSchedule": "storagegateway:DeleteSnapshotSchedule", 
    "DeleteTape": "storagegateway:DeleteTape", 
    "DeleteTapeArchive": "storagegateway:DeleteTapeArchive", 
    "DeleteVolume": "storagegateway:DeleteVolume", 
    "DescribeBandwidthRateLimit": "storagegateway:DescribeBandwidthRateLimit", 
    "DescribeCache": "storagegateway:DescribeCache", 
    "DescribeCachediSCSIVolumes": "storagegateway:DescribeCachediSCSIVolumes", 
    "DescribeChapCredentials": "storagegateway:DescribeChapCredentials", 
    "DescribeGatewayInformation": "storagegateway:DescribeGatewayInformation", 
    "DescribeMaintenanceStartTime": "storagegateway:DescribeMaintenanceStartTime", 
    "DescribeNFSFileShares": "storagegateway:DescribeNFSFileShares", 
    "DescribeSMBFileShares": "storagegateway:DescribeSMBFileShares", 
    "DescribeSMBSettings": "storagegateway:DescribeSMBSettings", 
    "DescribeSnapshotSchedule": "storagegateway:DescribeSnapshotSchedule", 
    "DescribeStorediSCSIVolumes": "storagegateway:DescribeStorediSCSIVolumes", 
    "DescribeTapeArchives": "storagegateway:DescribeTapeArchives", 
    "DescribeTapeRecoveryPoints": "storagegateway:DescribeTapeRecoveryPoints", 
    "DescribeTapes": "storagegateway:DescribeTapes", 
    "DescribeUploadBuffer": "storagegateway:DescribeUploadBuffer", 
    "DescribeVTLDevices": "storagegateway:DescribeVTLDevices", 
    "DescribeWorkingStorage": "storagegateway:DescribeWorkingStorage", 
    "DetachVolume": "storagegateway:DetachVolume", 
    "DisableGateway": "storagegateway:DisableGateway", 
    "JoinDomain": "storagegateway:JoinDomain", 
    "ListFileShares": "storagegateway:ListFileShares", 
    "ListGateways": "storagegateway:ListGateways", 
    "ListLocalDisks": "storagegateway:ListLocalDisks", 
    "ListTagsForResource": "storagegateway:ListTagsForResource", 
    "ListTapes": "storagegateway:ListTapes", 
    "ListVolumeInitiators": "storagegateway:ListVolumeInitiators", 
    "ListVolumeRecoveryPoints": "storagegateway:ListVolumeRecoveryPoints", 
    "ListVolumes": "storagegateway:ListVolumes", 
    "NotifyWhenUploaded": "storagegateway:NotifyWhenUploaded", 
    "RefreshCache": "storagegateway:RefreshCache", 
    "RemoveTagsFromResource": "storagegateway:RemoveTagsFromResource", 
    "ResetCache": "storagegateway:ResetCache", 
    "RetrieveTapeArchive": "storagegateway:RetrieveTapeArchive", 
    "RetrieveTapeRecoveryPoint": "storagegateway:RetrieveTapeRecoveryPoint", 
    "SetLocalConsolePassword": "storagegateway:SetLocalConsolePassword", 
    "SetSMBGuestPassword": "storagegateway:SetSMBGuestPassword", 
    "ShutdownGateway": "storagegateway:ShutdownGateway", 
    "StartGateway": "storagegateway:StartGateway", 
    "UpdateBandwidthRateLimit": "storagegateway:UpdateBandwidthRateLimit", 
    "UpdateChapCredentials": "storagegateway:UpdateChapCredentials", 
    "UpdateGatewayInformation": "storagegateway:UpdateGatewayInformation", 
    "UpdateGatewaySoftwareNow": "storagegateway:UpdateGatewaySoftwareNow", 
    "UpdateMaintenanceStartTime": "storagegateway:UpdateMaintenanceStartTime", 
    "UpdateNFSFileShare": "storagegateway:UpdateNFSFileShare", 
    "UpdateSMBFileShare": "storagegateway:UpdateSMBFileShare", 
    "UpdateSMBSecurityStrategy": "storagegateway:UpdateSMBSecurityStrategy", 
    "UpdateSnapshotSchedule": "storagegateway:UpdateSnapshotSchedule", 
    "UpdateVTLDeviceType": "storagegateway:UpdateVTLDeviceType"
  }, 
  "sts": {
    "AssumeRole": "sts:AssumeRole", 
    "AssumeRoleWithSAML": "sts:AssumeRoleWithSAML", 
    "AssumeRoleWithWebIdentity": "sts:AssumeRoleWithWebIdentity", 
    "DecodeAuthorizationMessage": "sts:DecodeAuthorizationMessage", 
    "GetCallerIdentity": "sts:GetCallerIdentity", 
    "GetFederationToken": "sts:GetFederationToken", 
    "GetSessionToken": "sts:GetSessionToken"
  }, 
  "support": {
    "AddAttachmentsToSet": "support:AddAttachmentsToSet", 
    "AddCommunicationToCase": "support:AddCommunicationToCase", 
    "CreateCase": "support:CreateCase", 
    "DescribeAttachment": "support:DescribeAttachment", 
    "DescribeCases": "support:DescribeCases", 
    "DescribeCommunications": "support:DescribeCommunications", 
    "DescribeServices": "support:DescribeServices", 
    "DescribeSeverityLevels": "support:DescribeSeverityLevels", 
    "DescribeTrustedAdvisorCheckRefreshStatuses": "support:DescribeTrustedAdvisorCheckRefreshStatuses", 
    "DescribeTrustedAdvisorCheckResult": "support:DescribeTrustedAdvisorCheckResult", 
    "DescribeTrustedAdvisorCheckSummaries": "support:DescribeTrustedAdvisorCheckSummaries", 
    "DescribeTrustedAdvisorChecks": "support:DescribeTrustedAdvisorChecks", 
    "RefreshTrustedAdvisorCheck": "support:RefreshTrustedAdvisorCheck", 
    "ResolveCase": "support:ResolveCase"
  }, 
  "swf": {
    "CancelTimer": "swf:CancelTimer", 
    "CancelWorkflowExecution": "swf:CancelWorkflowExecution", 
    "CompleteWorkflowExecution": "swf:CompleteWorkflowExecution", 
    "ContinueAsNewWorkflowExecution": "swf:ContinueAsNewWorkflowExecution", 
    "CountClosedWorkflowExecutions": "swf:CountClosedWorkflowExecutions", 
    "CountOpenWorkflowExecutions": "swf:CountOpenWorkflowExecutions", 
    "CountPendingActivityTasks": "swf:CountPendingActivityTasks", 
    "CountPendingDecisionTasks": "swf:CountPendingDecisionTasks", 
    "DeprecateActivityType": "swf:DeprecateActivityType", 
    "DeprecateDomain": "swf:DeprecateDomain", 
    "DeprecateWorkflowType": "swf:DeprecateWorkflowType", 
    "DescribeActivityType": "swf:DescribeActivityType", 
    "DescribeDomain": "swf:DescribeDomain", 
    "DescribeWorkflowExecution": "swf:DescribeWorkflowExecution", 
    "DescribeWorkflowType": "swf:DescribeWorkflowType", 
    "FailWorkflowExecution": "swf:FailWorkflowExecution", 
    "GetWorkflowExecutionHistory": "swf:GetWorkflowExecutionHistory", 
    "ListActivityTypes": "swf:ListActivityTypes", 
    "ListClosedWorkflowExecutions": "swf:ListClosedWorkflowExecutions", 
    "ListDomains": "swf:ListDomains", 
    "ListOpenWorkflowExecutions": "swf:ListOpenWorkflowExecutions", 
    "ListWorkflowTypes": "swf:ListWorkflowTypes", 
    "PollForActivityTask": "swf:PollForActivityTask", 
    "PollForDecisionTask": "swf:PollForDecisionTask", 
    "RecordActivityTaskHeartbeat": "swf:RecordActivityTaskHeartbeat", 
    "RecordMarker": "swf:RecordMarker", 
    "RegisterActivityType": "swf:RegisterActivityType", 
    "RegisterDomain": "swf:RegisterDomain", 
    "RegisterWorkflowType": "swf:RegisterWorkflowType", 
    "RequestCancelActivityTask": "swf:RequestCancelActivityTask", 
    "RequestCancelExternalWorkflowExecution": "swf:RequestCancelExternalWorkflowExecution", 
    "RequestCancelWorkflowExecution": "swf:RequestCancelWorkflowExecution", 
    "RespondActivityTaskCanceled": "swf:RespondActivityTaskCanceled", 
    "RespondActivityTaskCompleted": "swf:RespondActivityTaskCompleted", 
    "RespondActivityTaskFailed": "swf:RespondActivityTaskFailed", 
    "RespondDecisionTaskCompleted": "swf:RespondDecisionTaskCompleted", 
    "ScheduleActivityTask": "swf:ScheduleActivityTask", 
    "SignalExternalWorkflowExecution": "swf:SignalExternalWorkflowExecution", 
    "SignalWorkflowExecution": "swf:SignalWorkflowExecution", 
    "StartChildWorkflowExecution": "swf:StartChildWorkflowExecution", 
    "StartTimer": "swf:StartTimer", 
    "StartWorkflowExecution": "swf:StartWorkflowExecution", 
    "TerminateWorkflowExecution": "swf:TerminateWorkflowExecution"
  }, 
  "transcribe": {
    "CreateVocabulary": "transcribe:*", 
    "DeleteTranscriptionJob": "transcribe:*", 
    "DeleteVocabulary": "transcribe:*", 
    "GetTranscriptionJob": "transcribe:GetTranscriptionJob", 
    "GetVocabulary": "transcribe:*", 
    "ListTranscriptionJobs": "transcribe:ListTranscriptionJobs", 
    "ListVocabularies": "transcribe:*", 
    "StartStreamTranscription\t": "transcribe:*", 
    "StartTranscriptionJob": "transcribe:StartTranscriptionJob", 
    "UpdateVocabulary": "transcribe:*"
  }, 
  "translate": {
    "DeleteTerminology": "translate:DeleteTerminology", 
    "GetTerminology": "translate:GetTerminology", 
    "ImportTerminology": "translate:ImportTerminology", 
    "ListTerminologies": "translate:ListTerminologies", 
    "TranslateText": "translate:TranslateText"
  }, 
  "waf": {
    "CreateByteMatchSet": "waf:CreateByteMatchSet", 
    "CreateGeoMatchSet": "waf:CreateGeoMatchSet", 
    "CreateIPSet": "waf:CreateIPSet", 
    "CreateRateBasedRule": "waf:CreateRateBasedRule", 
    "CreateRegexMatchSet": "waf:CreateRegexMatchSet", 
    "CreateRegexPatternSet": "waf:CreateRegexPatternSet", 
    "CreateRule": "waf:CreateRule", 
    "CreateRuleGroup": "waf:CreateRuleGroup", 
    "CreateSizeConstraintSet": "waf:CreateSizeConstraintSet", 
    "CreateSqlInjectionMatchSet": "waf:CreateSqlInjectionMatchSet", 
    "CreateWebACL": "waf:CreateWebACL", 
    "CreateXssMatchSet": "waf:CreateXssMatchSet", 
    "DeleteByteMatchSet": "waf:DeleteByteMatchSet", 
    "DeleteGeoMatchSet": "waf:DeleteGeoMatchSet", 
    "DeleteIPSet": "waf:DeleteIPSet", 
    "DeleteLoggingConfiguration": "waf:DeleteLoggingConfiguration", 
    "DeletePermissionPolicy": "waf:DeletePermissionPolicy", 
    "DeleteRateBasedRule": "waf:DeleteRateBasedRule", 
    "DeleteRegexMatchSet": "waf:DeleteRegexMatchSet", 
    "DeleteRegexPatternSet": "waf:DeleteRegexPatternSet", 
    "DeleteRule": "waf:DeleteRule", 
    "DeleteRuleGroup": "waf:DeleteRuleGroup", 
    "DeleteSizeConstraintSet": "waf:DeleteSizeConstraintSet", 
    "DeleteSqlInjectionMatchSet": "waf:DeleteSqlInjectionMatchSet", 
    "DeleteWebACL": "waf:DeleteWebACL", 
    "DeleteXssMatchSet": "waf:DeleteXssMatchSet", 
    "GetByteMatchSet": "waf:GetByteMatchSet", 
    "GetChangeToken": "waf:GetChangeToken", 
    "GetChangeTokenStatus": "waf:GetChangeTokenStatus", 
    "GetGeoMatchSet": "waf:GetGeoMatchSet", 
    "GetIPSet": "waf:GetIPSet", 
    "GetLoggingConfiguration": "waf:GetLoggingConfiguration", 
    "GetPermissionPolicy": "waf:GetPermissionPolicy", 
    "GetRateBasedRule": "waf:GetRateBasedRule", 
    "GetRateBasedRuleManagedKeys": "waf:GetRateBasedRuleManagedKeys", 
    "GetRegexMatchSet": "waf:GetRegexMatchSet", 
    "GetRegexPatternSet": "waf:GetRegexPatternSet", 
    "GetRule": "waf:GetRule", 
    "GetRuleGroup": "waf:GetRuleGroup", 
    "GetSampledRequests": "waf:GetSampledRequests", 
    "GetSizeConstraintSet": "waf:GetSizeConstraintSet", 
    "GetSqlInjectionMatchSet": "waf:GetSqlInjectionMatchSet", 
    "GetWebACL": "waf:GetWebACL", 
    "GetXssMatchSet": "waf:GetXssMatchSet", 
    "ListActivatedRulesInRuleGroup": "waf:ListActivatedRulesInRuleGroup", 
    "ListByteMatchSets": "waf:ListByteMatchSets", 
    "ListGeoMatchSets": "waf:ListGeoMatchSets", 
    "ListIPSets": "waf:ListIPSets", 
    "ListLoggingConfigurations": "waf:ListLoggingConfigurations", 
    "ListRateBasedRules": "waf:ListRateBasedRules", 
    "ListRegexMatchSets": "waf:ListRegexMatchSets", 
    "ListRegexPatternSets": "waf:ListRegexPatternSets", 
    "ListRuleGroups": "waf:ListRuleGroups", 
    "ListRules": "waf:ListRules", 
    "ListSizeConstraintSets": "waf:ListSizeConstraintSets", 
    "ListSqlInjectionMatchSets": "waf:ListSqlInjectionMatchSets", 
    "ListSubscribedRuleGroups": "waf:ListSubscribedRuleGroups", 
    "ListWebACLs": "waf:ListWebACLs", 
    "ListXssMatchSets": "waf:ListXssMatchSets", 
    "PutLoggingConfiguration": "waf:PutLoggingConfiguration", 
    "PutPermissionPolicy": "waf:PutPermissionPolicy", 
    "UpdateByteMatchSet": "waf:UpdateByteMatchSet", 
    "UpdateGeoMatchSet": "waf:UpdateGeoMatchSet", 
    "UpdateIPSet": "waf:UpdateIPSet", 
    "UpdateRateBasedRule": "waf:UpdateRateBasedRule", 
    "UpdateRegexMatchSet": "waf:UpdateRegexMatchSet", 
    "UpdateRegexPatternSet": "waf:UpdateRegexPatternSet", 
    "UpdateRule": "waf:UpdateRule", 
    "UpdateRuleGroup": "waf:UpdateRuleGroup", 
    "UpdateSizeConstraintSet": "waf:UpdateSizeConstraintSet", 
    "UpdateSqlInjectionMatchSet": "waf:UpdateSqlInjectionMatchSet", 
    "UpdateWebACL": "waf:UpdateWebACL", 
    "UpdateXssMatchSet": "waf:UpdateXssMatchSet"
  }, 
  "waf-regional": {
    "AssociateWebACL": "waf-regional:AssociateWebACL", 
    "CreateByteMatchSet": "waf-regional:CreateByteMatchSet", 
    "CreateGeoMatchSet": "waf-regional:CreateGeoMatchSet", 
    "CreateIPSet": "waf-regional:CreateIPSet", 
    "CreateRateBasedRule": "waf-regional:CreateRateBasedRule", 
    "CreateRegexMatchSet": "waf-regional:CreateRegexMatchSet", 
    "CreateRegexPatternSet": "waf-regional:CreateRegexPatternSet", 
    "CreateRule": "waf-regional:CreateRule", 
    "CreateRuleGroup": "waf-regional:*", 
    "CreateSizeConstraintSet": "waf-regional:CreateSizeConstraintSet", 
    "CreateSqlInjectionMatchSet": "waf-regional:CreateSqlInjectionMatchSet", 
    "CreateWebACL": "waf-regional:CreateWebACL", 
    "CreateXssMatchSet": "waf-regional:CreateXssMatchSet", 
    "DeleteByteMatchSet": "waf-regional:DeleteByteMatchSet", 
    "DeleteGeoMatchSet": "waf-regional:DeleteGeoMatchSet", 
    "DeleteIPSet": "waf-regional:DeleteIPSet", 
    "DeleteLoggingConfiguration": "waf-regional:DeleteLoggingConfiguration", 
    "DeletePermissionPolicy": "waf-regional:*", 
    "DeleteRateBasedRule": "waf-regional:DeleteRateBasedRule", 
    "DeleteRegexMatchSet": "waf-regional:DeleteRegexMatchSet", 
    "DeleteRegexPatternSet": "waf-regional:DeleteRegexPatternSet", 
    "DeleteRule": "waf-regional:DeleteRule", 
    "DeleteRuleGroup": "waf-regional:*", 
    "DeleteSizeConstraintSet": "waf-regional:DeleteSizeConstraintSet", 
    "DeleteSqlInjectionMatchSet": "waf-regional:DeleteSqlInjectionMatchSet", 
    "DeleteWebACL": "waf-regional:DeleteWebACL", 
    "DeleteXssMatchSet": "waf-regional:DeleteXssMatchSet", 
    "DisassociateWebACL": "waf-regional:DisassociateWebACL", 
    "GetByteMatchSet": "waf-regional:GetByteMatchSet", 
    "GetChangeToken": "waf-regional:GetChangeToken", 
    "GetChangeTokenStatus": "waf-regional:GetChangeTokenStatus", 
    "GetGeoMatchSet": "waf-regional:GetGeoMatchSet", 
    "GetIPSet": "waf-regional:GetIPSet", 
    "GetLoggingConfiguration": "waf-regional:GetLoggingConfiguration", 
    "GetPermissionPolicy": "waf-regional:*", 
    "GetRateBasedRule": "waf-regional:GetRateBasedRule", 
    "GetRateBasedRuleManagedKeys": "waf-regional:GetRateBasedRuleManagedKeys", 
    "GetRegexMatchSet": "waf-regional:GetRegexMatchSet", 
    "GetRegexPatternSet": "waf-regional:GetRegexPatternSet", 
    "GetRule": "waf-regional:GetRule", 
    "GetRuleGroup": "waf-regional:*", 
    "GetSampledRequests": "waf-regional:GetSampledRequests", 
    "GetSizeConstraintSet": "waf-regional:GetSizeConstraintSet", 
    "GetSqlInjectionMatchSet": "waf-regional:GetSqlInjectionMatchSet", 
    "GetWebACL": "waf-regional:GetWebACL", 
    "GetWebACLForResource": "waf-regional:GetWebACLForResource", 
    "GetXssMatchSet": "waf-regional:GetXssMatchSet", 
    "ListActivatedRulesInRuleGroup": "waf-regional:*", 
    "ListByteMatchSets": "waf-regional:ListByteMatchSets", 
    "ListGeoMatchSets": "waf-regional:ListGeoMatchSets", 
    "ListIPSets": "waf-regional:ListIPSets", 
    "ListLoggingConfigurations": "waf-regional:ListLoggingConfigurations", 
    "ListRateBasedRules": "waf-regional:ListRateBasedRules", 
    "ListRegexMatchSets": "waf-regional:ListRegexMatchSets", 
    "ListRegexPatternSets": "waf-regional:ListRegexPatternSets", 
    "ListResourcesForWebACL": "waf-regional:ListResourcesForWebACL", 
    "ListRuleGroups": "waf-regional:*", 
    "ListRules": "waf-regional:ListRules", 
    "ListSizeConstraintSets": "waf-regional:ListSizeConstraintSets", 
    "ListSqlInjectionMatchSets": "waf-regional:ListSqlInjectionMatchSets", 
    "ListSubscribedRuleGroups": "waf-regional:*", 
    "ListWebACLs": "waf-regional:ListWebACLs", 
    "ListXssMatchSets": "waf-regional:ListXssMatchSets", 
    "PutLoggingConfiguration": "waf-regional:PutLoggingConfiguration", 
    "PutPermissionPolicy": "waf-regional:*", 
    "UpdateByteMatchSet": "waf-regional:UpdateByteMatchSet", 
    "UpdateGeoMatchSet": "waf-regional:UpdateGeoMatchSet", 
    "UpdateIPSet": "waf-regional:UpdateIPSet", 
    "UpdateRateBasedRule": "waf-regional:UpdateRateBasedRule", 
    "UpdateRegexMatchSet": "waf-regional:UpdateRegexMatchSet", 
    "UpdateRegexPatternSet": "waf-regional:UpdateRegexPatternSet", 
    "UpdateRule": "waf-regional:UpdateRule", 
    "UpdateRuleGroup": "waf-regional:UpdateRuleGroup", 
    "UpdateSizeConstraintSet": "waf-regional:UpdateSizeConstraintSet", 
    "UpdateSqlInjectionMatchSet": "waf-regional:UpdateSqlInjectionMatchSet", 
    "UpdateWebACL": "waf-regional:UpdateWebACL", 
    "UpdateXssMatchSet": "waf-regional:UpdateXssMatchSet"
  }, 
  "workdocs": {
    "AbortDocumentVersionUpload": "workdocs:AbortDocumentVersionUpload", 
    "ActivateUser": "workdocs:ActivateUser", 
    "AddResourcePermissions": "workdocs:AddResourcePermissions", 
    "AddUserToGroup": "workdocs:AddUserToGroup", 
    "CheckAlias": "workdocs:CheckAlias", 
    "CreateComment": "workdocs:*", 
    "CreateCustomMetadata": "workdocs:*", 
    "CreateFolder": "workdocs:CreateFolder", 
    "CreateInstance": "workdocs:CreateInstance", 
    "CreateLabels": "workdocs:*", 
    "CreateNotificationSubscription": "workdocs:CreateNotificationSubscription", 
    "CreateUser": "workdocs:CreateUser", 
    "DeactivateUser": "workdocs:DeactivateUser", 
    "DeleteComment": "workdocs:*", 
    "DeleteCustomMetadata": "workdocs:*", 
    "DeleteDocument": "workdocs:DeleteDocument", 
    "DeleteFolder": "workdocs:DeleteFolder", 
    "DeleteFolderContents": "workdocs:DeleteFolderContents", 
    "DeleteInstance": "workdocs:DeleteInstance", 
    "DeleteLabels": "workdocs:*", 
    "DeleteNotificationSubscription": "workdocs:DeleteNotificationSubscription", 
    "DeleteUser": "workdocs:DeleteUser", 
    "DeregisterDirectory": "workdocs:DeregisterDirectory", 
    "DescribeActivities": "workdocs:*", 
    "DescribeAvailableDirectories": "workdocs:DescribeAvailableDirectories", 
    "DescribeComments": "workdocs:*", 
    "DescribeDocumentVersions": "workdocs:DescribeDocumentVersions", 
    "DescribeFolderContents": "workdocs:DescribeFolderContents", 
    "DescribeGroups": "workdocs:*", 
    "DescribeInstances": "workdocs:DescribeInstances", 
    "DescribeNotificationSubscriptions": "workdocs:DescribeNotificationSubscriptions", 
    "DescribeResourcePermissions": "workdocs:DescribeResourcePermissions", 
    "DescribeRootFolders": "workdocs:*", 
    "DescribeUsers": "workdocs:DescribeUsers", 
    "DownloadDocumentVersion": "workdocs:DownloadDocumentVersion", 
    "GetCurrentUser": "workdocs:*", 
    "GetDocument": "workdocs:GetDocument", 
    "GetDocumentPath": "workdocs:GetDocumentPath", 
    "GetDocumentVersion": "workdocs:GetDocumentVersion", 
    "GetFolder": "workdocs:GetFolder", 
    "GetFolderPath": "workdocs:GetFolderPath", 
    "GetResources": "workdocs:GetResources", 
    "InitiateDocumentVersionUpload": "workdocs:InitiateDocumentVersionUpload", 
    "RegisterDirectory": "workdocs:RegisterDirectory", 
    "RemoveAllResourcePermissions": "workdocs:RemoveAllResourcePermissions", 
    "RemoveResourcePermission": "workdocs:RemoveResourcePermission", 
    "UpdateDocument": "workdocs:UpdateDocument", 
    "UpdateDocumentVersion": "workdocs:UpdateDocumentVersion", 
    "UpdateFolder": "workdocs:UpdateFolder", 
    "UpdateInstanceAlias": "workdocs:UpdateInstanceAlias", 
    "UpdateUser": "workdocs:UpdateUser"
  }, 
  "workmail": {
    "AssociateDelegateToResource": "workmail:*", 
    "AssociateMemberToGroup": "workmail:*", 
    "CreateAlias": "workmail:*", 
    "CreateGroup": "workmail:CreateGroup", 
    "CreateResource": "workmail:CreateResource", 
    "CreateUser": "workmail:*", 
    "DeleteAlias": "workmail:*", 
    "DeleteGroup": "workmail:*", 
    "DeleteMailboxPermissions": "workmail:*", 
    "DeleteResource": "workmail:*", 
    "DeleteUser": "workmail:*", 
    "DeregisterFromWorkMail": "workmail:*", 
    "DescribeGroup": "workmail:*", 
    "DescribeOrganization": "workmail:*", 
    "DescribeResource": "workmail:*", 
    "DescribeUser": "workmail:*", 
    "DisassociateDelegateFromResource": "workmail:*", 
    "DisassociateMemberFromGroup": "workmail:*", 
    "ListAliases": "workmail:*", 
    "ListGroupMembers": "workmail:*", 
    "ListGroups": "workmail:*", 
    "ListMailboxPermissions": "workmail:*", 
    "ListOrganizations": "workmail:*", 
    "ListResourceDelegates": "workmail:*", 
    "ListResources": "workmail:*", 
    "ListUsers": "workmail:*", 
    "PutMailboxPermissions": "workmail:*", 
    "RegisterToWorkMail": "workmail:*", 
    "ResetPassword": "workmail:*", 
    "UpdatePrimaryEmailAddress": "workmail:*", 
    "UpdateResource": "workmail:*"
  }, 
  "workspaces": {
    "AssociateIpGroups": "workspaces:*", 
    "AuthorizeIpRules": "workspaces:*", 
    "CreateIpGroup": "workspaces:*", 
    "CreateTags": "workspaces:CreateTags", 
    "CreateWorkspaces": "workspaces:CreateWorkspaces", 
    "DeleteIpGroup": "workspaces:*", 
    "DeleteTags": "workspaces:DeleteTags", 
    "DeleteWorkspaceImage": "workspaces:DeleteWorkspaceImage", 
    "DescribeAccount": "workspaces:DescribeAccount", 
    "DescribeAccountModifications": "workspaces:DescribeAccountModifications", 
    "DescribeClientProperties": "workspaces:DescribeClientProperties", 
    "DescribeIpGroups": "workspaces:*", 
    "DescribeTags": "workspaces:DescribeTags", 
    "DescribeWorkspaceBundles": "workspaces:DescribeWorkspaceBundles", 
    "DescribeWorkspaceDirectories": "workspaces:DescribeWorkspaceDirectories", 
    "DescribeWorkspaceImages": "workspaces:DescribeWorkspaceImages", 
    "DescribeWorkspaces": "workspaces:DescribeWorkspaces", 
    "DescribeWorkspacesConnectionStatus": "workspaces:DescribeWorkspacesConnectionStatus", 
    "DisassociateIpGroups": "workspaces:*", 
    "ImportWorkspaceImage": "workspaces:ImportWorkspaceImage", 
    "ListAvailableManagementCidrRanges": "workspaces:ListAvailableManagementCidrRanges", 
    "ModifyAccount": "workspaces:ModifyAccount", 
    "ModifyClientProperties": "workspaces:ModifyClientProperties", 
    "ModifyWorkspaceProperties": "workspaces:ModifyWorkspaceProperties", 
    "ModifyWorkspaceState": "workspaces:*", 
    "RebootWorkspaces": "workspaces:RebootWorkspaces", 
    "RebuildWorkspaces": "workspaces:RebuildWorkspaces", 
    "RevokeIpRules": "workspaces:*", 
    "StartWorkspaces": "workspaces:StartWorkspaces", 
    "StopWorkspaces": "workspaces:StopWorkspaces", 
    "TerminateWorkspaces": "workspaces:TerminateWorkspaces", 
    "UpdateRulesOfIpGroup": "workspaces:*"
  }, 
  "xray": {
    "BatchGetTraces": "xray:BatchGetTraces", 
    "CreateGroup": "xray:CreateGroup", 
    "CreateSamplingRule": "xray:CreateSamplingRule", 
    "DeleteGroup": "xray:DeleteGroup", 
    "DeleteSamplingRule": "xray:DeleteSamplingRule", 
    "GetEncryptionConfig": "xray:GetEncryptionConfig", 
    "GetGroup": "xray:GetGroup", 
    "GetGroups": "xray:GetGroups", 
    "GetSamplingRules": "xray:GetSamplingRules", 
    "GetSamplingStatisticSummaries": "xray:GetSamplingStatisticSummaries", 
    "GetSamplingTargets": "xray:GetSamplingTargets", 
    "GetServiceGraph": "xray:GetServiceGraph", 
    "GetTimeSeriesServiceStatistics": "xray:GetTimeSeriesServiceStatistics", 
    "GetTraceGraph": "xray:GetTraceGraph", 
    "GetTraceSummaries": "xray:GetTraceSummaries", 
    "PutEncryptionConfig": "xray:PutEncryptionConfig", 
    "PutTelemetryRecords": "xray:PutTelemetryRecords", 
    "PutTraceSegments": "xray:PutTraceSegments", 
    "UpdateGroup": "xray:UpdateGroup", 
    "UpdateSamplingRule": "xray:UpdateSamplingRule"
  }
}